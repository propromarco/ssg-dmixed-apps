//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for object_f04 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="object_f04">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}TITLE" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}LOT_NO" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CPV_ADDITIONAL" maxOccurs="100" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NUTS" maxOccurs="20"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}MAIN_SITE" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SHORT_DESCR"/>
 *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}award_criteria_doc" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}VAL_OBJECT" minOccurs="0"/>
 *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}time_frame" minOccurs="0"/>
 *         &lt;sequence minOccurs="0">
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}RENEWAL"/>
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}RENEWAL_DESCR" minOccurs="0"/>
 *         &lt;/sequence>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}ACCEPTED_VARIANTS" minOccurs="0"/>
 *         &lt;sequence minOccurs="0">
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}OPTIONS"/>
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}OPTIONS_DESCR" minOccurs="0"/>
 *         &lt;/sequence>
 *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}eu_union_funds" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}INFO_ADD" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="ITEM" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}nb_lot" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "object_f04", propOrder = {
    "title",
    "lotno",
    "cpvadditionals",
    "nuts",
    "mainsite",
    "shortdescr",
    "acprocurementdoc",
    "acqualities",
    "acprice",
    "accosts",
    "valobject",
    "datestart",
    "dateend",
    "duration",
    "renewal",
    "renewaldescr",
    "acceptedvariants",
    "options",
    "optionsdescr",
    "noeuprogrrelated",
    "euprogrrelated",
    "infoadd"
})
public class ObjectF04
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "TITLE")
    protected TITLE title;
    @XmlElement(name = "LOT_NO")
    protected String lotno;
    @XmlElement(name = "CPV_ADDITIONAL")
    protected List<CpvSet> cpvadditionals;
    @XmlElement(name = "NUTS", required = true)
    protected List<NUTS> nuts;
    @XmlElement(name = "MAIN_SITE")
    protected TextFtMultiLines mainsite;
    @XmlElement(name = "SHORT_DESCR", required = true)
    protected TextFtMultiLines shortdescr;
    @XmlElement(name = "AC_PROCUREMENT_DOC")
    protected Empty acprocurementdoc;
    @XmlElement(name = "AC_QUALITY")
    protected List<AcDefinition> acqualities;
    @XmlElement(name = "AC_PRICE")
    protected ACPRICE acprice;
    @XmlElement(name = "AC_COST")
    protected List<AcDefinition> accosts;
    @XmlElement(name = "VAL_OBJECT")
    protected Val valobject;
    @XmlElement(name = "DATE_START")
    protected XMLGregorianCalendar datestart;
    @XmlElement(name = "DATE_END")
    protected XMLGregorianCalendar dateend;
    @XmlElement(name = "DURATION")
    protected DurationMD duration;
    @XmlElement(name = "RENEWAL")
    protected Empty renewal;
    @XmlElement(name = "RENEWAL_DESCR")
    protected TextFtMultiLines renewaldescr;
    @XmlElement(name = "ACCEPTED_VARIANTS")
    protected Empty acceptedvariants;
    @XmlElement(name = "OPTIONS")
    protected Empty options;
    @XmlElement(name = "OPTIONS_DESCR")
    protected TextFtMultiLines optionsdescr;
    @XmlElement(name = "NO_EU_PROGR_RELATED")
    protected Empty noeuprogrrelated;
    @XmlElement(name = "EU_PROGR_RELATED")
    protected String euprogrrelated;
    @XmlElement(name = "INFO_ADD")
    protected TextFtMultiLines infoadd;
    @XmlAttribute(name = "ITEM", required = true)
    protected int item;

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link TITLE }
     *     
     */
    public TITLE getTITLE() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link TITLE }
     *     
     */
    public void setTITLE(TITLE value) {
        this.title = value;
    }

    /**
     * Gets the value of the lotno property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLOTNO() {
        return lotno;
    }

    /**
     * Sets the value of the lotno property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLOTNO(String value) {
        this.lotno = value;
    }

    /**
     * Gets the value of the cpvadditionals property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the cpvadditionals property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCPVADDITIONALS().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CpvSet }
     * 
     * 
     */
    public List<CpvSet> getCPVADDITIONALS() {
        if (cpvadditionals == null) {
            cpvadditionals = new ArrayList<CpvSet>();
        }
        return this.cpvadditionals;
    }

    /**
     * Gets the value of the nuts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nuts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNUTS().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NUTS }
     * 
     * 
     */
    public List<NUTS> getNUTS() {
        if (nuts == null) {
            nuts = new ArrayList<NUTS>();
        }
        return this.nuts;
    }

    /**
     * Gets the value of the mainsite property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getMAINSITE() {
        return mainsite;
    }

    /**
     * Sets the value of the mainsite property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setMAINSITE(TextFtMultiLines value) {
        this.mainsite = value;
    }

    /**
     * Gets the value of the shortdescr property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getSHORTDESCR() {
        return shortdescr;
    }

    /**
     * Sets the value of the shortdescr property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setSHORTDESCR(TextFtMultiLines value) {
        this.shortdescr = value;
    }

    /**
     * Gets the value of the acprocurementdoc property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getACPROCUREMENTDOC() {
        return acprocurementdoc;
    }

    /**
     * Sets the value of the acprocurementdoc property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setACPROCUREMENTDOC(Empty value) {
        this.acprocurementdoc = value;
    }

    /**
     * Gets the value of the acqualities property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the acqualities property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getACQUALITIES().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AcDefinition }
     * 
     * 
     */
    public List<AcDefinition> getACQUALITIES() {
        if (acqualities == null) {
            acqualities = new ArrayList<AcDefinition>();
        }
        return this.acqualities;
    }

    /**
     * Gets the value of the acprice property.
     * 
     * @return
     *     possible object is
     *     {@link ACPRICE }
     *     
     */
    public ACPRICE getACPRICE() {
        return acprice;
    }

    /**
     * Sets the value of the acprice property.
     * 
     * @param value
     *     allowed object is
     *     {@link ACPRICE }
     *     
     */
    public void setACPRICE(ACPRICE value) {
        this.acprice = value;
    }

    /**
     * Gets the value of the accosts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the accosts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getACCOSTS().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AcDefinition }
     * 
     * 
     */
    public List<AcDefinition> getACCOSTS() {
        if (accosts == null) {
            accosts = new ArrayList<AcDefinition>();
        }
        return this.accosts;
    }

    /**
     * Gets the value of the valobject property.
     * 
     * @return
     *     possible object is
     *     {@link Val }
     *     
     */
    public Val getVALOBJECT() {
        return valobject;
    }

    /**
     * Sets the value of the valobject property.
     * 
     * @param value
     *     allowed object is
     *     {@link Val }
     *     
     */
    public void setVALOBJECT(Val value) {
        this.valobject = value;
    }

    /**
     * Gets the value of the datestart property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDATESTART() {
        return datestart;
    }

    /**
     * Sets the value of the datestart property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDATESTART(XMLGregorianCalendar value) {
        this.datestart = value;
    }

    /**
     * Gets the value of the dateend property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDATEEND() {
        return dateend;
    }

    /**
     * Sets the value of the dateend property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDATEEND(XMLGregorianCalendar value) {
        this.dateend = value;
    }

    /**
     * Gets the value of the duration property.
     * 
     * @return
     *     possible object is
     *     {@link DurationMD }
     *     
     */
    public DurationMD getDURATION() {
        return duration;
    }

    /**
     * Sets the value of the duration property.
     * 
     * @param value
     *     allowed object is
     *     {@link DurationMD }
     *     
     */
    public void setDURATION(DurationMD value) {
        this.duration = value;
    }

    /**
     * Gets the value of the renewal property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getRENEWAL() {
        return renewal;
    }

    /**
     * Sets the value of the renewal property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setRENEWAL(Empty value) {
        this.renewal = value;
    }

    /**
     * Gets the value of the renewaldescr property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getRENEWALDESCR() {
        return renewaldescr;
    }

    /**
     * Sets the value of the renewaldescr property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setRENEWALDESCR(TextFtMultiLines value) {
        this.renewaldescr = value;
    }

    /**
     * Gets the value of the acceptedvariants property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getACCEPTEDVARIANTS() {
        return acceptedvariants;
    }

    /**
     * Sets the value of the acceptedvariants property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setACCEPTEDVARIANTS(Empty value) {
        this.acceptedvariants = value;
    }

    /**
     * Gets the value of the options property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getOPTIONS() {
        return options;
    }

    /**
     * Sets the value of the options property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setOPTIONS(Empty value) {
        this.options = value;
    }

    /**
     * Gets the value of the optionsdescr property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getOPTIONSDESCR() {
        return optionsdescr;
    }

    /**
     * Sets the value of the optionsdescr property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setOPTIONSDESCR(TextFtMultiLines value) {
        this.optionsdescr = value;
    }

    /**
     * Gets the value of the noeuprogrrelated property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getNOEUPROGRRELATED() {
        return noeuprogrrelated;
    }

    /**
     * Sets the value of the noeuprogrrelated property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setNOEUPROGRRELATED(Empty value) {
        this.noeuprogrrelated = value;
    }

    /**
     * Gets the value of the euprogrrelated property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEUPROGRRELATED() {
        return euprogrrelated;
    }

    /**
     * Sets the value of the euprogrrelated property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEUPROGRRELATED(String value) {
        this.euprogrrelated = value;
    }

    /**
     * Gets the value of the infoadd property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getINFOADD() {
        return infoadd;
    }

    /**
     * Sets the value of the infoadd property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setINFOADD(TextFtMultiLines value) {
        this.infoadd = value;
    }

    /**
     * Gets the value of the item property.
     * 
     */
    public int getITEM() {
        return item;
    }

    /**
     * Sets the value of the item property.
     * 
     */
    public void setITEM(int value) {
        this.item = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ObjectF04)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ObjectF04 that = ((ObjectF04) object);
        {
            TITLE lhsTITLE;
            lhsTITLE = this.getTITLE();
            TITLE rhsTITLE;
            rhsTITLE = that.getTITLE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTITLE), LocatorUtils.property(thatLocator, "title", rhsTITLE), lhsTITLE, rhsTITLE)) {
                return false;
            }
        }
        {
            String lhsLOTNO;
            lhsLOTNO = this.getLOTNO();
            String rhsLOTNO;
            rhsLOTNO = that.getLOTNO();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lotno", lhsLOTNO), LocatorUtils.property(thatLocator, "lotno", rhsLOTNO), lhsLOTNO, rhsLOTNO)) {
                return false;
            }
        }
        {
            List<CpvSet> lhsCPVADDITIONALS;
            lhsCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
            List<CpvSet> rhsCPVADDITIONALS;
            rhsCPVADDITIONALS = (((that.cpvadditionals!= null)&&(!that.cpvadditionals.isEmpty()))?that.getCPVADDITIONALS():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvadditionals", lhsCPVADDITIONALS), LocatorUtils.property(thatLocator, "cpvadditionals", rhsCPVADDITIONALS), lhsCPVADDITIONALS, rhsCPVADDITIONALS)) {
                return false;
            }
        }
        {
            List<NUTS> lhsNUTS;
            lhsNUTS = (((this.nuts!= null)&&(!this.nuts.isEmpty()))?this.getNUTS():null);
            List<NUTS> rhsNUTS;
            rhsNUTS = (((that.nuts!= null)&&(!that.nuts.isEmpty()))?that.getNUTS():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nuts", lhsNUTS), LocatorUtils.property(thatLocator, "nuts", rhsNUTS), lhsNUTS, rhsNUTS)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsMAINSITE;
            lhsMAINSITE = this.getMAINSITE();
            TextFtMultiLines rhsMAINSITE;
            rhsMAINSITE = that.getMAINSITE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mainsite", lhsMAINSITE), LocatorUtils.property(thatLocator, "mainsite", rhsMAINSITE), lhsMAINSITE, rhsMAINSITE)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsSHORTDESCR;
            lhsSHORTDESCR = this.getSHORTDESCR();
            TextFtMultiLines rhsSHORTDESCR;
            rhsSHORTDESCR = that.getSHORTDESCR();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "shortdescr", lhsSHORTDESCR), LocatorUtils.property(thatLocator, "shortdescr", rhsSHORTDESCR), lhsSHORTDESCR, rhsSHORTDESCR)) {
                return false;
            }
        }
        {
            Empty lhsACPROCUREMENTDOC;
            lhsACPROCUREMENTDOC = this.getACPROCUREMENTDOC();
            Empty rhsACPROCUREMENTDOC;
            rhsACPROCUREMENTDOC = that.getACPROCUREMENTDOC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acprocurementdoc", lhsACPROCUREMENTDOC), LocatorUtils.property(thatLocator, "acprocurementdoc", rhsACPROCUREMENTDOC), lhsACPROCUREMENTDOC, rhsACPROCUREMENTDOC)) {
                return false;
            }
        }
        {
            List<AcDefinition> lhsACQUALITIES;
            lhsACQUALITIES = (((this.acqualities!= null)&&(!this.acqualities.isEmpty()))?this.getACQUALITIES():null);
            List<AcDefinition> rhsACQUALITIES;
            rhsACQUALITIES = (((that.acqualities!= null)&&(!that.acqualities.isEmpty()))?that.getACQUALITIES():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acqualities", lhsACQUALITIES), LocatorUtils.property(thatLocator, "acqualities", rhsACQUALITIES), lhsACQUALITIES, rhsACQUALITIES)) {
                return false;
            }
        }
        {
            ACPRICE lhsACPRICE;
            lhsACPRICE = this.getACPRICE();
            ACPRICE rhsACPRICE;
            rhsACPRICE = that.getACPRICE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acprice", lhsACPRICE), LocatorUtils.property(thatLocator, "acprice", rhsACPRICE), lhsACPRICE, rhsACPRICE)) {
                return false;
            }
        }
        {
            List<AcDefinition> lhsACCOSTS;
            lhsACCOSTS = (((this.accosts!= null)&&(!this.accosts.isEmpty()))?this.getACCOSTS():null);
            List<AcDefinition> rhsACCOSTS;
            rhsACCOSTS = (((that.accosts!= null)&&(!that.accosts.isEmpty()))?that.getACCOSTS():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accosts", lhsACCOSTS), LocatorUtils.property(thatLocator, "accosts", rhsACCOSTS), lhsACCOSTS, rhsACCOSTS)) {
                return false;
            }
        }
        {
            Val lhsVALOBJECT;
            lhsVALOBJECT = this.getVALOBJECT();
            Val rhsVALOBJECT;
            rhsVALOBJECT = that.getVALOBJECT();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valobject", lhsVALOBJECT), LocatorUtils.property(thatLocator, "valobject", rhsVALOBJECT), lhsVALOBJECT, rhsVALOBJECT)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDATESTART;
            lhsDATESTART = this.getDATESTART();
            XMLGregorianCalendar rhsDATESTART;
            rhsDATESTART = that.getDATESTART();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "datestart", lhsDATESTART), LocatorUtils.property(thatLocator, "datestart", rhsDATESTART), lhsDATESTART, rhsDATESTART)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDATEEND;
            lhsDATEEND = this.getDATEEND();
            XMLGregorianCalendar rhsDATEEND;
            rhsDATEEND = that.getDATEEND();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateend", lhsDATEEND), LocatorUtils.property(thatLocator, "dateend", rhsDATEEND), lhsDATEEND, rhsDATEEND)) {
                return false;
            }
        }
        {
            DurationMD lhsDURATION;
            lhsDURATION = this.getDURATION();
            DurationMD rhsDURATION;
            rhsDURATION = that.getDURATION();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDURATION), LocatorUtils.property(thatLocator, "duration", rhsDURATION), lhsDURATION, rhsDURATION)) {
                return false;
            }
        }
        {
            Empty lhsRENEWAL;
            lhsRENEWAL = this.getRENEWAL();
            Empty rhsRENEWAL;
            rhsRENEWAL = that.getRENEWAL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "renewal", lhsRENEWAL), LocatorUtils.property(thatLocator, "renewal", rhsRENEWAL), lhsRENEWAL, rhsRENEWAL)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsRENEWALDESCR;
            lhsRENEWALDESCR = this.getRENEWALDESCR();
            TextFtMultiLines rhsRENEWALDESCR;
            rhsRENEWALDESCR = that.getRENEWALDESCR();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "renewaldescr", lhsRENEWALDESCR), LocatorUtils.property(thatLocator, "renewaldescr", rhsRENEWALDESCR), lhsRENEWALDESCR, rhsRENEWALDESCR)) {
                return false;
            }
        }
        {
            Empty lhsACCEPTEDVARIANTS;
            lhsACCEPTEDVARIANTS = this.getACCEPTEDVARIANTS();
            Empty rhsACCEPTEDVARIANTS;
            rhsACCEPTEDVARIANTS = that.getACCEPTEDVARIANTS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acceptedvariants", lhsACCEPTEDVARIANTS), LocatorUtils.property(thatLocator, "acceptedvariants", rhsACCEPTEDVARIANTS), lhsACCEPTEDVARIANTS, rhsACCEPTEDVARIANTS)) {
                return false;
            }
        }
        {
            Empty lhsOPTIONS;
            lhsOPTIONS = this.getOPTIONS();
            Empty rhsOPTIONS;
            rhsOPTIONS = that.getOPTIONS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "options", lhsOPTIONS), LocatorUtils.property(thatLocator, "options", rhsOPTIONS), lhsOPTIONS, rhsOPTIONS)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsOPTIONSDESCR;
            lhsOPTIONSDESCR = this.getOPTIONSDESCR();
            TextFtMultiLines rhsOPTIONSDESCR;
            rhsOPTIONSDESCR = that.getOPTIONSDESCR();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "optionsdescr", lhsOPTIONSDESCR), LocatorUtils.property(thatLocator, "optionsdescr", rhsOPTIONSDESCR), lhsOPTIONSDESCR, rhsOPTIONSDESCR)) {
                return false;
            }
        }
        {
            Empty lhsNOEUPROGRRELATED;
            lhsNOEUPROGRRELATED = this.getNOEUPROGRRELATED();
            Empty rhsNOEUPROGRRELATED;
            rhsNOEUPROGRRELATED = that.getNOEUPROGRRELATED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noeuprogrrelated", lhsNOEUPROGRRELATED), LocatorUtils.property(thatLocator, "noeuprogrrelated", rhsNOEUPROGRRELATED), lhsNOEUPROGRRELATED, rhsNOEUPROGRRELATED)) {
                return false;
            }
        }
        {
            String lhsEUPROGRRELATED;
            lhsEUPROGRRELATED = this.getEUPROGRRELATED();
            String rhsEUPROGRRELATED;
            rhsEUPROGRRELATED = that.getEUPROGRRELATED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "euprogrrelated", lhsEUPROGRRELATED), LocatorUtils.property(thatLocator, "euprogrrelated", rhsEUPROGRRELATED), lhsEUPROGRRELATED, rhsEUPROGRRELATED)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsINFOADD;
            lhsINFOADD = this.getINFOADD();
            TextFtMultiLines rhsINFOADD;
            rhsINFOADD = that.getINFOADD();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "infoadd", lhsINFOADD), LocatorUtils.property(thatLocator, "infoadd", rhsINFOADD), lhsINFOADD, rhsINFOADD)) {
                return false;
            }
        }
        {
            int lhsITEM;
            lhsITEM = (true?this.getITEM(): 0);
            int rhsITEM;
            rhsITEM = (true?that.getITEM(): 0);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "item", lhsITEM), LocatorUtils.property(thatLocator, "item", rhsITEM), lhsITEM, rhsITEM)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            TITLE theTITLE;
            theTITLE = this.getTITLE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTITLE), currentHashCode, theTITLE);
        }
        {
            String theLOTNO;
            theLOTNO = this.getLOTNO();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lotno", theLOTNO), currentHashCode, theLOTNO);
        }
        {
            List<CpvSet> theCPVADDITIONALS;
            theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvadditionals", theCPVADDITIONALS), currentHashCode, theCPVADDITIONALS);
        }
        {
            List<NUTS> theNUTS;
            theNUTS = (((this.nuts!= null)&&(!this.nuts.isEmpty()))?this.getNUTS():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nuts", theNUTS), currentHashCode, theNUTS);
        }
        {
            TextFtMultiLines theMAINSITE;
            theMAINSITE = this.getMAINSITE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mainsite", theMAINSITE), currentHashCode, theMAINSITE);
        }
        {
            TextFtMultiLines theSHORTDESCR;
            theSHORTDESCR = this.getSHORTDESCR();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shortdescr", theSHORTDESCR), currentHashCode, theSHORTDESCR);
        }
        {
            Empty theACPROCUREMENTDOC;
            theACPROCUREMENTDOC = this.getACPROCUREMENTDOC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acprocurementdoc", theACPROCUREMENTDOC), currentHashCode, theACPROCUREMENTDOC);
        }
        {
            List<AcDefinition> theACQUALITIES;
            theACQUALITIES = (((this.acqualities!= null)&&(!this.acqualities.isEmpty()))?this.getACQUALITIES():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acqualities", theACQUALITIES), currentHashCode, theACQUALITIES);
        }
        {
            ACPRICE theACPRICE;
            theACPRICE = this.getACPRICE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acprice", theACPRICE), currentHashCode, theACPRICE);
        }
        {
            List<AcDefinition> theACCOSTS;
            theACCOSTS = (((this.accosts!= null)&&(!this.accosts.isEmpty()))?this.getACCOSTS():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accosts", theACCOSTS), currentHashCode, theACCOSTS);
        }
        {
            Val theVALOBJECT;
            theVALOBJECT = this.getVALOBJECT();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valobject", theVALOBJECT), currentHashCode, theVALOBJECT);
        }
        {
            XMLGregorianCalendar theDATESTART;
            theDATESTART = this.getDATESTART();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "datestart", theDATESTART), currentHashCode, theDATESTART);
        }
        {
            XMLGregorianCalendar theDATEEND;
            theDATEEND = this.getDATEEND();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateend", theDATEEND), currentHashCode, theDATEEND);
        }
        {
            DurationMD theDURATION;
            theDURATION = this.getDURATION();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDURATION), currentHashCode, theDURATION);
        }
        {
            Empty theRENEWAL;
            theRENEWAL = this.getRENEWAL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "renewal", theRENEWAL), currentHashCode, theRENEWAL);
        }
        {
            TextFtMultiLines theRENEWALDESCR;
            theRENEWALDESCR = this.getRENEWALDESCR();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "renewaldescr", theRENEWALDESCR), currentHashCode, theRENEWALDESCR);
        }
        {
            Empty theACCEPTEDVARIANTS;
            theACCEPTEDVARIANTS = this.getACCEPTEDVARIANTS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acceptedvariants", theACCEPTEDVARIANTS), currentHashCode, theACCEPTEDVARIANTS);
        }
        {
            Empty theOPTIONS;
            theOPTIONS = this.getOPTIONS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "options", theOPTIONS), currentHashCode, theOPTIONS);
        }
        {
            TextFtMultiLines theOPTIONSDESCR;
            theOPTIONSDESCR = this.getOPTIONSDESCR();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "optionsdescr", theOPTIONSDESCR), currentHashCode, theOPTIONSDESCR);
        }
        {
            Empty theNOEUPROGRRELATED;
            theNOEUPROGRRELATED = this.getNOEUPROGRRELATED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noeuprogrrelated", theNOEUPROGRRELATED), currentHashCode, theNOEUPROGRRELATED);
        }
        {
            String theEUPROGRRELATED;
            theEUPROGRRELATED = this.getEUPROGRRELATED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "euprogrrelated", theEUPROGRRELATED), currentHashCode, theEUPROGRRELATED);
        }
        {
            TextFtMultiLines theINFOADD;
            theINFOADD = this.getINFOADD();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "infoadd", theINFOADD), currentHashCode, theINFOADD);
        }
        {
            int theITEM;
            theITEM = (true?this.getITEM(): 0);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "item", theITEM), currentHashCode, theITEM);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            TITLE theTITLE;
            theTITLE = this.getTITLE();
            strategy.appendField(locator, this, "title", buffer, theTITLE);
        }
        {
            String theLOTNO;
            theLOTNO = this.getLOTNO();
            strategy.appendField(locator, this, "lotno", buffer, theLOTNO);
        }
        {
            List<CpvSet> theCPVADDITIONALS;
            theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
            strategy.appendField(locator, this, "cpvadditionals", buffer, theCPVADDITIONALS);
        }
        {
            List<NUTS> theNUTS;
            theNUTS = (((this.nuts!= null)&&(!this.nuts.isEmpty()))?this.getNUTS():null);
            strategy.appendField(locator, this, "nuts", buffer, theNUTS);
        }
        {
            TextFtMultiLines theMAINSITE;
            theMAINSITE = this.getMAINSITE();
            strategy.appendField(locator, this, "mainsite", buffer, theMAINSITE);
        }
        {
            TextFtMultiLines theSHORTDESCR;
            theSHORTDESCR = this.getSHORTDESCR();
            strategy.appendField(locator, this, "shortdescr", buffer, theSHORTDESCR);
        }
        {
            Empty theACPROCUREMENTDOC;
            theACPROCUREMENTDOC = this.getACPROCUREMENTDOC();
            strategy.appendField(locator, this, "acprocurementdoc", buffer, theACPROCUREMENTDOC);
        }
        {
            List<AcDefinition> theACQUALITIES;
            theACQUALITIES = (((this.acqualities!= null)&&(!this.acqualities.isEmpty()))?this.getACQUALITIES():null);
            strategy.appendField(locator, this, "acqualities", buffer, theACQUALITIES);
        }
        {
            ACPRICE theACPRICE;
            theACPRICE = this.getACPRICE();
            strategy.appendField(locator, this, "acprice", buffer, theACPRICE);
        }
        {
            List<AcDefinition> theACCOSTS;
            theACCOSTS = (((this.accosts!= null)&&(!this.accosts.isEmpty()))?this.getACCOSTS():null);
            strategy.appendField(locator, this, "accosts", buffer, theACCOSTS);
        }
        {
            Val theVALOBJECT;
            theVALOBJECT = this.getVALOBJECT();
            strategy.appendField(locator, this, "valobject", buffer, theVALOBJECT);
        }
        {
            XMLGregorianCalendar theDATESTART;
            theDATESTART = this.getDATESTART();
            strategy.appendField(locator, this, "datestart", buffer, theDATESTART);
        }
        {
            XMLGregorianCalendar theDATEEND;
            theDATEEND = this.getDATEEND();
            strategy.appendField(locator, this, "dateend", buffer, theDATEEND);
        }
        {
            DurationMD theDURATION;
            theDURATION = this.getDURATION();
            strategy.appendField(locator, this, "duration", buffer, theDURATION);
        }
        {
            Empty theRENEWAL;
            theRENEWAL = this.getRENEWAL();
            strategy.appendField(locator, this, "renewal", buffer, theRENEWAL);
        }
        {
            TextFtMultiLines theRENEWALDESCR;
            theRENEWALDESCR = this.getRENEWALDESCR();
            strategy.appendField(locator, this, "renewaldescr", buffer, theRENEWALDESCR);
        }
        {
            Empty theACCEPTEDVARIANTS;
            theACCEPTEDVARIANTS = this.getACCEPTEDVARIANTS();
            strategy.appendField(locator, this, "acceptedvariants", buffer, theACCEPTEDVARIANTS);
        }
        {
            Empty theOPTIONS;
            theOPTIONS = this.getOPTIONS();
            strategy.appendField(locator, this, "options", buffer, theOPTIONS);
        }
        {
            TextFtMultiLines theOPTIONSDESCR;
            theOPTIONSDESCR = this.getOPTIONSDESCR();
            strategy.appendField(locator, this, "optionsdescr", buffer, theOPTIONSDESCR);
        }
        {
            Empty theNOEUPROGRRELATED;
            theNOEUPROGRRELATED = this.getNOEUPROGRRELATED();
            strategy.appendField(locator, this, "noeuprogrrelated", buffer, theNOEUPROGRRELATED);
        }
        {
            String theEUPROGRRELATED;
            theEUPROGRRELATED = this.getEUPROGRRELATED();
            strategy.appendField(locator, this, "euprogrrelated", buffer, theEUPROGRRELATED);
        }
        {
            TextFtMultiLines theINFOADD;
            theINFOADD = this.getINFOADD();
            strategy.appendField(locator, this, "infoadd", buffer, theINFOADD);
        }
        {
            int theITEM;
            theITEM = (true?this.getITEM(): 0);
            strategy.appendField(locator, this, "item", buffer, theITEM);
        }
        return buffer;
    }

}
