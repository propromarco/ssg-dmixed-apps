//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="LANGUAGE" maxOccurs="50">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;attribute name="VALUE" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}t_language_list" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "languages"
})
@XmlRootElement(name = "LANGUAGES")
public class LANGUAGES
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "LANGUAGE", required = true)
    protected List<LANGUAGES.LANGUAGE> languages;

    /**
     * Gets the value of the languages property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the languages property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLANGUAGES().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LANGUAGES.LANGUAGE }
     * 
     * 
     */
    public List<LANGUAGES.LANGUAGE> getLANGUAGES() {
        if (languages == null) {
            languages = new ArrayList<LANGUAGES.LANGUAGE>();
        }
        return this.languages;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof LANGUAGES)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final LANGUAGES that = ((LANGUAGES) object);
        {
            List<LANGUAGES.LANGUAGE> lhsLANGUAGES;
            lhsLANGUAGES = (((this.languages!= null)&&(!this.languages.isEmpty()))?this.getLANGUAGES():null);
            List<LANGUAGES.LANGUAGE> rhsLANGUAGES;
            rhsLANGUAGES = (((that.languages!= null)&&(!that.languages.isEmpty()))?that.getLANGUAGES():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "languages", lhsLANGUAGES), LocatorUtils.property(thatLocator, "languages", rhsLANGUAGES), lhsLANGUAGES, rhsLANGUAGES)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<LANGUAGES.LANGUAGE> theLANGUAGES;
            theLANGUAGES = (((this.languages!= null)&&(!this.languages.isEmpty()))?this.getLANGUAGES():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "languages", theLANGUAGES), currentHashCode, theLANGUAGES);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            List<LANGUAGES.LANGUAGE> theLANGUAGES;
            theLANGUAGES = (((this.languages!= null)&&(!this.languages.isEmpty()))?this.getLANGUAGES():null);
            strategy.appendField(locator, this, "languages", buffer, theLANGUAGES);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;attribute name="VALUE" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}t_language_list" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class LANGUAGE
        implements Equals, HashCode, ToString
    {

        @XmlAttribute(name = "VALUE", required = true)
        protected TLanguageList value;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link TLanguageList }
         *     
         */
        public TLanguageList getVALUE() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link TLanguageList }
         *     
         */
        public void setVALUE(TLanguageList value) {
            this.value = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof LANGUAGES.LANGUAGE)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final LANGUAGES.LANGUAGE that = ((LANGUAGES.LANGUAGE) object);
            {
                TLanguageList lhsVALUE;
                lhsVALUE = this.getVALUE();
                TLanguageList rhsVALUE;
                rhsVALUE = that.getVALUE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsVALUE), LocatorUtils.property(thatLocator, "value", rhsVALUE), lhsVALUE, rhsVALUE)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                TLanguageList theVALUE;
                theVALUE = this.getVALUE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theVALUE), currentHashCode, theVALUE);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                TLanguageList theVALUE;
                theVALUE = this.getVALUE();
                strategy.appendField(locator, this, "value", buffer, theVALUE);
            }
            return buffer;
        }

    }

}
