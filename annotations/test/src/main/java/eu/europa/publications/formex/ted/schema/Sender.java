//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for sender complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="sender">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="IDENTIFICATION">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}ESENDER_LOGIN"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CUSTOMER_LOGIN" minOccurs="0"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NO_DOC_EXT"/>
 *                   &lt;element name="SOFTWARE_VERSION" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}string_50" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="CONTACT">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="ORGANISATION" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}string_300"/>
 *                   &lt;element name="COUNTRY">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="VALUE" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}t_country_list_eu_union" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PHONE" minOccurs="0"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}E_MAIL"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="NOTIFICATION">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="TECHNICAL">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}to_be_informed">
 *                           &lt;attribute name="ESENDER" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" fixed="YES" />
 *                           &lt;attribute name="CONTRACTING_BODY" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="PUBLICATION">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;attribute name="ESENDER" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" />
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "sender", propOrder = {
    "identification",
    "contact",
    "notification"
})
public class Sender
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "IDENTIFICATION", required = true)
    protected Sender.IDENTIFICATION identification;
    @XmlElement(name = "CONTACT", required = true)
    protected Sender.CONTACT contact;
    @XmlElement(name = "NOTIFICATION", required = true)
    protected Sender.NOTIFICATION notification;

    /**
     * Gets the value of the identification property.
     * 
     * @return
     *     possible object is
     *     {@link Sender.IDENTIFICATION }
     *     
     */
    public Sender.IDENTIFICATION getIDENTIFICATION() {
        return identification;
    }

    /**
     * Sets the value of the identification property.
     * 
     * @param value
     *     allowed object is
     *     {@link Sender.IDENTIFICATION }
     *     
     */
    public void setIDENTIFICATION(Sender.IDENTIFICATION value) {
        this.identification = value;
    }

    /**
     * Gets the value of the contact property.
     * 
     * @return
     *     possible object is
     *     {@link Sender.CONTACT }
     *     
     */
    public Sender.CONTACT getCONTACT() {
        return contact;
    }

    /**
     * Sets the value of the contact property.
     * 
     * @param value
     *     allowed object is
     *     {@link Sender.CONTACT }
     *     
     */
    public void setCONTACT(Sender.CONTACT value) {
        this.contact = value;
    }

    /**
     * Gets the value of the notification property.
     * 
     * @return
     *     possible object is
     *     {@link Sender.NOTIFICATION }
     *     
     */
    public Sender.NOTIFICATION getNOTIFICATION() {
        return notification;
    }

    /**
     * Sets the value of the notification property.
     * 
     * @param value
     *     allowed object is
     *     {@link Sender.NOTIFICATION }
     *     
     */
    public void setNOTIFICATION(Sender.NOTIFICATION value) {
        this.notification = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Sender)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Sender that = ((Sender) object);
        {
            Sender.IDENTIFICATION lhsIDENTIFICATION;
            lhsIDENTIFICATION = this.getIDENTIFICATION();
            Sender.IDENTIFICATION rhsIDENTIFICATION;
            rhsIDENTIFICATION = that.getIDENTIFICATION();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "identification", lhsIDENTIFICATION), LocatorUtils.property(thatLocator, "identification", rhsIDENTIFICATION), lhsIDENTIFICATION, rhsIDENTIFICATION)) {
                return false;
            }
        }
        {
            Sender.CONTACT lhsCONTACT;
            lhsCONTACT = this.getCONTACT();
            Sender.CONTACT rhsCONTACT;
            rhsCONTACT = that.getCONTACT();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contact", lhsCONTACT), LocatorUtils.property(thatLocator, "contact", rhsCONTACT), lhsCONTACT, rhsCONTACT)) {
                return false;
            }
        }
        {
            Sender.NOTIFICATION lhsNOTIFICATION;
            lhsNOTIFICATION = this.getNOTIFICATION();
            Sender.NOTIFICATION rhsNOTIFICATION;
            rhsNOTIFICATION = that.getNOTIFICATION();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notification", lhsNOTIFICATION), LocatorUtils.property(thatLocator, "notification", rhsNOTIFICATION), lhsNOTIFICATION, rhsNOTIFICATION)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Sender.IDENTIFICATION theIDENTIFICATION;
            theIDENTIFICATION = this.getIDENTIFICATION();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identification", theIDENTIFICATION), currentHashCode, theIDENTIFICATION);
        }
        {
            Sender.CONTACT theCONTACT;
            theCONTACT = this.getCONTACT();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contact", theCONTACT), currentHashCode, theCONTACT);
        }
        {
            Sender.NOTIFICATION theNOTIFICATION;
            theNOTIFICATION = this.getNOTIFICATION();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notification", theNOTIFICATION), currentHashCode, theNOTIFICATION);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Sender.IDENTIFICATION theIDENTIFICATION;
            theIDENTIFICATION = this.getIDENTIFICATION();
            strategy.appendField(locator, this, "identification", buffer, theIDENTIFICATION);
        }
        {
            Sender.CONTACT theCONTACT;
            theCONTACT = this.getCONTACT();
            strategy.appendField(locator, this, "contact", buffer, theCONTACT);
        }
        {
            Sender.NOTIFICATION theNOTIFICATION;
            theNOTIFICATION = this.getNOTIFICATION();
            strategy.appendField(locator, this, "notification", buffer, theNOTIFICATION);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="ORGANISATION" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}string_300"/>
     *         &lt;element name="COUNTRY">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;attribute name="VALUE" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}t_country_list_eu_union" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PHONE" minOccurs="0"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}E_MAIL"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "organisation",
        "country",
        "phone",
        "email"
    })
    public static class CONTACT
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "ORGANISATION", required = true)
        protected String organisation;
        @XmlElement(name = "COUNTRY", required = true)
        protected Sender.CONTACT.COUNTRY country;
        @XmlElement(name = "PHONE")
        protected String phone;
        @XmlElement(name = "E_MAIL", required = true)
        protected String email;

        /**
         * Gets the value of the organisation property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getORGANISATION() {
            return organisation;
        }

        /**
         * Sets the value of the organisation property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setORGANISATION(String value) {
            this.organisation = value;
        }

        /**
         * Gets the value of the country property.
         * 
         * @return
         *     possible object is
         *     {@link Sender.CONTACT.COUNTRY }
         *     
         */
        public Sender.CONTACT.COUNTRY getCOUNTRY() {
            return country;
        }

        /**
         * Sets the value of the country property.
         * 
         * @param value
         *     allowed object is
         *     {@link Sender.CONTACT.COUNTRY }
         *     
         */
        public void setCOUNTRY(Sender.CONTACT.COUNTRY value) {
            this.country = value;
        }

        /**
         * Gets the value of the phone property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getPHONE() {
            return phone;
        }

        /**
         * Sets the value of the phone property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setPHONE(String value) {
            this.phone = value;
        }

        /**
         * Gets the value of the email property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getEMAIL() {
            return email;
        }

        /**
         * Sets the value of the email property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setEMAIL(String value) {
            this.email = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Sender.CONTACT)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Sender.CONTACT that = ((Sender.CONTACT) object);
            {
                String lhsORGANISATION;
                lhsORGANISATION = this.getORGANISATION();
                String rhsORGANISATION;
                rhsORGANISATION = that.getORGANISATION();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "organisation", lhsORGANISATION), LocatorUtils.property(thatLocator, "organisation", rhsORGANISATION), lhsORGANISATION, rhsORGANISATION)) {
                    return false;
                }
            }
            {
                Sender.CONTACT.COUNTRY lhsCOUNTRY;
                lhsCOUNTRY = this.getCOUNTRY();
                Sender.CONTACT.COUNTRY rhsCOUNTRY;
                rhsCOUNTRY = that.getCOUNTRY();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "country", lhsCOUNTRY), LocatorUtils.property(thatLocator, "country", rhsCOUNTRY), lhsCOUNTRY, rhsCOUNTRY)) {
                    return false;
                }
            }
            {
                String lhsPHONE;
                lhsPHONE = this.getPHONE();
                String rhsPHONE;
                rhsPHONE = that.getPHONE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "phone", lhsPHONE), LocatorUtils.property(thatLocator, "phone", rhsPHONE), lhsPHONE, rhsPHONE)) {
                    return false;
                }
            }
            {
                String lhsEMAIL;
                lhsEMAIL = this.getEMAIL();
                String rhsEMAIL;
                rhsEMAIL = that.getEMAIL();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "email", lhsEMAIL), LocatorUtils.property(thatLocator, "email", rhsEMAIL), lhsEMAIL, rhsEMAIL)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theORGANISATION;
                theORGANISATION = this.getORGANISATION();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "organisation", theORGANISATION), currentHashCode, theORGANISATION);
            }
            {
                Sender.CONTACT.COUNTRY theCOUNTRY;
                theCOUNTRY = this.getCOUNTRY();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "country", theCOUNTRY), currentHashCode, theCOUNTRY);
            }
            {
                String thePHONE;
                thePHONE = this.getPHONE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phone", thePHONE), currentHashCode, thePHONE);
            }
            {
                String theEMAIL;
                theEMAIL = this.getEMAIL();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "email", theEMAIL), currentHashCode, theEMAIL);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theORGANISATION;
                theORGANISATION = this.getORGANISATION();
                strategy.appendField(locator, this, "organisation", buffer, theORGANISATION);
            }
            {
                Sender.CONTACT.COUNTRY theCOUNTRY;
                theCOUNTRY = this.getCOUNTRY();
                strategy.appendField(locator, this, "country", buffer, theCOUNTRY);
            }
            {
                String thePHONE;
                thePHONE = this.getPHONE();
                strategy.appendField(locator, this, "phone", buffer, thePHONE);
            }
            {
                String theEMAIL;
                theEMAIL = this.getEMAIL();
                strategy.appendField(locator, this, "email", buffer, theEMAIL);
            }
            return buffer;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;attribute name="VALUE" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}t_country_list_eu_union" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class COUNTRY
            implements Equals, HashCode, ToString
        {

            @XmlAttribute(name = "VALUE", required = true)
            protected String value;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getVALUE() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setVALUE(String value) {
                this.value = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Sender.CONTACT.COUNTRY)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Sender.CONTACT.COUNTRY that = ((Sender.CONTACT.COUNTRY) object);
                {
                    String lhsVALUE;
                    lhsVALUE = this.getVALUE();
                    String rhsVALUE;
                    rhsVALUE = that.getVALUE();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsVALUE), LocatorUtils.property(thatLocator, "value", rhsVALUE), lhsVALUE, rhsVALUE)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    String theVALUE;
                    theVALUE = this.getVALUE();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theVALUE), currentHashCode, theVALUE);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    String theVALUE;
                    theVALUE = this.getVALUE();
                    strategy.appendField(locator, this, "value", buffer, theVALUE);
                }
                return buffer;
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}ESENDER_LOGIN"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CUSTOMER_LOGIN" minOccurs="0"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NO_DOC_EXT"/>
     *         &lt;element name="SOFTWARE_VERSION" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}string_50" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "esenderlogin",
        "customerlogin",
        "nodocext",
        "softwareversion"
    })
    public static class IDENTIFICATION
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "ESENDER_LOGIN", required = true)
        protected String esenderlogin;
        @XmlElement(name = "CUSTOMER_LOGIN")
        protected String customerlogin;
        @XmlElement(name = "NO_DOC_EXT", required = true)
        protected String nodocext;
        @XmlElement(name = "SOFTWARE_VERSION")
        protected String softwareversion;

        /**
         * Gets the value of the esenderlogin property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getESENDERLOGIN() {
            return esenderlogin;
        }

        /**
         * Sets the value of the esenderlogin property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setESENDERLOGIN(String value) {
            this.esenderlogin = value;
        }

        /**
         * Gets the value of the customerlogin property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getCUSTOMERLOGIN() {
            return customerlogin;
        }

        /**
         * Sets the value of the customerlogin property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setCUSTOMERLOGIN(String value) {
            this.customerlogin = value;
        }

        /**
         * Gets the value of the nodocext property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNODOCEXT() {
            return nodocext;
        }

        /**
         * Sets the value of the nodocext property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNODOCEXT(String value) {
            this.nodocext = value;
        }

        /**
         * Gets the value of the softwareversion property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getSOFTWAREVERSION() {
            return softwareversion;
        }

        /**
         * Sets the value of the softwareversion property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setSOFTWAREVERSION(String value) {
            this.softwareversion = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Sender.IDENTIFICATION)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Sender.IDENTIFICATION that = ((Sender.IDENTIFICATION) object);
            {
                String lhsESENDERLOGIN;
                lhsESENDERLOGIN = this.getESENDERLOGIN();
                String rhsESENDERLOGIN;
                rhsESENDERLOGIN = that.getESENDERLOGIN();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "esenderlogin", lhsESENDERLOGIN), LocatorUtils.property(thatLocator, "esenderlogin", rhsESENDERLOGIN), lhsESENDERLOGIN, rhsESENDERLOGIN)) {
                    return false;
                }
            }
            {
                String lhsCUSTOMERLOGIN;
                lhsCUSTOMERLOGIN = this.getCUSTOMERLOGIN();
                String rhsCUSTOMERLOGIN;
                rhsCUSTOMERLOGIN = that.getCUSTOMERLOGIN();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "customerlogin", lhsCUSTOMERLOGIN), LocatorUtils.property(thatLocator, "customerlogin", rhsCUSTOMERLOGIN), lhsCUSTOMERLOGIN, rhsCUSTOMERLOGIN)) {
                    return false;
                }
            }
            {
                String lhsNODOCEXT;
                lhsNODOCEXT = this.getNODOCEXT();
                String rhsNODOCEXT;
                rhsNODOCEXT = that.getNODOCEXT();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "nodocext", lhsNODOCEXT), LocatorUtils.property(thatLocator, "nodocext", rhsNODOCEXT), lhsNODOCEXT, rhsNODOCEXT)) {
                    return false;
                }
            }
            {
                String lhsSOFTWAREVERSION;
                lhsSOFTWAREVERSION = this.getSOFTWAREVERSION();
                String rhsSOFTWAREVERSION;
                rhsSOFTWAREVERSION = that.getSOFTWAREVERSION();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "softwareversion", lhsSOFTWAREVERSION), LocatorUtils.property(thatLocator, "softwareversion", rhsSOFTWAREVERSION), lhsSOFTWAREVERSION, rhsSOFTWAREVERSION)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theESENDERLOGIN;
                theESENDERLOGIN = this.getESENDERLOGIN();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "esenderlogin", theESENDERLOGIN), currentHashCode, theESENDERLOGIN);
            }
            {
                String theCUSTOMERLOGIN;
                theCUSTOMERLOGIN = this.getCUSTOMERLOGIN();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "customerlogin", theCUSTOMERLOGIN), currentHashCode, theCUSTOMERLOGIN);
            }
            {
                String theNODOCEXT;
                theNODOCEXT = this.getNODOCEXT();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nodocext", theNODOCEXT), currentHashCode, theNODOCEXT);
            }
            {
                String theSOFTWAREVERSION;
                theSOFTWAREVERSION = this.getSOFTWAREVERSION();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "softwareversion", theSOFTWAREVERSION), currentHashCode, theSOFTWAREVERSION);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theESENDERLOGIN;
                theESENDERLOGIN = this.getESENDERLOGIN();
                strategy.appendField(locator, this, "esenderlogin", buffer, theESENDERLOGIN);
            }
            {
                String theCUSTOMERLOGIN;
                theCUSTOMERLOGIN = this.getCUSTOMERLOGIN();
                strategy.appendField(locator, this, "customerlogin", buffer, theCUSTOMERLOGIN);
            }
            {
                String theNODOCEXT;
                theNODOCEXT = this.getNODOCEXT();
                strategy.appendField(locator, this, "nodocext", buffer, theNODOCEXT);
            }
            {
                String theSOFTWAREVERSION;
                theSOFTWAREVERSION = this.getSOFTWAREVERSION();
                strategy.appendField(locator, this, "softwareversion", buffer, theSOFTWAREVERSION);
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="TECHNICAL">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}to_be_informed">
     *                 &lt;attribute name="ESENDER" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" fixed="YES" />
     *                 &lt;attribute name="CONTRACTING_BODY" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="PUBLICATION">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;attribute name="ESENDER" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "technical",
        "publication"
    })
    public static class NOTIFICATION
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "TECHNICAL", required = true)
        protected Sender.NOTIFICATION.TECHNICAL technical;
        @XmlElement(name = "PUBLICATION", required = true)
        protected Sender.NOTIFICATION.PUBLICATION publication;

        /**
         * Gets the value of the technical property.
         * 
         * @return
         *     possible object is
         *     {@link Sender.NOTIFICATION.TECHNICAL }
         *     
         */
        public Sender.NOTIFICATION.TECHNICAL getTECHNICAL() {
            return technical;
        }

        /**
         * Sets the value of the technical property.
         * 
         * @param value
         *     allowed object is
         *     {@link Sender.NOTIFICATION.TECHNICAL }
         *     
         */
        public void setTECHNICAL(Sender.NOTIFICATION.TECHNICAL value) {
            this.technical = value;
        }

        /**
         * Gets the value of the publication property.
         * 
         * @return
         *     possible object is
         *     {@link Sender.NOTIFICATION.PUBLICATION }
         *     
         */
        public Sender.NOTIFICATION.PUBLICATION getPUBLICATION() {
            return publication;
        }

        /**
         * Sets the value of the publication property.
         * 
         * @param value
         *     allowed object is
         *     {@link Sender.NOTIFICATION.PUBLICATION }
         *     
         */
        public void setPUBLICATION(Sender.NOTIFICATION.PUBLICATION value) {
            this.publication = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof Sender.NOTIFICATION)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final Sender.NOTIFICATION that = ((Sender.NOTIFICATION) object);
            {
                Sender.NOTIFICATION.TECHNICAL lhsTECHNICAL;
                lhsTECHNICAL = this.getTECHNICAL();
                Sender.NOTIFICATION.TECHNICAL rhsTECHNICAL;
                rhsTECHNICAL = that.getTECHNICAL();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "technical", lhsTECHNICAL), LocatorUtils.property(thatLocator, "technical", rhsTECHNICAL), lhsTECHNICAL, rhsTECHNICAL)) {
                    return false;
                }
            }
            {
                Sender.NOTIFICATION.PUBLICATION lhsPUBLICATION;
                lhsPUBLICATION = this.getPUBLICATION();
                Sender.NOTIFICATION.PUBLICATION rhsPUBLICATION;
                rhsPUBLICATION = that.getPUBLICATION();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "publication", lhsPUBLICATION), LocatorUtils.property(thatLocator, "publication", rhsPUBLICATION), lhsPUBLICATION, rhsPUBLICATION)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                Sender.NOTIFICATION.TECHNICAL theTECHNICAL;
                theTECHNICAL = this.getTECHNICAL();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "technical", theTECHNICAL), currentHashCode, theTECHNICAL);
            }
            {
                Sender.NOTIFICATION.PUBLICATION thePUBLICATION;
                thePUBLICATION = this.getPUBLICATION();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publication", thePUBLICATION), currentHashCode, thePUBLICATION);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                Sender.NOTIFICATION.TECHNICAL theTECHNICAL;
                theTECHNICAL = this.getTECHNICAL();
                strategy.appendField(locator, this, "technical", buffer, theTECHNICAL);
            }
            {
                Sender.NOTIFICATION.PUBLICATION thePUBLICATION;
                thePUBLICATION = this.getPUBLICATION();
                strategy.appendField(locator, this, "publication", buffer, thePUBLICATION);
            }
            return buffer;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;attribute name="ESENDER" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class PUBLICATION
            implements Equals, HashCode, ToString
        {

            @XmlAttribute(name = "ESENDER", required = true)
            protected YesNo esender;

            /**
             * Gets the value of the esender property.
             * 
             * @return
             *     possible object is
             *     {@link YesNo }
             *     
             */
            public YesNo getESENDER() {
                return esender;
            }

            /**
             * Sets the value of the esender property.
             * 
             * @param value
             *     allowed object is
             *     {@link YesNo }
             *     
             */
            public void setESENDER(YesNo value) {
                this.esender = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Sender.NOTIFICATION.PUBLICATION)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final Sender.NOTIFICATION.PUBLICATION that = ((Sender.NOTIFICATION.PUBLICATION) object);
                {
                    YesNo lhsESENDER;
                    lhsESENDER = this.getESENDER();
                    YesNo rhsESENDER;
                    rhsESENDER = that.getESENDER();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "esender", lhsESENDER), LocatorUtils.property(thatLocator, "esender", rhsESENDER), lhsESENDER, rhsESENDER)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    YesNo theESENDER;
                    theESENDER = this.getESENDER();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "esender", theESENDER), currentHashCode, theESENDER);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    YesNo theESENDER;
                    theESENDER = this.getESENDER();
                    strategy.appendField(locator, this, "esender", buffer, theESENDER);
                }
                return buffer;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}to_be_informed">
         *       &lt;attribute name="ESENDER" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" fixed="YES" />
         *       &lt;attribute name="CONTRACTING_BODY" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}yes_no" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "")
        public static class TECHNICAL
            extends ToBeInformed
            implements Equals, HashCode, ToString
        {


            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof Sender.NOTIFICATION.TECHNICAL)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                    return false;
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = super.hashCode(locator, strategy);
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                super.appendFields(locator, buffer, strategy);
                return buffer;
            }

        }

    }

}
