//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Section VII: MODIFICATIONS TO THE CONTRACT / CONCESSION
 * 
 * <p>Java class for modifications_f20 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="modifications_f20">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="DESCRIPTION_PROCUREMENT">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CPV_MAIN"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CPV_ADDITIONAL" maxOccurs="100" minOccurs="0"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NUTS" maxOccurs="20"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}MAIN_SITE" minOccurs="0"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SHORT_DESCR"/>
 *                   &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}time_frame"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}JUSTIFICATION" minOccurs="0"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}VAL_TOTAL"/>
 *                   &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contractor"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="INFO_MODIFICATIONS">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SHORT_DESCR"/>
 *                   &lt;choice>
 *                     &lt;element name="ADDITIONAL_NEED" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}text_ft_multi_lines"/>
 *                     &lt;element name="UNFORESEEN_CIRCUMSTANCE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}text_ft_multi_lines"/>
 *                   &lt;/choice>
 *                   &lt;element name="VAL_TOTAL_BEFORE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}val"/>
 *                   &lt;element name="VAL_TOTAL_AFTER" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}val"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "modifications_f20", propOrder = {
    "descriptionprocurement",
    "infomodifications"
})
public class ModificationsF20
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "DESCRIPTION_PROCUREMENT", required = true)
    protected ModificationsF20 .DESCRIPTIONPROCUREMENT descriptionprocurement;
    @XmlElement(name = "INFO_MODIFICATIONS", required = true)
    protected ModificationsF20 .INFOMODIFICATIONS infomodifications;

    /**
     * Gets the value of the descriptionprocurement property.
     * 
     * @return
     *     possible object is
     *     {@link ModificationsF20 .DESCRIPTIONPROCUREMENT }
     *     
     */
    public ModificationsF20 .DESCRIPTIONPROCUREMENT getDESCRIPTIONPROCUREMENT() {
        return descriptionprocurement;
    }

    /**
     * Sets the value of the descriptionprocurement property.
     * 
     * @param value
     *     allowed object is
     *     {@link ModificationsF20 .DESCRIPTIONPROCUREMENT }
     *     
     */
    public void setDESCRIPTIONPROCUREMENT(ModificationsF20 .DESCRIPTIONPROCUREMENT value) {
        this.descriptionprocurement = value;
    }

    /**
     * Gets the value of the infomodifications property.
     * 
     * @return
     *     possible object is
     *     {@link ModificationsF20 .INFOMODIFICATIONS }
     *     
     */
    public ModificationsF20 .INFOMODIFICATIONS getINFOMODIFICATIONS() {
        return infomodifications;
    }

    /**
     * Sets the value of the infomodifications property.
     * 
     * @param value
     *     allowed object is
     *     {@link ModificationsF20 .INFOMODIFICATIONS }
     *     
     */
    public void setINFOMODIFICATIONS(ModificationsF20 .INFOMODIFICATIONS value) {
        this.infomodifications = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ModificationsF20)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ModificationsF20 that = ((ModificationsF20) object);
        {
            ModificationsF20 .DESCRIPTIONPROCUREMENT lhsDESCRIPTIONPROCUREMENT;
            lhsDESCRIPTIONPROCUREMENT = this.getDESCRIPTIONPROCUREMENT();
            ModificationsF20 .DESCRIPTIONPROCUREMENT rhsDESCRIPTIONPROCUREMENT;
            rhsDESCRIPTIONPROCUREMENT = that.getDESCRIPTIONPROCUREMENT();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "descriptionprocurement", lhsDESCRIPTIONPROCUREMENT), LocatorUtils.property(thatLocator, "descriptionprocurement", rhsDESCRIPTIONPROCUREMENT), lhsDESCRIPTIONPROCUREMENT, rhsDESCRIPTIONPROCUREMENT)) {
                return false;
            }
        }
        {
            ModificationsF20 .INFOMODIFICATIONS lhsINFOMODIFICATIONS;
            lhsINFOMODIFICATIONS = this.getINFOMODIFICATIONS();
            ModificationsF20 .INFOMODIFICATIONS rhsINFOMODIFICATIONS;
            rhsINFOMODIFICATIONS = that.getINFOMODIFICATIONS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "infomodifications", lhsINFOMODIFICATIONS), LocatorUtils.property(thatLocator, "infomodifications", rhsINFOMODIFICATIONS), lhsINFOMODIFICATIONS, rhsINFOMODIFICATIONS)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ModificationsF20 .DESCRIPTIONPROCUREMENT theDESCRIPTIONPROCUREMENT;
            theDESCRIPTIONPROCUREMENT = this.getDESCRIPTIONPROCUREMENT();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "descriptionprocurement", theDESCRIPTIONPROCUREMENT), currentHashCode, theDESCRIPTIONPROCUREMENT);
        }
        {
            ModificationsF20 .INFOMODIFICATIONS theINFOMODIFICATIONS;
            theINFOMODIFICATIONS = this.getINFOMODIFICATIONS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "infomodifications", theINFOMODIFICATIONS), currentHashCode, theINFOMODIFICATIONS);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ModificationsF20 .DESCRIPTIONPROCUREMENT theDESCRIPTIONPROCUREMENT;
            theDESCRIPTIONPROCUREMENT = this.getDESCRIPTIONPROCUREMENT();
            strategy.appendField(locator, this, "descriptionprocurement", buffer, theDESCRIPTIONPROCUREMENT);
        }
        {
            ModificationsF20 .INFOMODIFICATIONS theINFOMODIFICATIONS;
            theINFOMODIFICATIONS = this.getINFOMODIFICATIONS();
            strategy.appendField(locator, this, "infomodifications", buffer, theINFOMODIFICATIONS);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CPV_MAIN"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CPV_ADDITIONAL" maxOccurs="100" minOccurs="0"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NUTS" maxOccurs="20"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}MAIN_SITE" minOccurs="0"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SHORT_DESCR"/>
     *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}time_frame"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}JUSTIFICATION" minOccurs="0"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}VAL_TOTAL"/>
     *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contractor"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "cpvmain",
        "cpvadditionals",
        "nuts",
        "mainsite",
        "shortdescr",
        "datestart",
        "dateend",
        "duration",
        "justification",
        "valtotal",
        "noawardedtogroup",
        "awardedtogroup",
        "contractors"
    })
    public static class DESCRIPTIONPROCUREMENT
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "CPV_MAIN", required = true)
        protected CpvSet cpvmain;
        @XmlElement(name = "CPV_ADDITIONAL")
        protected List<CpvSet> cpvadditionals;
        @XmlElement(name = "NUTS", required = true)
        protected List<NUTS> nuts;
        @XmlElement(name = "MAIN_SITE")
        protected TextFtMultiLines mainsite;
        @XmlElement(name = "SHORT_DESCR", required = true)
        protected TextFtMultiLines shortdescr;
        @XmlElement(name = "DATE_START")
        protected XMLGregorianCalendar datestart;
        @XmlElement(name = "DATE_END")
        protected XMLGregorianCalendar dateend;
        @XmlElement(name = "DURATION")
        protected DurationMD duration;
        @XmlElement(name = "JUSTIFICATION")
        protected String justification;
        @XmlElement(name = "VAL_TOTAL", required = true)
        protected Val valtotal;
        @XmlElement(name = "NO_AWARDED_TO_GROUP")
        protected Empty noawardedtogroup;
        @XmlElement(name = "AWARDED_TO_GROUP")
        protected Empty awardedtogroup;
        @XmlElement(name = "CONTRACTOR")
        protected List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> contractors;

        /**
         * Gets the value of the cpvmain property.
         * 
         * @return
         *     possible object is
         *     {@link CpvSet }
         *     
         */
        public CpvSet getCPVMAIN() {
            return cpvmain;
        }

        /**
         * Sets the value of the cpvmain property.
         * 
         * @param value
         *     allowed object is
         *     {@link CpvSet }
         *     
         */
        public void setCPVMAIN(CpvSet value) {
            this.cpvmain = value;
        }

        /**
         * Gets the value of the cpvadditionals property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the cpvadditionals property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCPVADDITIONALS().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link CpvSet }
         * 
         * 
         */
        public List<CpvSet> getCPVADDITIONALS() {
            if (cpvadditionals == null) {
                cpvadditionals = new ArrayList<CpvSet>();
            }
            return this.cpvadditionals;
        }

        /**
         * Gets the value of the nuts property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the nuts property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getNUTS().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link NUTS }
         * 
         * 
         */
        public List<NUTS> getNUTS() {
            if (nuts == null) {
                nuts = new ArrayList<NUTS>();
            }
            return this.nuts;
        }

        /**
         * Gets the value of the mainsite property.
         * 
         * @return
         *     possible object is
         *     {@link TextFtMultiLines }
         *     
         */
        public TextFtMultiLines getMAINSITE() {
            return mainsite;
        }

        /**
         * Sets the value of the mainsite property.
         * 
         * @param value
         *     allowed object is
         *     {@link TextFtMultiLines }
         *     
         */
        public void setMAINSITE(TextFtMultiLines value) {
            this.mainsite = value;
        }

        /**
         * Gets the value of the shortdescr property.
         * 
         * @return
         *     possible object is
         *     {@link TextFtMultiLines }
         *     
         */
        public TextFtMultiLines getSHORTDESCR() {
            return shortdescr;
        }

        /**
         * Sets the value of the shortdescr property.
         * 
         * @param value
         *     allowed object is
         *     {@link TextFtMultiLines }
         *     
         */
        public void setSHORTDESCR(TextFtMultiLines value) {
            this.shortdescr = value;
        }

        /**
         * Gets the value of the datestart property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getDATESTART() {
            return datestart;
        }

        /**
         * Sets the value of the datestart property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setDATESTART(XMLGregorianCalendar value) {
            this.datestart = value;
        }

        /**
         * Gets the value of the dateend property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getDATEEND() {
            return dateend;
        }

        /**
         * Sets the value of the dateend property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setDATEEND(XMLGregorianCalendar value) {
            this.dateend = value;
        }

        /**
         * Gets the value of the duration property.
         * 
         * @return
         *     possible object is
         *     {@link DurationMD }
         *     
         */
        public DurationMD getDURATION() {
            return duration;
        }

        /**
         * Sets the value of the duration property.
         * 
         * @param value
         *     allowed object is
         *     {@link DurationMD }
         *     
         */
        public void setDURATION(DurationMD value) {
            this.duration = value;
        }

        /**
         * Gets the value of the justification property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getJUSTIFICATION() {
            return justification;
        }

        /**
         * Sets the value of the justification property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setJUSTIFICATION(String value) {
            this.justification = value;
        }

        /**
         * Gets the value of the valtotal property.
         * 
         * @return
         *     possible object is
         *     {@link Val }
         *     
         */
        public Val getVALTOTAL() {
            return valtotal;
        }

        /**
         * Sets the value of the valtotal property.
         * 
         * @param value
         *     allowed object is
         *     {@link Val }
         *     
         */
        public void setVALTOTAL(Val value) {
            this.valtotal = value;
        }

        /**
         * Gets the value of the noawardedtogroup property.
         * 
         * @return
         *     possible object is
         *     {@link Empty }
         *     
         */
        public Empty getNOAWARDEDTOGROUP() {
            return noawardedtogroup;
        }

        /**
         * Sets the value of the noawardedtogroup property.
         * 
         * @param value
         *     allowed object is
         *     {@link Empty }
         *     
         */
        public void setNOAWARDEDTOGROUP(Empty value) {
            this.noawardedtogroup = value;
        }

        /**
         * Gets the value of the awardedtogroup property.
         * 
         * @return
         *     possible object is
         *     {@link Empty }
         *     
         */
        public Empty getAWARDEDTOGROUP() {
            return awardedtogroup;
        }

        /**
         * Sets the value of the awardedtogroup property.
         * 
         * @param value
         *     allowed object is
         *     {@link Empty }
         *     
         */
        public void setAWARDEDTOGROUP(Empty value) {
            this.awardedtogroup = value;
        }

        /**
         * Gets the value of the contractors property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the contractors property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCONTRACTORS().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR }
         * 
         * 
         */
        public List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> getCONTRACTORS() {
            if (contractors == null) {
                contractors = new ArrayList<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR>();
            }
            return this.contractors;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof ModificationsF20 .DESCRIPTIONPROCUREMENT)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ModificationsF20 .DESCRIPTIONPROCUREMENT that = ((ModificationsF20 .DESCRIPTIONPROCUREMENT) object);
            {
                CpvSet lhsCPVMAIN;
                lhsCPVMAIN = this.getCPVMAIN();
                CpvSet rhsCPVMAIN;
                rhsCPVMAIN = that.getCPVMAIN();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvmain", lhsCPVMAIN), LocatorUtils.property(thatLocator, "cpvmain", rhsCPVMAIN), lhsCPVMAIN, rhsCPVMAIN)) {
                    return false;
                }
            }
            {
                List<CpvSet> lhsCPVADDITIONALS;
                lhsCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                List<CpvSet> rhsCPVADDITIONALS;
                rhsCPVADDITIONALS = (((that.cpvadditionals!= null)&&(!that.cpvadditionals.isEmpty()))?that.getCPVADDITIONALS():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvadditionals", lhsCPVADDITIONALS), LocatorUtils.property(thatLocator, "cpvadditionals", rhsCPVADDITIONALS), lhsCPVADDITIONALS, rhsCPVADDITIONALS)) {
                    return false;
                }
            }
            {
                List<NUTS> lhsNUTS;
                lhsNUTS = (((this.nuts!= null)&&(!this.nuts.isEmpty()))?this.getNUTS():null);
                List<NUTS> rhsNUTS;
                rhsNUTS = (((that.nuts!= null)&&(!that.nuts.isEmpty()))?that.getNUTS():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "nuts", lhsNUTS), LocatorUtils.property(thatLocator, "nuts", rhsNUTS), lhsNUTS, rhsNUTS)) {
                    return false;
                }
            }
            {
                TextFtMultiLines lhsMAINSITE;
                lhsMAINSITE = this.getMAINSITE();
                TextFtMultiLines rhsMAINSITE;
                rhsMAINSITE = that.getMAINSITE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "mainsite", lhsMAINSITE), LocatorUtils.property(thatLocator, "mainsite", rhsMAINSITE), lhsMAINSITE, rhsMAINSITE)) {
                    return false;
                }
            }
            {
                TextFtMultiLines lhsSHORTDESCR;
                lhsSHORTDESCR = this.getSHORTDESCR();
                TextFtMultiLines rhsSHORTDESCR;
                rhsSHORTDESCR = that.getSHORTDESCR();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shortdescr", lhsSHORTDESCR), LocatorUtils.property(thatLocator, "shortdescr", rhsSHORTDESCR), lhsSHORTDESCR, rhsSHORTDESCR)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsDATESTART;
                lhsDATESTART = this.getDATESTART();
                XMLGregorianCalendar rhsDATESTART;
                rhsDATESTART = that.getDATESTART();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "datestart", lhsDATESTART), LocatorUtils.property(thatLocator, "datestart", rhsDATESTART), lhsDATESTART, rhsDATESTART)) {
                    return false;
                }
            }
            {
                XMLGregorianCalendar lhsDATEEND;
                lhsDATEEND = this.getDATEEND();
                XMLGregorianCalendar rhsDATEEND;
                rhsDATEEND = that.getDATEEND();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "dateend", lhsDATEEND), LocatorUtils.property(thatLocator, "dateend", rhsDATEEND), lhsDATEEND, rhsDATEEND)) {
                    return false;
                }
            }
            {
                DurationMD lhsDURATION;
                lhsDURATION = this.getDURATION();
                DurationMD rhsDURATION;
                rhsDURATION = that.getDURATION();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDURATION), LocatorUtils.property(thatLocator, "duration", rhsDURATION), lhsDURATION, rhsDURATION)) {
                    return false;
                }
            }
            {
                String lhsJUSTIFICATION;
                lhsJUSTIFICATION = this.getJUSTIFICATION();
                String rhsJUSTIFICATION;
                rhsJUSTIFICATION = that.getJUSTIFICATION();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "justification", lhsJUSTIFICATION), LocatorUtils.property(thatLocator, "justification", rhsJUSTIFICATION), lhsJUSTIFICATION, rhsJUSTIFICATION)) {
                    return false;
                }
            }
            {
                Val lhsVALTOTAL;
                lhsVALTOTAL = this.getVALTOTAL();
                Val rhsVALTOTAL;
                rhsVALTOTAL = that.getVALTOTAL();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valtotal", lhsVALTOTAL), LocatorUtils.property(thatLocator, "valtotal", rhsVALTOTAL), lhsVALTOTAL, rhsVALTOTAL)) {
                    return false;
                }
            }
            {
                Empty lhsNOAWARDEDTOGROUP;
                lhsNOAWARDEDTOGROUP = this.getNOAWARDEDTOGROUP();
                Empty rhsNOAWARDEDTOGROUP;
                rhsNOAWARDEDTOGROUP = that.getNOAWARDEDTOGROUP();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "noawardedtogroup", lhsNOAWARDEDTOGROUP), LocatorUtils.property(thatLocator, "noawardedtogroup", rhsNOAWARDEDTOGROUP), lhsNOAWARDEDTOGROUP, rhsNOAWARDEDTOGROUP)) {
                    return false;
                }
            }
            {
                Empty lhsAWARDEDTOGROUP;
                lhsAWARDEDTOGROUP = this.getAWARDEDTOGROUP();
                Empty rhsAWARDEDTOGROUP;
                rhsAWARDEDTOGROUP = that.getAWARDEDTOGROUP();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "awardedtogroup", lhsAWARDEDTOGROUP), LocatorUtils.property(thatLocator, "awardedtogroup", rhsAWARDEDTOGROUP), lhsAWARDEDTOGROUP, rhsAWARDEDTOGROUP)) {
                    return false;
                }
            }
            {
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> lhsCONTRACTORS;
                lhsCONTRACTORS = (((this.contractors!= null)&&(!this.contractors.isEmpty()))?this.getCONTRACTORS():null);
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> rhsCONTRACTORS;
                rhsCONTRACTORS = (((that.contractors!= null)&&(!that.contractors.isEmpty()))?that.getCONTRACTORS():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "contractors", lhsCONTRACTORS), LocatorUtils.property(thatLocator, "contractors", rhsCONTRACTORS), lhsCONTRACTORS, rhsCONTRACTORS)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                CpvSet theCPVMAIN;
                theCPVMAIN = this.getCPVMAIN();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvmain", theCPVMAIN), currentHashCode, theCPVMAIN);
            }
            {
                List<CpvSet> theCPVADDITIONALS;
                theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvadditionals", theCPVADDITIONALS), currentHashCode, theCPVADDITIONALS);
            }
            {
                List<NUTS> theNUTS;
                theNUTS = (((this.nuts!= null)&&(!this.nuts.isEmpty()))?this.getNUTS():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nuts", theNUTS), currentHashCode, theNUTS);
            }
            {
                TextFtMultiLines theMAINSITE;
                theMAINSITE = this.getMAINSITE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mainsite", theMAINSITE), currentHashCode, theMAINSITE);
            }
            {
                TextFtMultiLines theSHORTDESCR;
                theSHORTDESCR = this.getSHORTDESCR();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shortdescr", theSHORTDESCR), currentHashCode, theSHORTDESCR);
            }
            {
                XMLGregorianCalendar theDATESTART;
                theDATESTART = this.getDATESTART();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "datestart", theDATESTART), currentHashCode, theDATESTART);
            }
            {
                XMLGregorianCalendar theDATEEND;
                theDATEEND = this.getDATEEND();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateend", theDATEEND), currentHashCode, theDATEEND);
            }
            {
                DurationMD theDURATION;
                theDURATION = this.getDURATION();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDURATION), currentHashCode, theDURATION);
            }
            {
                String theJUSTIFICATION;
                theJUSTIFICATION = this.getJUSTIFICATION();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "justification", theJUSTIFICATION), currentHashCode, theJUSTIFICATION);
            }
            {
                Val theVALTOTAL;
                theVALTOTAL = this.getVALTOTAL();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valtotal", theVALTOTAL), currentHashCode, theVALTOTAL);
            }
            {
                Empty theNOAWARDEDTOGROUP;
                theNOAWARDEDTOGROUP = this.getNOAWARDEDTOGROUP();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noawardedtogroup", theNOAWARDEDTOGROUP), currentHashCode, theNOAWARDEDTOGROUP);
            }
            {
                Empty theAWARDEDTOGROUP;
                theAWARDEDTOGROUP = this.getAWARDEDTOGROUP();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "awardedtogroup", theAWARDEDTOGROUP), currentHashCode, theAWARDEDTOGROUP);
            }
            {
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> theCONTRACTORS;
                theCONTRACTORS = (((this.contractors!= null)&&(!this.contractors.isEmpty()))?this.getCONTRACTORS():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contractors", theCONTRACTORS), currentHashCode, theCONTRACTORS);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                CpvSet theCPVMAIN;
                theCPVMAIN = this.getCPVMAIN();
                strategy.appendField(locator, this, "cpvmain", buffer, theCPVMAIN);
            }
            {
                List<CpvSet> theCPVADDITIONALS;
                theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                strategy.appendField(locator, this, "cpvadditionals", buffer, theCPVADDITIONALS);
            }
            {
                List<NUTS> theNUTS;
                theNUTS = (((this.nuts!= null)&&(!this.nuts.isEmpty()))?this.getNUTS():null);
                strategy.appendField(locator, this, "nuts", buffer, theNUTS);
            }
            {
                TextFtMultiLines theMAINSITE;
                theMAINSITE = this.getMAINSITE();
                strategy.appendField(locator, this, "mainsite", buffer, theMAINSITE);
            }
            {
                TextFtMultiLines theSHORTDESCR;
                theSHORTDESCR = this.getSHORTDESCR();
                strategy.appendField(locator, this, "shortdescr", buffer, theSHORTDESCR);
            }
            {
                XMLGregorianCalendar theDATESTART;
                theDATESTART = this.getDATESTART();
                strategy.appendField(locator, this, "datestart", buffer, theDATESTART);
            }
            {
                XMLGregorianCalendar theDATEEND;
                theDATEEND = this.getDATEEND();
                strategy.appendField(locator, this, "dateend", buffer, theDATEEND);
            }
            {
                DurationMD theDURATION;
                theDURATION = this.getDURATION();
                strategy.appendField(locator, this, "duration", buffer, theDURATION);
            }
            {
                String theJUSTIFICATION;
                theJUSTIFICATION = this.getJUSTIFICATION();
                strategy.appendField(locator, this, "justification", buffer, theJUSTIFICATION);
            }
            {
                Val theVALTOTAL;
                theVALTOTAL = this.getVALTOTAL();
                strategy.appendField(locator, this, "valtotal", buffer, theVALTOTAL);
            }
            {
                Empty theNOAWARDEDTOGROUP;
                theNOAWARDEDTOGROUP = this.getNOAWARDEDTOGROUP();
                strategy.appendField(locator, this, "noawardedtogroup", buffer, theNOAWARDEDTOGROUP);
            }
            {
                Empty theAWARDEDTOGROUP;
                theAWARDEDTOGROUP = this.getAWARDEDTOGROUP();
                strategy.appendField(locator, this, "awardedtogroup", buffer, theAWARDEDTOGROUP);
            }
            {
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> theCONTRACTORS;
                theCONTRACTORS = (((this.contractors!= null)&&(!this.contractors.isEmpty()))?this.getCONTRACTORS():null);
                strategy.appendField(locator, this, "contractors", buffer, theCONTRACTORS);
            }
            return buffer;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SHORT_DESCR"/>
     *         &lt;choice>
     *           &lt;element name="ADDITIONAL_NEED" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}text_ft_multi_lines"/>
     *           &lt;element name="UNFORESEEN_CIRCUMSTANCE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}text_ft_multi_lines"/>
     *         &lt;/choice>
     *         &lt;element name="VAL_TOTAL_BEFORE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}val"/>
     *         &lt;element name="VAL_TOTAL_AFTER" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}val"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "shortdescr",
        "unforeseencircumstance",
        "additionalneed",
        "valtotalbefore",
        "valtotalafter"
    })
    public static class INFOMODIFICATIONS
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "SHORT_DESCR", required = true)
        protected TextFtMultiLines shortdescr;
        @XmlElement(name = "UNFORESEEN_CIRCUMSTANCE")
        protected TextFtMultiLines unforeseencircumstance;
        @XmlElement(name = "ADDITIONAL_NEED")
        protected TextFtMultiLines additionalneed;
        @XmlElement(name = "VAL_TOTAL_BEFORE", required = true)
        protected Val valtotalbefore;
        @XmlElement(name = "VAL_TOTAL_AFTER", required = true)
        protected Val valtotalafter;

        /**
         * Gets the value of the shortdescr property.
         * 
         * @return
         *     possible object is
         *     {@link TextFtMultiLines }
         *     
         */
        public TextFtMultiLines getSHORTDESCR() {
            return shortdescr;
        }

        /**
         * Sets the value of the shortdescr property.
         * 
         * @param value
         *     allowed object is
         *     {@link TextFtMultiLines }
         *     
         */
        public void setSHORTDESCR(TextFtMultiLines value) {
            this.shortdescr = value;
        }

        /**
         * Gets the value of the unforeseencircumstance property.
         * 
         * @return
         *     possible object is
         *     {@link TextFtMultiLines }
         *     
         */
        public TextFtMultiLines getUNFORESEENCIRCUMSTANCE() {
            return unforeseencircumstance;
        }

        /**
         * Sets the value of the unforeseencircumstance property.
         * 
         * @param value
         *     allowed object is
         *     {@link TextFtMultiLines }
         *     
         */
        public void setUNFORESEENCIRCUMSTANCE(TextFtMultiLines value) {
            this.unforeseencircumstance = value;
        }

        /**
         * Gets the value of the additionalneed property.
         * 
         * @return
         *     possible object is
         *     {@link TextFtMultiLines }
         *     
         */
        public TextFtMultiLines getADDITIONALNEED() {
            return additionalneed;
        }

        /**
         * Sets the value of the additionalneed property.
         * 
         * @param value
         *     allowed object is
         *     {@link TextFtMultiLines }
         *     
         */
        public void setADDITIONALNEED(TextFtMultiLines value) {
            this.additionalneed = value;
        }

        /**
         * Gets the value of the valtotalbefore property.
         * 
         * @return
         *     possible object is
         *     {@link Val }
         *     
         */
        public Val getVALTOTALBEFORE() {
            return valtotalbefore;
        }

        /**
         * Sets the value of the valtotalbefore property.
         * 
         * @param value
         *     allowed object is
         *     {@link Val }
         *     
         */
        public void setVALTOTALBEFORE(Val value) {
            this.valtotalbefore = value;
        }

        /**
         * Gets the value of the valtotalafter property.
         * 
         * @return
         *     possible object is
         *     {@link Val }
         *     
         */
        public Val getVALTOTALAFTER() {
            return valtotalafter;
        }

        /**
         * Sets the value of the valtotalafter property.
         * 
         * @param value
         *     allowed object is
         *     {@link Val }
         *     
         */
        public void setVALTOTALAFTER(Val value) {
            this.valtotalafter = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof ModificationsF20 .INFOMODIFICATIONS)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ModificationsF20 .INFOMODIFICATIONS that = ((ModificationsF20 .INFOMODIFICATIONS) object);
            {
                TextFtMultiLines lhsSHORTDESCR;
                lhsSHORTDESCR = this.getSHORTDESCR();
                TextFtMultiLines rhsSHORTDESCR;
                rhsSHORTDESCR = that.getSHORTDESCR();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "shortdescr", lhsSHORTDESCR), LocatorUtils.property(thatLocator, "shortdescr", rhsSHORTDESCR), lhsSHORTDESCR, rhsSHORTDESCR)) {
                    return false;
                }
            }
            {
                TextFtMultiLines lhsUNFORESEENCIRCUMSTANCE;
                lhsUNFORESEENCIRCUMSTANCE = this.getUNFORESEENCIRCUMSTANCE();
                TextFtMultiLines rhsUNFORESEENCIRCUMSTANCE;
                rhsUNFORESEENCIRCUMSTANCE = that.getUNFORESEENCIRCUMSTANCE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "unforeseencircumstance", lhsUNFORESEENCIRCUMSTANCE), LocatorUtils.property(thatLocator, "unforeseencircumstance", rhsUNFORESEENCIRCUMSTANCE), lhsUNFORESEENCIRCUMSTANCE, rhsUNFORESEENCIRCUMSTANCE)) {
                    return false;
                }
            }
            {
                TextFtMultiLines lhsADDITIONALNEED;
                lhsADDITIONALNEED = this.getADDITIONALNEED();
                TextFtMultiLines rhsADDITIONALNEED;
                rhsADDITIONALNEED = that.getADDITIONALNEED();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "additionalneed", lhsADDITIONALNEED), LocatorUtils.property(thatLocator, "additionalneed", rhsADDITIONALNEED), lhsADDITIONALNEED, rhsADDITIONALNEED)) {
                    return false;
                }
            }
            {
                Val lhsVALTOTALBEFORE;
                lhsVALTOTALBEFORE = this.getVALTOTALBEFORE();
                Val rhsVALTOTALBEFORE;
                rhsVALTOTALBEFORE = that.getVALTOTALBEFORE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valtotalbefore", lhsVALTOTALBEFORE), LocatorUtils.property(thatLocator, "valtotalbefore", rhsVALTOTALBEFORE), lhsVALTOTALBEFORE, rhsVALTOTALBEFORE)) {
                    return false;
                }
            }
            {
                Val lhsVALTOTALAFTER;
                lhsVALTOTALAFTER = this.getVALTOTALAFTER();
                Val rhsVALTOTALAFTER;
                rhsVALTOTALAFTER = that.getVALTOTALAFTER();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valtotalafter", lhsVALTOTALAFTER), LocatorUtils.property(thatLocator, "valtotalafter", rhsVALTOTALAFTER), lhsVALTOTALAFTER, rhsVALTOTALAFTER)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                TextFtMultiLines theSHORTDESCR;
                theSHORTDESCR = this.getSHORTDESCR();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "shortdescr", theSHORTDESCR), currentHashCode, theSHORTDESCR);
            }
            {
                TextFtMultiLines theUNFORESEENCIRCUMSTANCE;
                theUNFORESEENCIRCUMSTANCE = this.getUNFORESEENCIRCUMSTANCE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "unforeseencircumstance", theUNFORESEENCIRCUMSTANCE), currentHashCode, theUNFORESEENCIRCUMSTANCE);
            }
            {
                TextFtMultiLines theADDITIONALNEED;
                theADDITIONALNEED = this.getADDITIONALNEED();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "additionalneed", theADDITIONALNEED), currentHashCode, theADDITIONALNEED);
            }
            {
                Val theVALTOTALBEFORE;
                theVALTOTALBEFORE = this.getVALTOTALBEFORE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valtotalbefore", theVALTOTALBEFORE), currentHashCode, theVALTOTALBEFORE);
            }
            {
                Val theVALTOTALAFTER;
                theVALTOTALAFTER = this.getVALTOTALAFTER();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valtotalafter", theVALTOTALAFTER), currentHashCode, theVALTOTALAFTER);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                TextFtMultiLines theSHORTDESCR;
                theSHORTDESCR = this.getSHORTDESCR();
                strategy.appendField(locator, this, "shortdescr", buffer, theSHORTDESCR);
            }
            {
                TextFtMultiLines theUNFORESEENCIRCUMSTANCE;
                theUNFORESEENCIRCUMSTANCE = this.getUNFORESEENCIRCUMSTANCE();
                strategy.appendField(locator, this, "unforeseencircumstance", buffer, theUNFORESEENCIRCUMSTANCE);
            }
            {
                TextFtMultiLines theADDITIONALNEED;
                theADDITIONALNEED = this.getADDITIONALNEED();
                strategy.appendField(locator, this, "additionalneed", buffer, theADDITIONALNEED);
            }
            {
                Val theVALTOTALBEFORE;
                theVALTOTALBEFORE = this.getVALTOTALBEFORE();
                strategy.appendField(locator, this, "valtotalbefore", buffer, theVALTOTALBEFORE);
            }
            {
                Val theVALTOTALAFTER;
                theVALTOTALAFTER = this.getVALTOTALAFTER();
                strategy.appendField(locator, this, "valtotalafter", buffer, theVALTOTALAFTER);
            }
            return buffer;
        }

    }

}
