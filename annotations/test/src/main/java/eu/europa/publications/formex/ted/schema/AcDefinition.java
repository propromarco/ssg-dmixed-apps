//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ac_definition complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ac_definition">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}AC_CRITERION"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}AC_WEIGHTING"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ac_definition", propOrder = {
    "accriterion",
    "acweighting"
})
public class AcDefinition
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "AC_CRITERION", required = true)
    protected String accriterion;
    @XmlElement(name = "AC_WEIGHTING", required = true)
    protected String acweighting;

    /**
     * Gets the value of the accriterion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getACCRITERION() {
        return accriterion;
    }

    /**
     * Sets the value of the accriterion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setACCRITERION(String value) {
        this.accriterion = value;
    }

    /**
     * Gets the value of the acweighting property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getACWEIGHTING() {
        return acweighting;
    }

    /**
     * Sets the value of the acweighting property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setACWEIGHTING(String value) {
        this.acweighting = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AcDefinition)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AcDefinition that = ((AcDefinition) object);
        {
            String lhsACCRITERION;
            lhsACCRITERION = this.getACCRITERION();
            String rhsACCRITERION;
            rhsACCRITERION = that.getACCRITERION();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accriterion", lhsACCRITERION), LocatorUtils.property(thatLocator, "accriterion", rhsACCRITERION), lhsACCRITERION, rhsACCRITERION)) {
                return false;
            }
        }
        {
            String lhsACWEIGHTING;
            lhsACWEIGHTING = this.getACWEIGHTING();
            String rhsACWEIGHTING;
            rhsACWEIGHTING = that.getACWEIGHTING();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "acweighting", lhsACWEIGHTING), LocatorUtils.property(thatLocator, "acweighting", rhsACWEIGHTING), lhsACWEIGHTING, rhsACWEIGHTING)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theACCRITERION;
            theACCRITERION = this.getACCRITERION();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accriterion", theACCRITERION), currentHashCode, theACCRITERION);
        }
        {
            String theACWEIGHTING;
            theACWEIGHTING = this.getACWEIGHTING();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "acweighting", theACWEIGHTING), currentHashCode, theACWEIGHTING);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theACCRITERION;
            theACCRITERION = this.getACCRITERION();
            strategy.appendField(locator, this, "accriterion", buffer, theACCRITERION);
        }
        {
            String theACWEIGHTING;
            theACWEIGHTING = this.getACWEIGHTING();
            strategy.appendField(locator, this, "acweighting", buffer, theACWEIGHTING);
        }
        return buffer;
    }

}
