//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Section II: OBJECT
 * 
 * <p>Java class for object_contract_f12 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="object_contract_f12">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}TITLE"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}REFERENCE_NUMBER" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CPV_MAIN"/>
 *         &lt;element name="OBJECT_DESCR" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}object_f12"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "object_contract_f12", propOrder = {
    "title",
    "referencenumber",
    "cpvmain",
    "objectdescr"
})
public class ObjectContractF12
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "TITLE", required = true)
    protected TITLE title;
    @XmlElement(name = "REFERENCE_NUMBER")
    protected String referencenumber;
    @XmlElement(name = "CPV_MAIN", required = true)
    protected CpvSet cpvmain;
    @XmlElement(name = "OBJECT_DESCR", required = true)
    protected ObjectF12 objectdescr;

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link TITLE }
     *     
     */
    public TITLE getTITLE() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link TITLE }
     *     
     */
    public void setTITLE(TITLE value) {
        this.title = value;
    }

    /**
     * Gets the value of the referencenumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getREFERENCENUMBER() {
        return referencenumber;
    }

    /**
     * Sets the value of the referencenumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setREFERENCENUMBER(String value) {
        this.referencenumber = value;
    }

    /**
     * Gets the value of the cpvmain property.
     * 
     * @return
     *     possible object is
     *     {@link CpvSet }
     *     
     */
    public CpvSet getCPVMAIN() {
        return cpvmain;
    }

    /**
     * Sets the value of the cpvmain property.
     * 
     * @param value
     *     allowed object is
     *     {@link CpvSet }
     *     
     */
    public void setCPVMAIN(CpvSet value) {
        this.cpvmain = value;
    }

    /**
     * Gets the value of the objectdescr property.
     * 
     * @return
     *     possible object is
     *     {@link ObjectF12 }
     *     
     */
    public ObjectF12 getOBJECTDESCR() {
        return objectdescr;
    }

    /**
     * Sets the value of the objectdescr property.
     * 
     * @param value
     *     allowed object is
     *     {@link ObjectF12 }
     *     
     */
    public void setOBJECTDESCR(ObjectF12 value) {
        this.objectdescr = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ObjectContractF12)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ObjectContractF12 that = ((ObjectContractF12) object);
        {
            TITLE lhsTITLE;
            lhsTITLE = this.getTITLE();
            TITLE rhsTITLE;
            rhsTITLE = that.getTITLE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTITLE), LocatorUtils.property(thatLocator, "title", rhsTITLE), lhsTITLE, rhsTITLE)) {
                return false;
            }
        }
        {
            String lhsREFERENCENUMBER;
            lhsREFERENCENUMBER = this.getREFERENCENUMBER();
            String rhsREFERENCENUMBER;
            rhsREFERENCENUMBER = that.getREFERENCENUMBER();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referencenumber", lhsREFERENCENUMBER), LocatorUtils.property(thatLocator, "referencenumber", rhsREFERENCENUMBER), lhsREFERENCENUMBER, rhsREFERENCENUMBER)) {
                return false;
            }
        }
        {
            CpvSet lhsCPVMAIN;
            lhsCPVMAIN = this.getCPVMAIN();
            CpvSet rhsCPVMAIN;
            rhsCPVMAIN = that.getCPVMAIN();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvmain", lhsCPVMAIN), LocatorUtils.property(thatLocator, "cpvmain", rhsCPVMAIN), lhsCPVMAIN, rhsCPVMAIN)) {
                return false;
            }
        }
        {
            ObjectF12 lhsOBJECTDESCR;
            lhsOBJECTDESCR = this.getOBJECTDESCR();
            ObjectF12 rhsOBJECTDESCR;
            rhsOBJECTDESCR = that.getOBJECTDESCR();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "objectdescr", lhsOBJECTDESCR), LocatorUtils.property(thatLocator, "objectdescr", rhsOBJECTDESCR), lhsOBJECTDESCR, rhsOBJECTDESCR)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            TITLE theTITLE;
            theTITLE = this.getTITLE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTITLE), currentHashCode, theTITLE);
        }
        {
            String theREFERENCENUMBER;
            theREFERENCENUMBER = this.getREFERENCENUMBER();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referencenumber", theREFERENCENUMBER), currentHashCode, theREFERENCENUMBER);
        }
        {
            CpvSet theCPVMAIN;
            theCPVMAIN = this.getCPVMAIN();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvmain", theCPVMAIN), currentHashCode, theCPVMAIN);
        }
        {
            ObjectF12 theOBJECTDESCR;
            theOBJECTDESCR = this.getOBJECTDESCR();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "objectdescr", theOBJECTDESCR), currentHashCode, theOBJECTDESCR);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            TITLE theTITLE;
            theTITLE = this.getTITLE();
            strategy.appendField(locator, this, "title", buffer, theTITLE);
        }
        {
            String theREFERENCENUMBER;
            theREFERENCENUMBER = this.getREFERENCENUMBER();
            strategy.appendField(locator, this, "referencenumber", buffer, theREFERENCENUMBER);
        }
        {
            CpvSet theCPVMAIN;
            theCPVMAIN = this.getCPVMAIN();
            strategy.appendField(locator, this, "cpvmain", buffer, theCPVMAIN);
        }
        {
            ObjectF12 theOBJECTDESCR;
            theOBJECTDESCR = this.getOBJECTDESCR();
            strategy.appendField(locator, this, "objectdescr", buffer, theOBJECTDESCR);
        }
        return buffer;
    }

}
