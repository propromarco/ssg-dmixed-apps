//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Section V: AWARD OF CONTRACT
 * 
 * <p>Java class for award_contract_f15 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="award_contract_f15">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contract_number"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}TITLE" minOccurs="0"/>
 *         &lt;element name="AWARDED_CONTRACT">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}DATE_CONCLUSION_CONTRACT"/>
 *                   &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contractor"/>
 *                   &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}award_contract_value"/>
 *                   &lt;sequence minOccurs="0">
 *                     &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}LIKELY_SUBCONTRACTED"/>
 *                     &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}subcontracting"/>
 *                     &lt;element name="DIRECTIVE_2009_81_EC" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;choice>
 *                               &lt;sequence>
 *                                 &lt;element name="AWARDED_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
 *                                 &lt;element name="PCT_RANGE_SHARE_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}prct_range" minOccurs="0"/>
 *                               &lt;/sequence>
 *                               &lt;element name="PCT_RANGE_SHARE_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}prct_range"/>
 *                             &lt;/choice>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *       &lt;attribute name="ITEM" use="required" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}nb_lot" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "award_contract_f15", propOrder = {
    "contractno",
    "lotno",
    "title",
    "awardedcontract"
})
public class AwardContractF15
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "CONTRACT_NO")
    protected String contractno;
    @XmlElement(name = "LOT_NO")
    protected String lotno;
    @XmlElement(name = "TITLE")
    protected TITLE title;
    @XmlElement(name = "AWARDED_CONTRACT", required = true)
    protected AwardContractF15 .AWARDEDCONTRACT awardedcontract;
    @XmlAttribute(name = "ITEM", required = true)
    protected int item;

    /**
     * Gets the value of the contractno property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCONTRACTNO() {
        return contractno;
    }

    /**
     * Sets the value of the contractno property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCONTRACTNO(String value) {
        this.contractno = value;
    }

    /**
     * Gets the value of the lotno property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLOTNO() {
        return lotno;
    }

    /**
     * Sets the value of the lotno property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLOTNO(String value) {
        this.lotno = value;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link TITLE }
     *     
     */
    public TITLE getTITLE() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link TITLE }
     *     
     */
    public void setTITLE(TITLE value) {
        this.title = value;
    }

    /**
     * Gets the value of the awardedcontract property.
     * 
     * @return
     *     possible object is
     *     {@link AwardContractF15 .AWARDEDCONTRACT }
     *     
     */
    public AwardContractF15 .AWARDEDCONTRACT getAWARDEDCONTRACT() {
        return awardedcontract;
    }

    /**
     * Sets the value of the awardedcontract property.
     * 
     * @param value
     *     allowed object is
     *     {@link AwardContractF15 .AWARDEDCONTRACT }
     *     
     */
    public void setAWARDEDCONTRACT(AwardContractF15 .AWARDEDCONTRACT value) {
        this.awardedcontract = value;
    }

    /**
     * Gets the value of the item property.
     * 
     */
    public int getITEM() {
        return item;
    }

    /**
     * Sets the value of the item property.
     * 
     */
    public void setITEM(int value) {
        this.item = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AwardContractF15)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final AwardContractF15 that = ((AwardContractF15) object);
        {
            String lhsCONTRACTNO;
            lhsCONTRACTNO = this.getCONTRACTNO();
            String rhsCONTRACTNO;
            rhsCONTRACTNO = that.getCONTRACTNO();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contractno", lhsCONTRACTNO), LocatorUtils.property(thatLocator, "contractno", rhsCONTRACTNO), lhsCONTRACTNO, rhsCONTRACTNO)) {
                return false;
            }
        }
        {
            String lhsLOTNO;
            lhsLOTNO = this.getLOTNO();
            String rhsLOTNO;
            rhsLOTNO = that.getLOTNO();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lotno", lhsLOTNO), LocatorUtils.property(thatLocator, "lotno", rhsLOTNO), lhsLOTNO, rhsLOTNO)) {
                return false;
            }
        }
        {
            TITLE lhsTITLE;
            lhsTITLE = this.getTITLE();
            TITLE rhsTITLE;
            rhsTITLE = that.getTITLE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTITLE), LocatorUtils.property(thatLocator, "title", rhsTITLE), lhsTITLE, rhsTITLE)) {
                return false;
            }
        }
        {
            AwardContractF15 .AWARDEDCONTRACT lhsAWARDEDCONTRACT;
            lhsAWARDEDCONTRACT = this.getAWARDEDCONTRACT();
            AwardContractF15 .AWARDEDCONTRACT rhsAWARDEDCONTRACT;
            rhsAWARDEDCONTRACT = that.getAWARDEDCONTRACT();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "awardedcontract", lhsAWARDEDCONTRACT), LocatorUtils.property(thatLocator, "awardedcontract", rhsAWARDEDCONTRACT), lhsAWARDEDCONTRACT, rhsAWARDEDCONTRACT)) {
                return false;
            }
        }
        {
            int lhsITEM;
            lhsITEM = (true?this.getITEM(): 0);
            int rhsITEM;
            rhsITEM = (true?that.getITEM(): 0);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "item", lhsITEM), LocatorUtils.property(thatLocator, "item", rhsITEM), lhsITEM, rhsITEM)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theCONTRACTNO;
            theCONTRACTNO = this.getCONTRACTNO();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contractno", theCONTRACTNO), currentHashCode, theCONTRACTNO);
        }
        {
            String theLOTNO;
            theLOTNO = this.getLOTNO();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lotno", theLOTNO), currentHashCode, theLOTNO);
        }
        {
            TITLE theTITLE;
            theTITLE = this.getTITLE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTITLE), currentHashCode, theTITLE);
        }
        {
            AwardContractF15 .AWARDEDCONTRACT theAWARDEDCONTRACT;
            theAWARDEDCONTRACT = this.getAWARDEDCONTRACT();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "awardedcontract", theAWARDEDCONTRACT), currentHashCode, theAWARDEDCONTRACT);
        }
        {
            int theITEM;
            theITEM = (true?this.getITEM(): 0);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "item", theITEM), currentHashCode, theITEM);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theCONTRACTNO;
            theCONTRACTNO = this.getCONTRACTNO();
            strategy.appendField(locator, this, "contractno", buffer, theCONTRACTNO);
        }
        {
            String theLOTNO;
            theLOTNO = this.getLOTNO();
            strategy.appendField(locator, this, "lotno", buffer, theLOTNO);
        }
        {
            TITLE theTITLE;
            theTITLE = this.getTITLE();
            strategy.appendField(locator, this, "title", buffer, theTITLE);
        }
        {
            AwardContractF15 .AWARDEDCONTRACT theAWARDEDCONTRACT;
            theAWARDEDCONTRACT = this.getAWARDEDCONTRACT();
            strategy.appendField(locator, this, "awardedcontract", buffer, theAWARDEDCONTRACT);
        }
        {
            int theITEM;
            theITEM = (true?this.getITEM(): 0);
            strategy.appendField(locator, this, "item", buffer, theITEM);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}DATE_CONCLUSION_CONTRACT"/>
     *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contractor"/>
     *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}award_contract_value"/>
     *         &lt;sequence minOccurs="0">
     *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}LIKELY_SUBCONTRACTED"/>
     *           &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}subcontracting"/>
     *           &lt;element name="DIRECTIVE_2009_81_EC" minOccurs="0">
     *             &lt;complexType>
     *               &lt;complexContent>
     *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                   &lt;choice>
     *                     &lt;sequence>
     *                       &lt;element name="AWARDED_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
     *                       &lt;element name="PCT_RANGE_SHARE_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}prct_range" minOccurs="0"/>
     *                     &lt;/sequence>
     *                     &lt;element name="PCT_RANGE_SHARE_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}prct_range"/>
     *                   &lt;/choice>
     *                 &lt;/restriction>
     *               &lt;/complexContent>
     *             &lt;/complexType>
     *           &lt;/element>
     *         &lt;/sequence>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "dateconclusioncontract",
        "noawardedtogroup",
        "awardedtogroup",
        "contractors",
        "valestimatedtotal",
        "valrangetotal",
        "valtotal",
        "likelysubcontracted",
        "valsubcontracting",
        "pctsubcontracting",
        "infoaddsubcontracting",
        "directive200981EC"
    })
    public static class AWARDEDCONTRACT
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "DATE_CONCLUSION_CONTRACT", required = true)
        protected XMLGregorianCalendar dateconclusioncontract;
        @XmlElement(name = "NO_AWARDED_TO_GROUP")
        protected Empty noawardedtogroup;
        @XmlElement(name = "AWARDED_TO_GROUP")
        protected Empty awardedtogroup;
        @XmlElement(name = "CONTRACTOR")
        protected List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> contractors;
        @XmlElement(name = "VAL_ESTIMATED_TOTAL")
        protected Val valestimatedtotal;
        @XmlElement(name = "VAL_RANGE_TOTAL")
        protected ValRange valrangetotal;
        @XmlElement(name = "VAL_TOTAL")
        protected Val valtotal;
        @XmlElement(name = "LIKELY_SUBCONTRACTED")
        protected Empty likelysubcontracted;
        @XmlElement(name = "VAL_SUBCONTRACTING")
        protected Val valsubcontracting;
        @XmlElement(name = "PCT_SUBCONTRACTING")
        protected Integer pctsubcontracting;
        @XmlElement(name = "INFO_ADD_SUBCONTRACTING")
        protected TextFtMultiLines infoaddsubcontracting;
        @XmlElement(name = "DIRECTIVE_2009_81_EC")
        protected AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC directive200981EC;

        /**
         * Gets the value of the dateconclusioncontract property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getDATECONCLUSIONCONTRACT() {
            return dateconclusioncontract;
        }

        /**
         * Sets the value of the dateconclusioncontract property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setDATECONCLUSIONCONTRACT(XMLGregorianCalendar value) {
            this.dateconclusioncontract = value;
        }

        /**
         * Gets the value of the noawardedtogroup property.
         * 
         * @return
         *     possible object is
         *     {@link Empty }
         *     
         */
        public Empty getNOAWARDEDTOGROUP() {
            return noawardedtogroup;
        }

        /**
         * Sets the value of the noawardedtogroup property.
         * 
         * @param value
         *     allowed object is
         *     {@link Empty }
         *     
         */
        public void setNOAWARDEDTOGROUP(Empty value) {
            this.noawardedtogroup = value;
        }

        /**
         * Gets the value of the awardedtogroup property.
         * 
         * @return
         *     possible object is
         *     {@link Empty }
         *     
         */
        public Empty getAWARDEDTOGROUP() {
            return awardedtogroup;
        }

        /**
         * Sets the value of the awardedtogroup property.
         * 
         * @param value
         *     allowed object is
         *     {@link Empty }
         *     
         */
        public void setAWARDEDTOGROUP(Empty value) {
            this.awardedtogroup = value;
        }

        /**
         * Gets the value of the contractors property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the contractors property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCONTRACTORS().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR }
         * 
         * 
         */
        public List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> getCONTRACTORS() {
            if (contractors == null) {
                contractors = new ArrayList<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR>();
            }
            return this.contractors;
        }

        /**
         * Gets the value of the valestimatedtotal property.
         * 
         * @return
         *     possible object is
         *     {@link Val }
         *     
         */
        public Val getVALESTIMATEDTOTAL() {
            return valestimatedtotal;
        }

        /**
         * Sets the value of the valestimatedtotal property.
         * 
         * @param value
         *     allowed object is
         *     {@link Val }
         *     
         */
        public void setVALESTIMATEDTOTAL(Val value) {
            this.valestimatedtotal = value;
        }

        /**
         * Gets the value of the valrangetotal property.
         * 
         * @return
         *     possible object is
         *     {@link ValRange }
         *     
         */
        public ValRange getVALRANGETOTAL() {
            return valrangetotal;
        }

        /**
         * Sets the value of the valrangetotal property.
         * 
         * @param value
         *     allowed object is
         *     {@link ValRange }
         *     
         */
        public void setVALRANGETOTAL(ValRange value) {
            this.valrangetotal = value;
        }

        /**
         * Gets the value of the valtotal property.
         * 
         * @return
         *     possible object is
         *     {@link Val }
         *     
         */
        public Val getVALTOTAL() {
            return valtotal;
        }

        /**
         * Sets the value of the valtotal property.
         * 
         * @param value
         *     allowed object is
         *     {@link Val }
         *     
         */
        public void setVALTOTAL(Val value) {
            this.valtotal = value;
        }

        /**
         * Gets the value of the likelysubcontracted property.
         * 
         * @return
         *     possible object is
         *     {@link Empty }
         *     
         */
        public Empty getLIKELYSUBCONTRACTED() {
            return likelysubcontracted;
        }

        /**
         * Sets the value of the likelysubcontracted property.
         * 
         * @param value
         *     allowed object is
         *     {@link Empty }
         *     
         */
        public void setLIKELYSUBCONTRACTED(Empty value) {
            this.likelysubcontracted = value;
        }

        /**
         * Gets the value of the valsubcontracting property.
         * 
         * @return
         *     possible object is
         *     {@link Val }
         *     
         */
        public Val getVALSUBCONTRACTING() {
            return valsubcontracting;
        }

        /**
         * Sets the value of the valsubcontracting property.
         * 
         * @param value
         *     allowed object is
         *     {@link Val }
         *     
         */
        public void setVALSUBCONTRACTING(Val value) {
            this.valsubcontracting = value;
        }

        /**
         * Gets the value of the pctsubcontracting property.
         * 
         * @return
         *     possible object is
         *     {@link Integer }
         *     
         */
        public Integer getPCTSUBCONTRACTING() {
            return pctsubcontracting;
        }

        /**
         * Sets the value of the pctsubcontracting property.
         * 
         * @param value
         *     allowed object is
         *     {@link Integer }
         *     
         */
        public void setPCTSUBCONTRACTING(Integer value) {
            this.pctsubcontracting = value;
        }

        /**
         * Gets the value of the infoaddsubcontracting property.
         * 
         * @return
         *     possible object is
         *     {@link TextFtMultiLines }
         *     
         */
        public TextFtMultiLines getINFOADDSUBCONTRACTING() {
            return infoaddsubcontracting;
        }

        /**
         * Sets the value of the infoaddsubcontracting property.
         * 
         * @param value
         *     allowed object is
         *     {@link TextFtMultiLines }
         *     
         */
        public void setINFOADDSUBCONTRACTING(TextFtMultiLines value) {
            this.infoaddsubcontracting = value;
        }

        /**
         * Gets the value of the directive200981EC property.
         * 
         * @return
         *     possible object is
         *     {@link AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC }
         *     
         */
        public AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC getDIRECTIVE200981EC() {
            return directive200981EC;
        }

        /**
         * Sets the value of the directive200981EC property.
         * 
         * @param value
         *     allowed object is
         *     {@link AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC }
         *     
         */
        public void setDIRECTIVE200981EC(AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC value) {
            this.directive200981EC = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof AwardContractF15 .AWARDEDCONTRACT)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final AwardContractF15 .AWARDEDCONTRACT that = ((AwardContractF15 .AWARDEDCONTRACT) object);
            {
                XMLGregorianCalendar lhsDATECONCLUSIONCONTRACT;
                lhsDATECONCLUSIONCONTRACT = this.getDATECONCLUSIONCONTRACT();
                XMLGregorianCalendar rhsDATECONCLUSIONCONTRACT;
                rhsDATECONCLUSIONCONTRACT = that.getDATECONCLUSIONCONTRACT();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "dateconclusioncontract", lhsDATECONCLUSIONCONTRACT), LocatorUtils.property(thatLocator, "dateconclusioncontract", rhsDATECONCLUSIONCONTRACT), lhsDATECONCLUSIONCONTRACT, rhsDATECONCLUSIONCONTRACT)) {
                    return false;
                }
            }
            {
                Empty lhsNOAWARDEDTOGROUP;
                lhsNOAWARDEDTOGROUP = this.getNOAWARDEDTOGROUP();
                Empty rhsNOAWARDEDTOGROUP;
                rhsNOAWARDEDTOGROUP = that.getNOAWARDEDTOGROUP();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "noawardedtogroup", lhsNOAWARDEDTOGROUP), LocatorUtils.property(thatLocator, "noawardedtogroup", rhsNOAWARDEDTOGROUP), lhsNOAWARDEDTOGROUP, rhsNOAWARDEDTOGROUP)) {
                    return false;
                }
            }
            {
                Empty lhsAWARDEDTOGROUP;
                lhsAWARDEDTOGROUP = this.getAWARDEDTOGROUP();
                Empty rhsAWARDEDTOGROUP;
                rhsAWARDEDTOGROUP = that.getAWARDEDTOGROUP();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "awardedtogroup", lhsAWARDEDTOGROUP), LocatorUtils.property(thatLocator, "awardedtogroup", rhsAWARDEDTOGROUP), lhsAWARDEDTOGROUP, rhsAWARDEDTOGROUP)) {
                    return false;
                }
            }
            {
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> lhsCONTRACTORS;
                lhsCONTRACTORS = (((this.contractors!= null)&&(!this.contractors.isEmpty()))?this.getCONTRACTORS():null);
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> rhsCONTRACTORS;
                rhsCONTRACTORS = (((that.contractors!= null)&&(!that.contractors.isEmpty()))?that.getCONTRACTORS():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "contractors", lhsCONTRACTORS), LocatorUtils.property(thatLocator, "contractors", rhsCONTRACTORS), lhsCONTRACTORS, rhsCONTRACTORS)) {
                    return false;
                }
            }
            {
                Val lhsVALESTIMATEDTOTAL;
                lhsVALESTIMATEDTOTAL = this.getVALESTIMATEDTOTAL();
                Val rhsVALESTIMATEDTOTAL;
                rhsVALESTIMATEDTOTAL = that.getVALESTIMATEDTOTAL();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valestimatedtotal", lhsVALESTIMATEDTOTAL), LocatorUtils.property(thatLocator, "valestimatedtotal", rhsVALESTIMATEDTOTAL), lhsVALESTIMATEDTOTAL, rhsVALESTIMATEDTOTAL)) {
                    return false;
                }
            }
            {
                ValRange lhsVALRANGETOTAL;
                lhsVALRANGETOTAL = this.getVALRANGETOTAL();
                ValRange rhsVALRANGETOTAL;
                rhsVALRANGETOTAL = that.getVALRANGETOTAL();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valrangetotal", lhsVALRANGETOTAL), LocatorUtils.property(thatLocator, "valrangetotal", rhsVALRANGETOTAL), lhsVALRANGETOTAL, rhsVALRANGETOTAL)) {
                    return false;
                }
            }
            {
                Val lhsVALTOTAL;
                lhsVALTOTAL = this.getVALTOTAL();
                Val rhsVALTOTAL;
                rhsVALTOTAL = that.getVALTOTAL();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valtotal", lhsVALTOTAL), LocatorUtils.property(thatLocator, "valtotal", rhsVALTOTAL), lhsVALTOTAL, rhsVALTOTAL)) {
                    return false;
                }
            }
            {
                Empty lhsLIKELYSUBCONTRACTED;
                lhsLIKELYSUBCONTRACTED = this.getLIKELYSUBCONTRACTED();
                Empty rhsLIKELYSUBCONTRACTED;
                rhsLIKELYSUBCONTRACTED = that.getLIKELYSUBCONTRACTED();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "likelysubcontracted", lhsLIKELYSUBCONTRACTED), LocatorUtils.property(thatLocator, "likelysubcontracted", rhsLIKELYSUBCONTRACTED), lhsLIKELYSUBCONTRACTED, rhsLIKELYSUBCONTRACTED)) {
                    return false;
                }
            }
            {
                Val lhsVALSUBCONTRACTING;
                lhsVALSUBCONTRACTING = this.getVALSUBCONTRACTING();
                Val rhsVALSUBCONTRACTING;
                rhsVALSUBCONTRACTING = that.getVALSUBCONTRACTING();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valsubcontracting", lhsVALSUBCONTRACTING), LocatorUtils.property(thatLocator, "valsubcontracting", rhsVALSUBCONTRACTING), lhsVALSUBCONTRACTING, rhsVALSUBCONTRACTING)) {
                    return false;
                }
            }
            {
                Integer lhsPCTSUBCONTRACTING;
                lhsPCTSUBCONTRACTING = this.getPCTSUBCONTRACTING();
                Integer rhsPCTSUBCONTRACTING;
                rhsPCTSUBCONTRACTING = that.getPCTSUBCONTRACTING();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "pctsubcontracting", lhsPCTSUBCONTRACTING), LocatorUtils.property(thatLocator, "pctsubcontracting", rhsPCTSUBCONTRACTING), lhsPCTSUBCONTRACTING, rhsPCTSUBCONTRACTING)) {
                    return false;
                }
            }
            {
                TextFtMultiLines lhsINFOADDSUBCONTRACTING;
                lhsINFOADDSUBCONTRACTING = this.getINFOADDSUBCONTRACTING();
                TextFtMultiLines rhsINFOADDSUBCONTRACTING;
                rhsINFOADDSUBCONTRACTING = that.getINFOADDSUBCONTRACTING();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "infoaddsubcontracting", lhsINFOADDSUBCONTRACTING), LocatorUtils.property(thatLocator, "infoaddsubcontracting", rhsINFOADDSUBCONTRACTING), lhsINFOADDSUBCONTRACTING, rhsINFOADDSUBCONTRACTING)) {
                    return false;
                }
            }
            {
                AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC lhsDIRECTIVE200981EC;
                lhsDIRECTIVE200981EC = this.getDIRECTIVE200981EC();
                AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC rhsDIRECTIVE200981EC;
                rhsDIRECTIVE200981EC = that.getDIRECTIVE200981EC();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "directive200981EC", lhsDIRECTIVE200981EC), LocatorUtils.property(thatLocator, "directive200981EC", rhsDIRECTIVE200981EC), lhsDIRECTIVE200981EC, rhsDIRECTIVE200981EC)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                XMLGregorianCalendar theDATECONCLUSIONCONTRACT;
                theDATECONCLUSIONCONTRACT = this.getDATECONCLUSIONCONTRACT();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateconclusioncontract", theDATECONCLUSIONCONTRACT), currentHashCode, theDATECONCLUSIONCONTRACT);
            }
            {
                Empty theNOAWARDEDTOGROUP;
                theNOAWARDEDTOGROUP = this.getNOAWARDEDTOGROUP();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noawardedtogroup", theNOAWARDEDTOGROUP), currentHashCode, theNOAWARDEDTOGROUP);
            }
            {
                Empty theAWARDEDTOGROUP;
                theAWARDEDTOGROUP = this.getAWARDEDTOGROUP();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "awardedtogroup", theAWARDEDTOGROUP), currentHashCode, theAWARDEDTOGROUP);
            }
            {
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> theCONTRACTORS;
                theCONTRACTORS = (((this.contractors!= null)&&(!this.contractors.isEmpty()))?this.getCONTRACTORS():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contractors", theCONTRACTORS), currentHashCode, theCONTRACTORS);
            }
            {
                Val theVALESTIMATEDTOTAL;
                theVALESTIMATEDTOTAL = this.getVALESTIMATEDTOTAL();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valestimatedtotal", theVALESTIMATEDTOTAL), currentHashCode, theVALESTIMATEDTOTAL);
            }
            {
                ValRange theVALRANGETOTAL;
                theVALRANGETOTAL = this.getVALRANGETOTAL();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valrangetotal", theVALRANGETOTAL), currentHashCode, theVALRANGETOTAL);
            }
            {
                Val theVALTOTAL;
                theVALTOTAL = this.getVALTOTAL();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valtotal", theVALTOTAL), currentHashCode, theVALTOTAL);
            }
            {
                Empty theLIKELYSUBCONTRACTED;
                theLIKELYSUBCONTRACTED = this.getLIKELYSUBCONTRACTED();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "likelysubcontracted", theLIKELYSUBCONTRACTED), currentHashCode, theLIKELYSUBCONTRACTED);
            }
            {
                Val theVALSUBCONTRACTING;
                theVALSUBCONTRACTING = this.getVALSUBCONTRACTING();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valsubcontracting", theVALSUBCONTRACTING), currentHashCode, theVALSUBCONTRACTING);
            }
            {
                Integer thePCTSUBCONTRACTING;
                thePCTSUBCONTRACTING = this.getPCTSUBCONTRACTING();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pctsubcontracting", thePCTSUBCONTRACTING), currentHashCode, thePCTSUBCONTRACTING);
            }
            {
                TextFtMultiLines theINFOADDSUBCONTRACTING;
                theINFOADDSUBCONTRACTING = this.getINFOADDSUBCONTRACTING();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "infoaddsubcontracting", theINFOADDSUBCONTRACTING), currentHashCode, theINFOADDSUBCONTRACTING);
            }
            {
                AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC theDIRECTIVE200981EC;
                theDIRECTIVE200981EC = this.getDIRECTIVE200981EC();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "directive200981EC", theDIRECTIVE200981EC), currentHashCode, theDIRECTIVE200981EC);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                XMLGregorianCalendar theDATECONCLUSIONCONTRACT;
                theDATECONCLUSIONCONTRACT = this.getDATECONCLUSIONCONTRACT();
                strategy.appendField(locator, this, "dateconclusioncontract", buffer, theDATECONCLUSIONCONTRACT);
            }
            {
                Empty theNOAWARDEDTOGROUP;
                theNOAWARDEDTOGROUP = this.getNOAWARDEDTOGROUP();
                strategy.appendField(locator, this, "noawardedtogroup", buffer, theNOAWARDEDTOGROUP);
            }
            {
                Empty theAWARDEDTOGROUP;
                theAWARDEDTOGROUP = this.getAWARDEDTOGROUP();
                strategy.appendField(locator, this, "awardedtogroup", buffer, theAWARDEDTOGROUP);
            }
            {
                List<eu.europa.publications.formex.ted.schema.AwardContractF20 .AWARDEDCONTRACT.CONTRACTOR> theCONTRACTORS;
                theCONTRACTORS = (((this.contractors!= null)&&(!this.contractors.isEmpty()))?this.getCONTRACTORS():null);
                strategy.appendField(locator, this, "contractors", buffer, theCONTRACTORS);
            }
            {
                Val theVALESTIMATEDTOTAL;
                theVALESTIMATEDTOTAL = this.getVALESTIMATEDTOTAL();
                strategy.appendField(locator, this, "valestimatedtotal", buffer, theVALESTIMATEDTOTAL);
            }
            {
                ValRange theVALRANGETOTAL;
                theVALRANGETOTAL = this.getVALRANGETOTAL();
                strategy.appendField(locator, this, "valrangetotal", buffer, theVALRANGETOTAL);
            }
            {
                Val theVALTOTAL;
                theVALTOTAL = this.getVALTOTAL();
                strategy.appendField(locator, this, "valtotal", buffer, theVALTOTAL);
            }
            {
                Empty theLIKELYSUBCONTRACTED;
                theLIKELYSUBCONTRACTED = this.getLIKELYSUBCONTRACTED();
                strategy.appendField(locator, this, "likelysubcontracted", buffer, theLIKELYSUBCONTRACTED);
            }
            {
                Val theVALSUBCONTRACTING;
                theVALSUBCONTRACTING = this.getVALSUBCONTRACTING();
                strategy.appendField(locator, this, "valsubcontracting", buffer, theVALSUBCONTRACTING);
            }
            {
                Integer thePCTSUBCONTRACTING;
                thePCTSUBCONTRACTING = this.getPCTSUBCONTRACTING();
                strategy.appendField(locator, this, "pctsubcontracting", buffer, thePCTSUBCONTRACTING);
            }
            {
                TextFtMultiLines theINFOADDSUBCONTRACTING;
                theINFOADDSUBCONTRACTING = this.getINFOADDSUBCONTRACTING();
                strategy.appendField(locator, this, "infoaddsubcontracting", buffer, theINFOADDSUBCONTRACTING);
            }
            {
                AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC theDIRECTIVE200981EC;
                theDIRECTIVE200981EC = this.getDIRECTIVE200981EC();
                strategy.appendField(locator, this, "directive200981EC", buffer, theDIRECTIVE200981EC);
            }
            return buffer;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;choice>
         *         &lt;sequence>
         *           &lt;element name="AWARDED_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
         *           &lt;element name="PCT_RANGE_SHARE_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}prct_range" minOccurs="0"/>
         *         &lt;/sequence>
         *         &lt;element name="PCT_RANGE_SHARE_SUBCONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}prct_range"/>
         *       &lt;/choice>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "awardedsubcontracting",
            "pctrangesharesubcontracting"
        })
        public static class DIRECTIVE200981EC
            implements Equals, HashCode, ToString
        {

            @XmlElement(name = "AWARDED_SUBCONTRACTING")
            protected Empty awardedsubcontracting;
            @XmlElement(name = "PCT_RANGE_SHARE_SUBCONTRACTING")
            protected PrctRange pctrangesharesubcontracting;

            /**
             * Gets the value of the awardedsubcontracting property.
             * 
             * @return
             *     possible object is
             *     {@link Empty }
             *     
             */
            public Empty getAWARDEDSUBCONTRACTING() {
                return awardedsubcontracting;
            }

            /**
             * Sets the value of the awardedsubcontracting property.
             * 
             * @param value
             *     allowed object is
             *     {@link Empty }
             *     
             */
            public void setAWARDEDSUBCONTRACTING(Empty value) {
                this.awardedsubcontracting = value;
            }

            /**
             * Gets the value of the pctrangesharesubcontracting property.
             * 
             * @return
             *     possible object is
             *     {@link PrctRange }
             *     
             */
            public PrctRange getPCTRANGESHARESUBCONTRACTING() {
                return pctrangesharesubcontracting;
            }

            /**
             * Sets the value of the pctrangesharesubcontracting property.
             * 
             * @param value
             *     allowed object is
             *     {@link PrctRange }
             *     
             */
            public void setPCTRANGESHARESUBCONTRACTING(PrctRange value) {
                this.pctrangesharesubcontracting = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC that = ((AwardContractF15 .AWARDEDCONTRACT.DIRECTIVE200981EC) object);
                {
                    Empty lhsAWARDEDSUBCONTRACTING;
                    lhsAWARDEDSUBCONTRACTING = this.getAWARDEDSUBCONTRACTING();
                    Empty rhsAWARDEDSUBCONTRACTING;
                    rhsAWARDEDSUBCONTRACTING = that.getAWARDEDSUBCONTRACTING();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "awardedsubcontracting", lhsAWARDEDSUBCONTRACTING), LocatorUtils.property(thatLocator, "awardedsubcontracting", rhsAWARDEDSUBCONTRACTING), lhsAWARDEDSUBCONTRACTING, rhsAWARDEDSUBCONTRACTING)) {
                        return false;
                    }
                }
                {
                    PrctRange lhsPCTRANGESHARESUBCONTRACTING;
                    lhsPCTRANGESHARESUBCONTRACTING = this.getPCTRANGESHARESUBCONTRACTING();
                    PrctRange rhsPCTRANGESHARESUBCONTRACTING;
                    rhsPCTRANGESHARESUBCONTRACTING = that.getPCTRANGESHARESUBCONTRACTING();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "pctrangesharesubcontracting", lhsPCTRANGESHARESUBCONTRACTING), LocatorUtils.property(thatLocator, "pctrangesharesubcontracting", rhsPCTRANGESHARESUBCONTRACTING), lhsPCTRANGESHARESUBCONTRACTING, rhsPCTRANGESHARESUBCONTRACTING)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    Empty theAWARDEDSUBCONTRACTING;
                    theAWARDEDSUBCONTRACTING = this.getAWARDEDSUBCONTRACTING();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "awardedsubcontracting", theAWARDEDSUBCONTRACTING), currentHashCode, theAWARDEDSUBCONTRACTING);
                }
                {
                    PrctRange thePCTRANGESHARESUBCONTRACTING;
                    thePCTRANGESHARESUBCONTRACTING = this.getPCTRANGESHARESUBCONTRACTING();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "pctrangesharesubcontracting", thePCTRANGESHARESUBCONTRACTING), currentHashCode, thePCTRANGESHARESUBCONTRACTING);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    Empty theAWARDEDSUBCONTRACTING;
                    theAWARDEDSUBCONTRACTING = this.getAWARDEDSUBCONTRACTING();
                    strategy.appendField(locator, this, "awardedsubcontracting", buffer, theAWARDEDSUBCONTRACTING);
                }
                {
                    PrctRange thePCTRANGESHARESUBCONTRACTING;
                    thePCTRANGESHARESUBCONTRACTING = this.getPCTRANGESHARESUBCONTRACTING();
                    strategy.appendField(locator, this, "pctrangesharesubcontracting", buffer, thePCTRANGESHARESUBCONTRACTING);
                }
                return buffer;
            }

        }

    }

}
