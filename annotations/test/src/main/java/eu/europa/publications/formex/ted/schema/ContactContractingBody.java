//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for contact_contracting_body complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="contact_contracting_body">
 *   &lt;complexContent>
 *     &lt;extension base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}org_id_new">
 *       &lt;sequence>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}ADDRESS" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}TOWN"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}POSTAL_CODE" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}COUNTRY"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CONTACT_POINT" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PHONE" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}E_MAIL"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}FAX" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NUTS"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}URL_GENERAL"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}URL_BUYER" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "contact_contracting_body", propOrder = {
    "address",
    "town",
    "postalcode",
    "country",
    "contactpoint",
    "phone",
    "email",
    "fax",
    "nuts",
    "urlgeneral",
    "urlbuyer"
})
@XmlSeeAlso({
    BodyF20 .class,
    ContactBuyer.class
})
public class ContactContractingBody
    extends OrgIdNew
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "ADDRESS")
    protected String address;
    @XmlElement(name = "TOWN", required = true)
    protected String town;
    @XmlElement(name = "POSTAL_CODE")
    protected String postalcode;
    @XmlElement(name = "COUNTRY", required = true)
    protected COUNTRY country;
    @XmlElement(name = "CONTACT_POINT")
    protected String contactpoint;
    @XmlElement(name = "PHONE")
    protected String phone;
    @XmlElement(name = "E_MAIL", required = true)
    protected String email;
    @XmlElement(name = "FAX")
    protected String fax;
    @XmlElement(name = "NUTS", required = true)
    protected NUTS nuts;
    @XmlElement(name = "URL_GENERAL", required = true)
    protected String urlgeneral;
    @XmlElement(name = "URL_BUYER")
    protected String urlbuyer;

    /**
     * Gets the value of the address property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getADDRESS() {
        return address;
    }

    /**
     * Sets the value of the address property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setADDRESS(String value) {
        this.address = value;
    }

    /**
     * Gets the value of the town property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTOWN() {
        return town;
    }

    /**
     * Sets the value of the town property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTOWN(String value) {
        this.town = value;
    }

    /**
     * Gets the value of the postalcode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPOSTALCODE() {
        return postalcode;
    }

    /**
     * Sets the value of the postalcode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPOSTALCODE(String value) {
        this.postalcode = value;
    }

    /**
     * Gets the value of the country property.
     * 
     * @return
     *     possible object is
     *     {@link COUNTRY }
     *     
     */
    public COUNTRY getCOUNTRY() {
        return country;
    }

    /**
     * Sets the value of the country property.
     * 
     * @param value
     *     allowed object is
     *     {@link COUNTRY }
     *     
     */
    public void setCOUNTRY(COUNTRY value) {
        this.country = value;
    }

    /**
     * Gets the value of the contactpoint property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCONTACTPOINT() {
        return contactpoint;
    }

    /**
     * Sets the value of the contactpoint property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCONTACTPOINT(String value) {
        this.contactpoint = value;
    }

    /**
     * Gets the value of the phone property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPHONE() {
        return phone;
    }

    /**
     * Sets the value of the phone property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPHONE(String value) {
        this.phone = value;
    }

    /**
     * Gets the value of the email property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEMAIL() {
        return email;
    }

    /**
     * Sets the value of the email property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEMAIL(String value) {
        this.email = value;
    }

    /**
     * Gets the value of the fax property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFAX() {
        return fax;
    }

    /**
     * Sets the value of the fax property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFAX(String value) {
        this.fax = value;
    }

    /**
     * Gets the value of the nuts property.
     * 
     * @return
     *     possible object is
     *     {@link NUTS }
     *     
     */
    public NUTS getNUTS() {
        return nuts;
    }

    /**
     * Sets the value of the nuts property.
     * 
     * @param value
     *     allowed object is
     *     {@link NUTS }
     *     
     */
    public void setNUTS(NUTS value) {
        this.nuts = value;
    }

    /**
     * Gets the value of the urlgeneral property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getURLGENERAL() {
        return urlgeneral;
    }

    /**
     * Sets the value of the urlgeneral property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setURLGENERAL(String value) {
        this.urlgeneral = value;
    }

    /**
     * Gets the value of the urlbuyer property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getURLBUYER() {
        return urlbuyer;
    }

    /**
     * Sets the value of the urlbuyer property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setURLBUYER(String value) {
        this.urlbuyer = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ContactContractingBody)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ContactContractingBody that = ((ContactContractingBody) object);
        {
            String lhsADDRESS;
            lhsADDRESS = this.getADDRESS();
            String rhsADDRESS;
            rhsADDRESS = that.getADDRESS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "address", lhsADDRESS), LocatorUtils.property(thatLocator, "address", rhsADDRESS), lhsADDRESS, rhsADDRESS)) {
                return false;
            }
        }
        {
            String lhsTOWN;
            lhsTOWN = this.getTOWN();
            String rhsTOWN;
            rhsTOWN = that.getTOWN();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "town", lhsTOWN), LocatorUtils.property(thatLocator, "town", rhsTOWN), lhsTOWN, rhsTOWN)) {
                return false;
            }
        }
        {
            String lhsPOSTALCODE;
            lhsPOSTALCODE = this.getPOSTALCODE();
            String rhsPOSTALCODE;
            rhsPOSTALCODE = that.getPOSTALCODE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "postalcode", lhsPOSTALCODE), LocatorUtils.property(thatLocator, "postalcode", rhsPOSTALCODE), lhsPOSTALCODE, rhsPOSTALCODE)) {
                return false;
            }
        }
        {
            COUNTRY lhsCOUNTRY;
            lhsCOUNTRY = this.getCOUNTRY();
            COUNTRY rhsCOUNTRY;
            rhsCOUNTRY = that.getCOUNTRY();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "country", lhsCOUNTRY), LocatorUtils.property(thatLocator, "country", rhsCOUNTRY), lhsCOUNTRY, rhsCOUNTRY)) {
                return false;
            }
        }
        {
            String lhsCONTACTPOINT;
            lhsCONTACTPOINT = this.getCONTACTPOINT();
            String rhsCONTACTPOINT;
            rhsCONTACTPOINT = that.getCONTACTPOINT();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contactpoint", lhsCONTACTPOINT), LocatorUtils.property(thatLocator, "contactpoint", rhsCONTACTPOINT), lhsCONTACTPOINT, rhsCONTACTPOINT)) {
                return false;
            }
        }
        {
            String lhsPHONE;
            lhsPHONE = this.getPHONE();
            String rhsPHONE;
            rhsPHONE = that.getPHONE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "phone", lhsPHONE), LocatorUtils.property(thatLocator, "phone", rhsPHONE), lhsPHONE, rhsPHONE)) {
                return false;
            }
        }
        {
            String lhsEMAIL;
            lhsEMAIL = this.getEMAIL();
            String rhsEMAIL;
            rhsEMAIL = that.getEMAIL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "email", lhsEMAIL), LocatorUtils.property(thatLocator, "email", rhsEMAIL), lhsEMAIL, rhsEMAIL)) {
                return false;
            }
        }
        {
            String lhsFAX;
            lhsFAX = this.getFAX();
            String rhsFAX;
            rhsFAX = that.getFAX();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "fax", lhsFAX), LocatorUtils.property(thatLocator, "fax", rhsFAX), lhsFAX, rhsFAX)) {
                return false;
            }
        }
        {
            NUTS lhsNUTS;
            lhsNUTS = this.getNUTS();
            NUTS rhsNUTS;
            rhsNUTS = that.getNUTS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nuts", lhsNUTS), LocatorUtils.property(thatLocator, "nuts", rhsNUTS), lhsNUTS, rhsNUTS)) {
                return false;
            }
        }
        {
            String lhsURLGENERAL;
            lhsURLGENERAL = this.getURLGENERAL();
            String rhsURLGENERAL;
            rhsURLGENERAL = that.getURLGENERAL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "urlgeneral", lhsURLGENERAL), LocatorUtils.property(thatLocator, "urlgeneral", rhsURLGENERAL), lhsURLGENERAL, rhsURLGENERAL)) {
                return false;
            }
        }
        {
            String lhsURLBUYER;
            lhsURLBUYER = this.getURLBUYER();
            String rhsURLBUYER;
            rhsURLBUYER = that.getURLBUYER();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "urlbuyer", lhsURLBUYER), LocatorUtils.property(thatLocator, "urlbuyer", rhsURLBUYER), lhsURLBUYER, rhsURLBUYER)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theADDRESS;
            theADDRESS = this.getADDRESS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "address", theADDRESS), currentHashCode, theADDRESS);
        }
        {
            String theTOWN;
            theTOWN = this.getTOWN();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "town", theTOWN), currentHashCode, theTOWN);
        }
        {
            String thePOSTALCODE;
            thePOSTALCODE = this.getPOSTALCODE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "postalcode", thePOSTALCODE), currentHashCode, thePOSTALCODE);
        }
        {
            COUNTRY theCOUNTRY;
            theCOUNTRY = this.getCOUNTRY();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "country", theCOUNTRY), currentHashCode, theCOUNTRY);
        }
        {
            String theCONTACTPOINT;
            theCONTACTPOINT = this.getCONTACTPOINT();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contactpoint", theCONTACTPOINT), currentHashCode, theCONTACTPOINT);
        }
        {
            String thePHONE;
            thePHONE = this.getPHONE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "phone", thePHONE), currentHashCode, thePHONE);
        }
        {
            String theEMAIL;
            theEMAIL = this.getEMAIL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "email", theEMAIL), currentHashCode, theEMAIL);
        }
        {
            String theFAX;
            theFAX = this.getFAX();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "fax", theFAX), currentHashCode, theFAX);
        }
        {
            NUTS theNUTS;
            theNUTS = this.getNUTS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nuts", theNUTS), currentHashCode, theNUTS);
        }
        {
            String theURLGENERAL;
            theURLGENERAL = this.getURLGENERAL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "urlgeneral", theURLGENERAL), currentHashCode, theURLGENERAL);
        }
        {
            String theURLBUYER;
            theURLBUYER = this.getURLBUYER();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "urlbuyer", theURLBUYER), currentHashCode, theURLBUYER);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            String theADDRESS;
            theADDRESS = this.getADDRESS();
            strategy.appendField(locator, this, "address", buffer, theADDRESS);
        }
        {
            String theTOWN;
            theTOWN = this.getTOWN();
            strategy.appendField(locator, this, "town", buffer, theTOWN);
        }
        {
            String thePOSTALCODE;
            thePOSTALCODE = this.getPOSTALCODE();
            strategy.appendField(locator, this, "postalcode", buffer, thePOSTALCODE);
        }
        {
            COUNTRY theCOUNTRY;
            theCOUNTRY = this.getCOUNTRY();
            strategy.appendField(locator, this, "country", buffer, theCOUNTRY);
        }
        {
            String theCONTACTPOINT;
            theCONTACTPOINT = this.getCONTACTPOINT();
            strategy.appendField(locator, this, "contactpoint", buffer, theCONTACTPOINT);
        }
        {
            String thePHONE;
            thePHONE = this.getPHONE();
            strategy.appendField(locator, this, "phone", buffer, thePHONE);
        }
        {
            String theEMAIL;
            theEMAIL = this.getEMAIL();
            strategy.appendField(locator, this, "email", buffer, theEMAIL);
        }
        {
            String theFAX;
            theFAX = this.getFAX();
            strategy.appendField(locator, this, "fax", buffer, theFAX);
        }
        {
            NUTS theNUTS;
            theNUTS = this.getNUTS();
            strategy.appendField(locator, this, "nuts", buffer, theNUTS);
        }
        {
            String theURLGENERAL;
            theURLGENERAL = this.getURLGENERAL();
            strategy.appendField(locator, this, "urlgeneral", buffer, theURLGENERAL);
        }
        {
            String theURLBUYER;
            theURLBUYER = this.getURLBUYER();
            strategy.appendField(locator, this, "urlbuyer", buffer, theURLBUYER);
        }
        return buffer;
    }

}
