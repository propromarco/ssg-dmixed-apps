//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Section IV: PROCEDURE
 * 
 * <p>Java class for procedure_f12 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="procedure_f12">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PT_OPEN"/>
 *           &lt;sequence>
 *             &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PT_RESTRICTED"/>
 *             &lt;choice>
 *               &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NB_PARTICIPANTS"/>
 *               &lt;sequence>
 *                 &lt;element name="NB_MIN_PARTICIPANTS" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}nb"/>
 *                 &lt;element name="NB_MAX_PARTICIPANTS" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}nb" minOccurs="0"/>
 *               &lt;/sequence>
 *               &lt;element name="NB_MAX_PARTICIPANTS" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}nb"/>
 *             &lt;/choice>
 *             &lt;element name="PARTICIPANT_NAME" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}string_150" maxOccurs="100" minOccurs="0"/>
 *           &lt;/sequence>
 *         &lt;/choice>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}CRITERIA_EVALUATION"/>
 *         &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}receipt_tenders"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}DATE_DISPATCH_INVITATIONS" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}LANGUAGES"/>
 *         &lt;choice>
 *           &lt;sequence>
 *             &lt;element name="PRIZE_AWARDED" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
 *             &lt;element name="NUMBER_VALUE_PRIZE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}text_ft_multi_lines" minOccurs="0"/>
 *           &lt;/sequence>
 *           &lt;element name="NO_PRIZE_AWARDED" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
 *         &lt;/choice>
 *         &lt;element name="DETAILS_PAYMENT" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}text_ft_multi_lines" minOccurs="0"/>
 *         &lt;choice>
 *           &lt;element name="FOLLOW_UP_CONTRACTS" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
 *           &lt;element name="NO_FOLLOW_UP_CONTRACTS" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
 *         &lt;/choice>
 *         &lt;choice>
 *           &lt;element name="DECISION_BINDING_CONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
 *           &lt;element name="NO_DECISION_BINDING_CONTRACTING" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}empty"/>
 *         &lt;/choice>
 *         &lt;element name="MEMBER_NAME" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}string_100" maxOccurs="50" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "procedure_f12", propOrder = {
    "ptrestricted",
    "nbminparticipants",
    "nbmaxparticipants",
    "nbparticipants",
    "participantnames",
    "ptopen",
    "criteriaevaluation",
    "datereceipttenders",
    "timereceipttenders",
    "datedispatchinvitations",
    "languages",
    "noprizeawarded",
    "prizeawarded",
    "numbervalueprize",
    "detailspayment",
    "nofollowupcontracts",
    "followupcontracts",
    "nodecisionbindingcontracting",
    "decisionbindingcontracting",
    "membernames"
})
public class ProcedureF12
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "PT_RESTRICTED")
    protected Empty ptrestricted;
    @XmlElement(name = "NB_MIN_PARTICIPANTS")
    protected BigInteger nbminparticipants;
    @XmlElement(name = "NB_MAX_PARTICIPANTS")
    protected BigInteger nbmaxparticipants;
    @XmlElement(name = "NB_PARTICIPANTS")
    protected BigInteger nbparticipants;
    @XmlElement(name = "PARTICIPANT_NAME")
    protected List<String> participantnames;
    @XmlElement(name = "PT_OPEN")
    protected Empty ptopen;
    @XmlElement(name = "CRITERIA_EVALUATION", required = true)
    protected TextFtMultiLines criteriaevaluation;
    @XmlElement(name = "DATE_RECEIPT_TENDERS", required = true)
    protected XMLGregorianCalendar datereceipttenders;
    @XmlElement(name = "TIME_RECEIPT_TENDERS")
    protected String timereceipttenders;
    @XmlElement(name = "DATE_DISPATCH_INVITATIONS")
    protected XMLGregorianCalendar datedispatchinvitations;
    @XmlElement(name = "LANGUAGES", required = true)
    protected LANGUAGES languages;
    @XmlElement(name = "NO_PRIZE_AWARDED")
    protected Empty noprizeawarded;
    @XmlElement(name = "PRIZE_AWARDED")
    protected Empty prizeawarded;
    @XmlElement(name = "NUMBER_VALUE_PRIZE")
    protected TextFtMultiLines numbervalueprize;
    @XmlElement(name = "DETAILS_PAYMENT")
    protected TextFtMultiLines detailspayment;
    @XmlElement(name = "NO_FOLLOW_UP_CONTRACTS")
    protected Empty nofollowupcontracts;
    @XmlElement(name = "FOLLOW_UP_CONTRACTS")
    protected Empty followupcontracts;
    @XmlElement(name = "NO_DECISION_BINDING_CONTRACTING")
    protected Empty nodecisionbindingcontracting;
    @XmlElement(name = "DECISION_BINDING_CONTRACTING")
    protected Empty decisionbindingcontracting;
    @XmlElement(name = "MEMBER_NAME")
    protected List<String> membernames;

    /**
     * Gets the value of the ptrestricted property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getPTRESTRICTED() {
        return ptrestricted;
    }

    /**
     * Sets the value of the ptrestricted property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setPTRESTRICTED(Empty value) {
        this.ptrestricted = value;
    }

    /**
     * Gets the value of the nbminparticipants property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNBMINPARTICIPANTS() {
        return nbminparticipants;
    }

    /**
     * Sets the value of the nbminparticipants property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNBMINPARTICIPANTS(BigInteger value) {
        this.nbminparticipants = value;
    }

    /**
     * Gets the value of the nbmaxparticipants property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNBMAXPARTICIPANTS() {
        return nbmaxparticipants;
    }

    /**
     * Sets the value of the nbmaxparticipants property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNBMAXPARTICIPANTS(BigInteger value) {
        this.nbmaxparticipants = value;
    }

    /**
     * Gets the value of the nbparticipants property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNBPARTICIPANTS() {
        return nbparticipants;
    }

    /**
     * Sets the value of the nbparticipants property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNBPARTICIPANTS(BigInteger value) {
        this.nbparticipants = value;
    }

    /**
     * Gets the value of the participantnames property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the participantnames property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPARTICIPANTNAMES().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getPARTICIPANTNAMES() {
        if (participantnames == null) {
            participantnames = new ArrayList<String>();
        }
        return this.participantnames;
    }

    /**
     * Gets the value of the ptopen property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getPTOPEN() {
        return ptopen;
    }

    /**
     * Sets the value of the ptopen property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setPTOPEN(Empty value) {
        this.ptopen = value;
    }

    /**
     * Gets the value of the criteriaevaluation property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getCRITERIAEVALUATION() {
        return criteriaevaluation;
    }

    /**
     * Sets the value of the criteriaevaluation property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setCRITERIAEVALUATION(TextFtMultiLines value) {
        this.criteriaevaluation = value;
    }

    /**
     * Gets the value of the datereceipttenders property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDATERECEIPTTENDERS() {
        return datereceipttenders;
    }

    /**
     * Sets the value of the datereceipttenders property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDATERECEIPTTENDERS(XMLGregorianCalendar value) {
        this.datereceipttenders = value;
    }

    /**
     * Gets the value of the timereceipttenders property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTIMERECEIPTTENDERS() {
        return timereceipttenders;
    }

    /**
     * Sets the value of the timereceipttenders property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTIMERECEIPTTENDERS(String value) {
        this.timereceipttenders = value;
    }

    /**
     * Gets the value of the datedispatchinvitations property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDATEDISPATCHINVITATIONS() {
        return datedispatchinvitations;
    }

    /**
     * Sets the value of the datedispatchinvitations property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDATEDISPATCHINVITATIONS(XMLGregorianCalendar value) {
        this.datedispatchinvitations = value;
    }

    /**
     * Gets the value of the languages property.
     * 
     * @return
     *     possible object is
     *     {@link LANGUAGES }
     *     
     */
    public LANGUAGES getLANGUAGES() {
        return languages;
    }

    /**
     * Sets the value of the languages property.
     * 
     * @param value
     *     allowed object is
     *     {@link LANGUAGES }
     *     
     */
    public void setLANGUAGES(LANGUAGES value) {
        this.languages = value;
    }

    /**
     * Gets the value of the noprizeawarded property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getNOPRIZEAWARDED() {
        return noprizeawarded;
    }

    /**
     * Sets the value of the noprizeawarded property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setNOPRIZEAWARDED(Empty value) {
        this.noprizeawarded = value;
    }

    /**
     * Gets the value of the prizeawarded property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getPRIZEAWARDED() {
        return prizeawarded;
    }

    /**
     * Sets the value of the prizeawarded property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setPRIZEAWARDED(Empty value) {
        this.prizeawarded = value;
    }

    /**
     * Gets the value of the numbervalueprize property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getNUMBERVALUEPRIZE() {
        return numbervalueprize;
    }

    /**
     * Sets the value of the numbervalueprize property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setNUMBERVALUEPRIZE(TextFtMultiLines value) {
        this.numbervalueprize = value;
    }

    /**
     * Gets the value of the detailspayment property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getDETAILSPAYMENT() {
        return detailspayment;
    }

    /**
     * Sets the value of the detailspayment property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setDETAILSPAYMENT(TextFtMultiLines value) {
        this.detailspayment = value;
    }

    /**
     * Gets the value of the nofollowupcontracts property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getNOFOLLOWUPCONTRACTS() {
        return nofollowupcontracts;
    }

    /**
     * Sets the value of the nofollowupcontracts property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setNOFOLLOWUPCONTRACTS(Empty value) {
        this.nofollowupcontracts = value;
    }

    /**
     * Gets the value of the followupcontracts property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getFOLLOWUPCONTRACTS() {
        return followupcontracts;
    }

    /**
     * Sets the value of the followupcontracts property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setFOLLOWUPCONTRACTS(Empty value) {
        this.followupcontracts = value;
    }

    /**
     * Gets the value of the nodecisionbindingcontracting property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getNODECISIONBINDINGCONTRACTING() {
        return nodecisionbindingcontracting;
    }

    /**
     * Sets the value of the nodecisionbindingcontracting property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setNODECISIONBINDINGCONTRACTING(Empty value) {
        this.nodecisionbindingcontracting = value;
    }

    /**
     * Gets the value of the decisionbindingcontracting property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getDECISIONBINDINGCONTRACTING() {
        return decisionbindingcontracting;
    }

    /**
     * Sets the value of the decisionbindingcontracting property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setDECISIONBINDINGCONTRACTING(Empty value) {
        this.decisionbindingcontracting = value;
    }

    /**
     * Gets the value of the membernames property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the membernames property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMEMBERNAMES().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getMEMBERNAMES() {
        if (membernames == null) {
            membernames = new ArrayList<String>();
        }
        return this.membernames;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProcedureF12)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ProcedureF12 that = ((ProcedureF12) object);
        {
            Empty lhsPTRESTRICTED;
            lhsPTRESTRICTED = this.getPTRESTRICTED();
            Empty rhsPTRESTRICTED;
            rhsPTRESTRICTED = that.getPTRESTRICTED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ptrestricted", lhsPTRESTRICTED), LocatorUtils.property(thatLocator, "ptrestricted", rhsPTRESTRICTED), lhsPTRESTRICTED, rhsPTRESTRICTED)) {
                return false;
            }
        }
        {
            BigInteger lhsNBMINPARTICIPANTS;
            lhsNBMINPARTICIPANTS = this.getNBMINPARTICIPANTS();
            BigInteger rhsNBMINPARTICIPANTS;
            rhsNBMINPARTICIPANTS = that.getNBMINPARTICIPANTS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nbminparticipants", lhsNBMINPARTICIPANTS), LocatorUtils.property(thatLocator, "nbminparticipants", rhsNBMINPARTICIPANTS), lhsNBMINPARTICIPANTS, rhsNBMINPARTICIPANTS)) {
                return false;
            }
        }
        {
            BigInteger lhsNBMAXPARTICIPANTS;
            lhsNBMAXPARTICIPANTS = this.getNBMAXPARTICIPANTS();
            BigInteger rhsNBMAXPARTICIPANTS;
            rhsNBMAXPARTICIPANTS = that.getNBMAXPARTICIPANTS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nbmaxparticipants", lhsNBMAXPARTICIPANTS), LocatorUtils.property(thatLocator, "nbmaxparticipants", rhsNBMAXPARTICIPANTS), lhsNBMAXPARTICIPANTS, rhsNBMAXPARTICIPANTS)) {
                return false;
            }
        }
        {
            BigInteger lhsNBPARTICIPANTS;
            lhsNBPARTICIPANTS = this.getNBPARTICIPANTS();
            BigInteger rhsNBPARTICIPANTS;
            rhsNBPARTICIPANTS = that.getNBPARTICIPANTS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nbparticipants", lhsNBPARTICIPANTS), LocatorUtils.property(thatLocator, "nbparticipants", rhsNBPARTICIPANTS), lhsNBPARTICIPANTS, rhsNBPARTICIPANTS)) {
                return false;
            }
        }
        {
            List<String> lhsPARTICIPANTNAMES;
            lhsPARTICIPANTNAMES = (((this.participantnames!= null)&&(!this.participantnames.isEmpty()))?this.getPARTICIPANTNAMES():null);
            List<String> rhsPARTICIPANTNAMES;
            rhsPARTICIPANTNAMES = (((that.participantnames!= null)&&(!that.participantnames.isEmpty()))?that.getPARTICIPANTNAMES():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "participantnames", lhsPARTICIPANTNAMES), LocatorUtils.property(thatLocator, "participantnames", rhsPARTICIPANTNAMES), lhsPARTICIPANTNAMES, rhsPARTICIPANTNAMES)) {
                return false;
            }
        }
        {
            Empty lhsPTOPEN;
            lhsPTOPEN = this.getPTOPEN();
            Empty rhsPTOPEN;
            rhsPTOPEN = that.getPTOPEN();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ptopen", lhsPTOPEN), LocatorUtils.property(thatLocator, "ptopen", rhsPTOPEN), lhsPTOPEN, rhsPTOPEN)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsCRITERIAEVALUATION;
            lhsCRITERIAEVALUATION = this.getCRITERIAEVALUATION();
            TextFtMultiLines rhsCRITERIAEVALUATION;
            rhsCRITERIAEVALUATION = that.getCRITERIAEVALUATION();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "criteriaevaluation", lhsCRITERIAEVALUATION), LocatorUtils.property(thatLocator, "criteriaevaluation", rhsCRITERIAEVALUATION), lhsCRITERIAEVALUATION, rhsCRITERIAEVALUATION)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDATERECEIPTTENDERS;
            lhsDATERECEIPTTENDERS = this.getDATERECEIPTTENDERS();
            XMLGregorianCalendar rhsDATERECEIPTTENDERS;
            rhsDATERECEIPTTENDERS = that.getDATERECEIPTTENDERS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "datereceipttenders", lhsDATERECEIPTTENDERS), LocatorUtils.property(thatLocator, "datereceipttenders", rhsDATERECEIPTTENDERS), lhsDATERECEIPTTENDERS, rhsDATERECEIPTTENDERS)) {
                return false;
            }
        }
        {
            String lhsTIMERECEIPTTENDERS;
            lhsTIMERECEIPTTENDERS = this.getTIMERECEIPTTENDERS();
            String rhsTIMERECEIPTTENDERS;
            rhsTIMERECEIPTTENDERS = that.getTIMERECEIPTTENDERS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timereceipttenders", lhsTIMERECEIPTTENDERS), LocatorUtils.property(thatLocator, "timereceipttenders", rhsTIMERECEIPTTENDERS), lhsTIMERECEIPTTENDERS, rhsTIMERECEIPTTENDERS)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDATEDISPATCHINVITATIONS;
            lhsDATEDISPATCHINVITATIONS = this.getDATEDISPATCHINVITATIONS();
            XMLGregorianCalendar rhsDATEDISPATCHINVITATIONS;
            rhsDATEDISPATCHINVITATIONS = that.getDATEDISPATCHINVITATIONS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "datedispatchinvitations", lhsDATEDISPATCHINVITATIONS), LocatorUtils.property(thatLocator, "datedispatchinvitations", rhsDATEDISPATCHINVITATIONS), lhsDATEDISPATCHINVITATIONS, rhsDATEDISPATCHINVITATIONS)) {
                return false;
            }
        }
        {
            LANGUAGES lhsLANGUAGES;
            lhsLANGUAGES = this.getLANGUAGES();
            LANGUAGES rhsLANGUAGES;
            rhsLANGUAGES = that.getLANGUAGES();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "languages", lhsLANGUAGES), LocatorUtils.property(thatLocator, "languages", rhsLANGUAGES), lhsLANGUAGES, rhsLANGUAGES)) {
                return false;
            }
        }
        {
            Empty lhsNOPRIZEAWARDED;
            lhsNOPRIZEAWARDED = this.getNOPRIZEAWARDED();
            Empty rhsNOPRIZEAWARDED;
            rhsNOPRIZEAWARDED = that.getNOPRIZEAWARDED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noprizeawarded", lhsNOPRIZEAWARDED), LocatorUtils.property(thatLocator, "noprizeawarded", rhsNOPRIZEAWARDED), lhsNOPRIZEAWARDED, rhsNOPRIZEAWARDED)) {
                return false;
            }
        }
        {
            Empty lhsPRIZEAWARDED;
            lhsPRIZEAWARDED = this.getPRIZEAWARDED();
            Empty rhsPRIZEAWARDED;
            rhsPRIZEAWARDED = that.getPRIZEAWARDED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prizeawarded", lhsPRIZEAWARDED), LocatorUtils.property(thatLocator, "prizeawarded", rhsPRIZEAWARDED), lhsPRIZEAWARDED, rhsPRIZEAWARDED)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsNUMBERVALUEPRIZE;
            lhsNUMBERVALUEPRIZE = this.getNUMBERVALUEPRIZE();
            TextFtMultiLines rhsNUMBERVALUEPRIZE;
            rhsNUMBERVALUEPRIZE = that.getNUMBERVALUEPRIZE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numbervalueprize", lhsNUMBERVALUEPRIZE), LocatorUtils.property(thatLocator, "numbervalueprize", rhsNUMBERVALUEPRIZE), lhsNUMBERVALUEPRIZE, rhsNUMBERVALUEPRIZE)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsDETAILSPAYMENT;
            lhsDETAILSPAYMENT = this.getDETAILSPAYMENT();
            TextFtMultiLines rhsDETAILSPAYMENT;
            rhsDETAILSPAYMENT = that.getDETAILSPAYMENT();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "detailspayment", lhsDETAILSPAYMENT), LocatorUtils.property(thatLocator, "detailspayment", rhsDETAILSPAYMENT), lhsDETAILSPAYMENT, rhsDETAILSPAYMENT)) {
                return false;
            }
        }
        {
            Empty lhsNOFOLLOWUPCONTRACTS;
            lhsNOFOLLOWUPCONTRACTS = this.getNOFOLLOWUPCONTRACTS();
            Empty rhsNOFOLLOWUPCONTRACTS;
            rhsNOFOLLOWUPCONTRACTS = that.getNOFOLLOWUPCONTRACTS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nofollowupcontracts", lhsNOFOLLOWUPCONTRACTS), LocatorUtils.property(thatLocator, "nofollowupcontracts", rhsNOFOLLOWUPCONTRACTS), lhsNOFOLLOWUPCONTRACTS, rhsNOFOLLOWUPCONTRACTS)) {
                return false;
            }
        }
        {
            Empty lhsFOLLOWUPCONTRACTS;
            lhsFOLLOWUPCONTRACTS = this.getFOLLOWUPCONTRACTS();
            Empty rhsFOLLOWUPCONTRACTS;
            rhsFOLLOWUPCONTRACTS = that.getFOLLOWUPCONTRACTS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "followupcontracts", lhsFOLLOWUPCONTRACTS), LocatorUtils.property(thatLocator, "followupcontracts", rhsFOLLOWUPCONTRACTS), lhsFOLLOWUPCONTRACTS, rhsFOLLOWUPCONTRACTS)) {
                return false;
            }
        }
        {
            Empty lhsNODECISIONBINDINGCONTRACTING;
            lhsNODECISIONBINDINGCONTRACTING = this.getNODECISIONBINDINGCONTRACTING();
            Empty rhsNODECISIONBINDINGCONTRACTING;
            rhsNODECISIONBINDINGCONTRACTING = that.getNODECISIONBINDINGCONTRACTING();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "nodecisionbindingcontracting", lhsNODECISIONBINDINGCONTRACTING), LocatorUtils.property(thatLocator, "nodecisionbindingcontracting", rhsNODECISIONBINDINGCONTRACTING), lhsNODECISIONBINDINGCONTRACTING, rhsNODECISIONBINDINGCONTRACTING)) {
                return false;
            }
        }
        {
            Empty lhsDECISIONBINDINGCONTRACTING;
            lhsDECISIONBINDINGCONTRACTING = this.getDECISIONBINDINGCONTRACTING();
            Empty rhsDECISIONBINDINGCONTRACTING;
            rhsDECISIONBINDINGCONTRACTING = that.getDECISIONBINDINGCONTRACTING();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "decisionbindingcontracting", lhsDECISIONBINDINGCONTRACTING), LocatorUtils.property(thatLocator, "decisionbindingcontracting", rhsDECISIONBINDINGCONTRACTING), lhsDECISIONBINDINGCONTRACTING, rhsDECISIONBINDINGCONTRACTING)) {
                return false;
            }
        }
        {
            List<String> lhsMEMBERNAMES;
            lhsMEMBERNAMES = (((this.membernames!= null)&&(!this.membernames.isEmpty()))?this.getMEMBERNAMES():null);
            List<String> rhsMEMBERNAMES;
            rhsMEMBERNAMES = (((that.membernames!= null)&&(!that.membernames.isEmpty()))?that.getMEMBERNAMES():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "membernames", lhsMEMBERNAMES), LocatorUtils.property(thatLocator, "membernames", rhsMEMBERNAMES), lhsMEMBERNAMES, rhsMEMBERNAMES)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            Empty thePTRESTRICTED;
            thePTRESTRICTED = this.getPTRESTRICTED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ptrestricted", thePTRESTRICTED), currentHashCode, thePTRESTRICTED);
        }
        {
            BigInteger theNBMINPARTICIPANTS;
            theNBMINPARTICIPANTS = this.getNBMINPARTICIPANTS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nbminparticipants", theNBMINPARTICIPANTS), currentHashCode, theNBMINPARTICIPANTS);
        }
        {
            BigInteger theNBMAXPARTICIPANTS;
            theNBMAXPARTICIPANTS = this.getNBMAXPARTICIPANTS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nbmaxparticipants", theNBMAXPARTICIPANTS), currentHashCode, theNBMAXPARTICIPANTS);
        }
        {
            BigInteger theNBPARTICIPANTS;
            theNBPARTICIPANTS = this.getNBPARTICIPANTS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nbparticipants", theNBPARTICIPANTS), currentHashCode, theNBPARTICIPANTS);
        }
        {
            List<String> thePARTICIPANTNAMES;
            thePARTICIPANTNAMES = (((this.participantnames!= null)&&(!this.participantnames.isEmpty()))?this.getPARTICIPANTNAMES():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "participantnames", thePARTICIPANTNAMES), currentHashCode, thePARTICIPANTNAMES);
        }
        {
            Empty thePTOPEN;
            thePTOPEN = this.getPTOPEN();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ptopen", thePTOPEN), currentHashCode, thePTOPEN);
        }
        {
            TextFtMultiLines theCRITERIAEVALUATION;
            theCRITERIAEVALUATION = this.getCRITERIAEVALUATION();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "criteriaevaluation", theCRITERIAEVALUATION), currentHashCode, theCRITERIAEVALUATION);
        }
        {
            XMLGregorianCalendar theDATERECEIPTTENDERS;
            theDATERECEIPTTENDERS = this.getDATERECEIPTTENDERS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "datereceipttenders", theDATERECEIPTTENDERS), currentHashCode, theDATERECEIPTTENDERS);
        }
        {
            String theTIMERECEIPTTENDERS;
            theTIMERECEIPTTENDERS = this.getTIMERECEIPTTENDERS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timereceipttenders", theTIMERECEIPTTENDERS), currentHashCode, theTIMERECEIPTTENDERS);
        }
        {
            XMLGregorianCalendar theDATEDISPATCHINVITATIONS;
            theDATEDISPATCHINVITATIONS = this.getDATEDISPATCHINVITATIONS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "datedispatchinvitations", theDATEDISPATCHINVITATIONS), currentHashCode, theDATEDISPATCHINVITATIONS);
        }
        {
            LANGUAGES theLANGUAGES;
            theLANGUAGES = this.getLANGUAGES();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "languages", theLANGUAGES), currentHashCode, theLANGUAGES);
        }
        {
            Empty theNOPRIZEAWARDED;
            theNOPRIZEAWARDED = this.getNOPRIZEAWARDED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noprizeawarded", theNOPRIZEAWARDED), currentHashCode, theNOPRIZEAWARDED);
        }
        {
            Empty thePRIZEAWARDED;
            thePRIZEAWARDED = this.getPRIZEAWARDED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prizeawarded", thePRIZEAWARDED), currentHashCode, thePRIZEAWARDED);
        }
        {
            TextFtMultiLines theNUMBERVALUEPRIZE;
            theNUMBERVALUEPRIZE = this.getNUMBERVALUEPRIZE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numbervalueprize", theNUMBERVALUEPRIZE), currentHashCode, theNUMBERVALUEPRIZE);
        }
        {
            TextFtMultiLines theDETAILSPAYMENT;
            theDETAILSPAYMENT = this.getDETAILSPAYMENT();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "detailspayment", theDETAILSPAYMENT), currentHashCode, theDETAILSPAYMENT);
        }
        {
            Empty theNOFOLLOWUPCONTRACTS;
            theNOFOLLOWUPCONTRACTS = this.getNOFOLLOWUPCONTRACTS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nofollowupcontracts", theNOFOLLOWUPCONTRACTS), currentHashCode, theNOFOLLOWUPCONTRACTS);
        }
        {
            Empty theFOLLOWUPCONTRACTS;
            theFOLLOWUPCONTRACTS = this.getFOLLOWUPCONTRACTS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "followupcontracts", theFOLLOWUPCONTRACTS), currentHashCode, theFOLLOWUPCONTRACTS);
        }
        {
            Empty theNODECISIONBINDINGCONTRACTING;
            theNODECISIONBINDINGCONTRACTING = this.getNODECISIONBINDINGCONTRACTING();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nodecisionbindingcontracting", theNODECISIONBINDINGCONTRACTING), currentHashCode, theNODECISIONBINDINGCONTRACTING);
        }
        {
            Empty theDECISIONBINDINGCONTRACTING;
            theDECISIONBINDINGCONTRACTING = this.getDECISIONBINDINGCONTRACTING();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "decisionbindingcontracting", theDECISIONBINDINGCONTRACTING), currentHashCode, theDECISIONBINDINGCONTRACTING);
        }
        {
            List<String> theMEMBERNAMES;
            theMEMBERNAMES = (((this.membernames!= null)&&(!this.membernames.isEmpty()))?this.getMEMBERNAMES():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "membernames", theMEMBERNAMES), currentHashCode, theMEMBERNAMES);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            Empty thePTRESTRICTED;
            thePTRESTRICTED = this.getPTRESTRICTED();
            strategy.appendField(locator, this, "ptrestricted", buffer, thePTRESTRICTED);
        }
        {
            BigInteger theNBMINPARTICIPANTS;
            theNBMINPARTICIPANTS = this.getNBMINPARTICIPANTS();
            strategy.appendField(locator, this, "nbminparticipants", buffer, theNBMINPARTICIPANTS);
        }
        {
            BigInteger theNBMAXPARTICIPANTS;
            theNBMAXPARTICIPANTS = this.getNBMAXPARTICIPANTS();
            strategy.appendField(locator, this, "nbmaxparticipants", buffer, theNBMAXPARTICIPANTS);
        }
        {
            BigInteger theNBPARTICIPANTS;
            theNBPARTICIPANTS = this.getNBPARTICIPANTS();
            strategy.appendField(locator, this, "nbparticipants", buffer, theNBPARTICIPANTS);
        }
        {
            List<String> thePARTICIPANTNAMES;
            thePARTICIPANTNAMES = (((this.participantnames!= null)&&(!this.participantnames.isEmpty()))?this.getPARTICIPANTNAMES():null);
            strategy.appendField(locator, this, "participantnames", buffer, thePARTICIPANTNAMES);
        }
        {
            Empty thePTOPEN;
            thePTOPEN = this.getPTOPEN();
            strategy.appendField(locator, this, "ptopen", buffer, thePTOPEN);
        }
        {
            TextFtMultiLines theCRITERIAEVALUATION;
            theCRITERIAEVALUATION = this.getCRITERIAEVALUATION();
            strategy.appendField(locator, this, "criteriaevaluation", buffer, theCRITERIAEVALUATION);
        }
        {
            XMLGregorianCalendar theDATERECEIPTTENDERS;
            theDATERECEIPTTENDERS = this.getDATERECEIPTTENDERS();
            strategy.appendField(locator, this, "datereceipttenders", buffer, theDATERECEIPTTENDERS);
        }
        {
            String theTIMERECEIPTTENDERS;
            theTIMERECEIPTTENDERS = this.getTIMERECEIPTTENDERS();
            strategy.appendField(locator, this, "timereceipttenders", buffer, theTIMERECEIPTTENDERS);
        }
        {
            XMLGregorianCalendar theDATEDISPATCHINVITATIONS;
            theDATEDISPATCHINVITATIONS = this.getDATEDISPATCHINVITATIONS();
            strategy.appendField(locator, this, "datedispatchinvitations", buffer, theDATEDISPATCHINVITATIONS);
        }
        {
            LANGUAGES theLANGUAGES;
            theLANGUAGES = this.getLANGUAGES();
            strategy.appendField(locator, this, "languages", buffer, theLANGUAGES);
        }
        {
            Empty theNOPRIZEAWARDED;
            theNOPRIZEAWARDED = this.getNOPRIZEAWARDED();
            strategy.appendField(locator, this, "noprizeawarded", buffer, theNOPRIZEAWARDED);
        }
        {
            Empty thePRIZEAWARDED;
            thePRIZEAWARDED = this.getPRIZEAWARDED();
            strategy.appendField(locator, this, "prizeawarded", buffer, thePRIZEAWARDED);
        }
        {
            TextFtMultiLines theNUMBERVALUEPRIZE;
            theNUMBERVALUEPRIZE = this.getNUMBERVALUEPRIZE();
            strategy.appendField(locator, this, "numbervalueprize", buffer, theNUMBERVALUEPRIZE);
        }
        {
            TextFtMultiLines theDETAILSPAYMENT;
            theDETAILSPAYMENT = this.getDETAILSPAYMENT();
            strategy.appendField(locator, this, "detailspayment", buffer, theDETAILSPAYMENT);
        }
        {
            Empty theNOFOLLOWUPCONTRACTS;
            theNOFOLLOWUPCONTRACTS = this.getNOFOLLOWUPCONTRACTS();
            strategy.appendField(locator, this, "nofollowupcontracts", buffer, theNOFOLLOWUPCONTRACTS);
        }
        {
            Empty theFOLLOWUPCONTRACTS;
            theFOLLOWUPCONTRACTS = this.getFOLLOWUPCONTRACTS();
            strategy.appendField(locator, this, "followupcontracts", buffer, theFOLLOWUPCONTRACTS);
        }
        {
            Empty theNODECISIONBINDINGCONTRACTING;
            theNODECISIONBINDINGCONTRACTING = this.getNODECISIONBINDINGCONTRACTING();
            strategy.appendField(locator, this, "nodecisionbindingcontracting", buffer, theNODECISIONBINDINGCONTRACTING);
        }
        {
            Empty theDECISIONBINDINGCONTRACTING;
            theDECISIONBINDINGCONTRACTING = this.getDECISIONBINDINGCONTRACTING();
            strategy.appendField(locator, this, "decisionbindingcontracting", buffer, theDECISIONBINDINGCONTRACTING);
        }
        {
            List<String> theMEMBERNAMES;
            theMEMBERNAMES = (((this.membernames!= null)&&(!this.membernames.isEmpty()))?this.getMEMBERNAMES():null);
            strategy.appendField(locator, this, "membernames", buffer, theMEMBERNAMES);
        }
        return buffer;
    }

}
