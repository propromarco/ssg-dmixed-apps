//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Section V: RESULTS OF CONTEST
 * 
 * <p>Java class for results_f13 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="results_f13">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="NO_AWARDED_PRIZE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}no_award"/>
 *         &lt;element name="AWARDED_PRIZE">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="DATE_DECISION_JURY" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}date_full"/>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NB_PARTICIPANTS"/>
 *                   &lt;element name="NB_PARTICIPANTS_SME" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}_3car" minOccurs="0"/>
 *                   &lt;element name="NB_PARTICIPANTS_OTHER_EU" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}_3car" minOccurs="0"/>
 *                   &lt;element name="WINNER" maxOccurs="100">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;sequence>
 *                             &lt;element name="ADDRESS_WINNER">
 *                               &lt;complexType>
 *                                 &lt;complexContent>
 *                                   &lt;extension base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contact_contractor">
 *                                   &lt;/extension>
 *                                 &lt;/complexContent>
 *                               &lt;/complexType>
 *                             &lt;/element>
 *                             &lt;choice>
 *                               &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SME"/>
 *                               &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NO_SME"/>
 *                             &lt;/choice>
 *                           &lt;/sequence>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="VAL_PRIZE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}val" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "results_f13", propOrder = {
    "awardedprize",
    "noawardedprize"
})
public class ResultsF13
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "AWARDED_PRIZE")
    protected ResultsF13 .AWARDEDPRIZE awardedprize;
    @XmlElement(name = "NO_AWARDED_PRIZE")
    protected NOAWARDEDCONTRACT noawardedprize;

    /**
     * Gets the value of the awardedprize property.
     * 
     * @return
     *     possible object is
     *     {@link ResultsF13 .AWARDEDPRIZE }
     *     
     */
    public ResultsF13 .AWARDEDPRIZE getAWARDEDPRIZE() {
        return awardedprize;
    }

    /**
     * Sets the value of the awardedprize property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResultsF13 .AWARDEDPRIZE }
     *     
     */
    public void setAWARDEDPRIZE(ResultsF13 .AWARDEDPRIZE value) {
        this.awardedprize = value;
    }

    /**
     * Gets the value of the noawardedprize property.
     * 
     * @return
     *     possible object is
     *     {@link NOAWARDEDCONTRACT }
     *     
     */
    public NOAWARDEDCONTRACT getNOAWARDEDPRIZE() {
        return noawardedprize;
    }

    /**
     * Sets the value of the noawardedprize property.
     * 
     * @param value
     *     allowed object is
     *     {@link NOAWARDEDCONTRACT }
     *     
     */
    public void setNOAWARDEDPRIZE(NOAWARDEDCONTRACT value) {
        this.noawardedprize = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ResultsF13)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ResultsF13 that = ((ResultsF13) object);
        {
            ResultsF13 .AWARDEDPRIZE lhsAWARDEDPRIZE;
            lhsAWARDEDPRIZE = this.getAWARDEDPRIZE();
            ResultsF13 .AWARDEDPRIZE rhsAWARDEDPRIZE;
            rhsAWARDEDPRIZE = that.getAWARDEDPRIZE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "awardedprize", lhsAWARDEDPRIZE), LocatorUtils.property(thatLocator, "awardedprize", rhsAWARDEDPRIZE), lhsAWARDEDPRIZE, rhsAWARDEDPRIZE)) {
                return false;
            }
        }
        {
            NOAWARDEDCONTRACT lhsNOAWARDEDPRIZE;
            lhsNOAWARDEDPRIZE = this.getNOAWARDEDPRIZE();
            NOAWARDEDCONTRACT rhsNOAWARDEDPRIZE;
            rhsNOAWARDEDPRIZE = that.getNOAWARDEDPRIZE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noawardedprize", lhsNOAWARDEDPRIZE), LocatorUtils.property(thatLocator, "noawardedprize", rhsNOAWARDEDPRIZE), lhsNOAWARDEDPRIZE, rhsNOAWARDEDPRIZE)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            ResultsF13 .AWARDEDPRIZE theAWARDEDPRIZE;
            theAWARDEDPRIZE = this.getAWARDEDPRIZE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "awardedprize", theAWARDEDPRIZE), currentHashCode, theAWARDEDPRIZE);
        }
        {
            NOAWARDEDCONTRACT theNOAWARDEDPRIZE;
            theNOAWARDEDPRIZE = this.getNOAWARDEDPRIZE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noawardedprize", theNOAWARDEDPRIZE), currentHashCode, theNOAWARDEDPRIZE);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            ResultsF13 .AWARDEDPRIZE theAWARDEDPRIZE;
            theAWARDEDPRIZE = this.getAWARDEDPRIZE();
            strategy.appendField(locator, this, "awardedprize", buffer, theAWARDEDPRIZE);
        }
        {
            NOAWARDEDCONTRACT theNOAWARDEDPRIZE;
            theNOAWARDEDPRIZE = this.getNOAWARDEDPRIZE();
            strategy.appendField(locator, this, "noawardedprize", buffer, theNOAWARDEDPRIZE);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="DATE_DECISION_JURY" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}date_full"/>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NB_PARTICIPANTS"/>
     *         &lt;element name="NB_PARTICIPANTS_SME" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}_3car" minOccurs="0"/>
     *         &lt;element name="NB_PARTICIPANTS_OTHER_EU" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}_3car" minOccurs="0"/>
     *         &lt;element name="WINNER" maxOccurs="100">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="ADDRESS_WINNER">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;extension base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contact_contractor">
     *                         &lt;/extension>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;choice>
     *                     &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SME"/>
     *                     &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NO_SME"/>
     *                   &lt;/choice>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="VAL_PRIZE" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}val" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "datedecisionjury",
        "nbparticipants",
        "nbparticipantssme",
        "nbparticipantsothereu",
        "winners",
        "valprize"
    })
    public static class AWARDEDPRIZE
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "DATE_DECISION_JURY", required = true)
        protected XMLGregorianCalendar datedecisionjury;
        @XmlElement(name = "NB_PARTICIPANTS", required = true)
        protected BigInteger nbparticipants;
        @XmlElement(name = "NB_PARTICIPANTS_SME")
        protected BigInteger nbparticipantssme;
        @XmlElement(name = "NB_PARTICIPANTS_OTHER_EU")
        protected BigInteger nbparticipantsothereu;
        @XmlElement(name = "WINNER", required = true)
        protected List<ResultsF13 .AWARDEDPRIZE.WINNER> winners;
        @XmlElement(name = "VAL_PRIZE")
        protected Val valprize;

        /**
         * Gets the value of the datedecisionjury property.
         * 
         * @return
         *     possible object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public XMLGregorianCalendar getDATEDECISIONJURY() {
            return datedecisionjury;
        }

        /**
         * Sets the value of the datedecisionjury property.
         * 
         * @param value
         *     allowed object is
         *     {@link XMLGregorianCalendar }
         *     
         */
        public void setDATEDECISIONJURY(XMLGregorianCalendar value) {
            this.datedecisionjury = value;
        }

        /**
         * Gets the value of the nbparticipants property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getNBPARTICIPANTS() {
            return nbparticipants;
        }

        /**
         * Sets the value of the nbparticipants property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setNBPARTICIPANTS(BigInteger value) {
            this.nbparticipants = value;
        }

        /**
         * Gets the value of the nbparticipantssme property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getNBPARTICIPANTSSME() {
            return nbparticipantssme;
        }

        /**
         * Sets the value of the nbparticipantssme property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setNBPARTICIPANTSSME(BigInteger value) {
            this.nbparticipantssme = value;
        }

        /**
         * Gets the value of the nbparticipantsothereu property.
         * 
         * @return
         *     possible object is
         *     {@link BigInteger }
         *     
         */
        public BigInteger getNBPARTICIPANTSOTHEREU() {
            return nbparticipantsothereu;
        }

        /**
         * Sets the value of the nbparticipantsothereu property.
         * 
         * @param value
         *     allowed object is
         *     {@link BigInteger }
         *     
         */
        public void setNBPARTICIPANTSOTHEREU(BigInteger value) {
            this.nbparticipantsothereu = value;
        }

        /**
         * Gets the value of the winners property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the winners property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getWINNERS().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link ResultsF13 .AWARDEDPRIZE.WINNER }
         * 
         * 
         */
        public List<ResultsF13 .AWARDEDPRIZE.WINNER> getWINNERS() {
            if (winners == null) {
                winners = new ArrayList<ResultsF13 .AWARDEDPRIZE.WINNER>();
            }
            return this.winners;
        }

        /**
         * Gets the value of the valprize property.
         * 
         * @return
         *     possible object is
         *     {@link Val }
         *     
         */
        public Val getVALPRIZE() {
            return valprize;
        }

        /**
         * Sets the value of the valprize property.
         * 
         * @param value
         *     allowed object is
         *     {@link Val }
         *     
         */
        public void setVALPRIZE(Val value) {
            this.valprize = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof ResultsF13 .AWARDEDPRIZE)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ResultsF13 .AWARDEDPRIZE that = ((ResultsF13 .AWARDEDPRIZE) object);
            {
                XMLGregorianCalendar lhsDATEDECISIONJURY;
                lhsDATEDECISIONJURY = this.getDATEDECISIONJURY();
                XMLGregorianCalendar rhsDATEDECISIONJURY;
                rhsDATEDECISIONJURY = that.getDATEDECISIONJURY();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "datedecisionjury", lhsDATEDECISIONJURY), LocatorUtils.property(thatLocator, "datedecisionjury", rhsDATEDECISIONJURY), lhsDATEDECISIONJURY, rhsDATEDECISIONJURY)) {
                    return false;
                }
            }
            {
                BigInteger lhsNBPARTICIPANTS;
                lhsNBPARTICIPANTS = this.getNBPARTICIPANTS();
                BigInteger rhsNBPARTICIPANTS;
                rhsNBPARTICIPANTS = that.getNBPARTICIPANTS();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "nbparticipants", lhsNBPARTICIPANTS), LocatorUtils.property(thatLocator, "nbparticipants", rhsNBPARTICIPANTS), lhsNBPARTICIPANTS, rhsNBPARTICIPANTS)) {
                    return false;
                }
            }
            {
                BigInteger lhsNBPARTICIPANTSSME;
                lhsNBPARTICIPANTSSME = this.getNBPARTICIPANTSSME();
                BigInteger rhsNBPARTICIPANTSSME;
                rhsNBPARTICIPANTSSME = that.getNBPARTICIPANTSSME();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "nbparticipantssme", lhsNBPARTICIPANTSSME), LocatorUtils.property(thatLocator, "nbparticipantssme", rhsNBPARTICIPANTSSME), lhsNBPARTICIPANTSSME, rhsNBPARTICIPANTSSME)) {
                    return false;
                }
            }
            {
                BigInteger lhsNBPARTICIPANTSOTHEREU;
                lhsNBPARTICIPANTSOTHEREU = this.getNBPARTICIPANTSOTHEREU();
                BigInteger rhsNBPARTICIPANTSOTHEREU;
                rhsNBPARTICIPANTSOTHEREU = that.getNBPARTICIPANTSOTHEREU();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "nbparticipantsothereu", lhsNBPARTICIPANTSOTHEREU), LocatorUtils.property(thatLocator, "nbparticipantsothereu", rhsNBPARTICIPANTSOTHEREU), lhsNBPARTICIPANTSOTHEREU, rhsNBPARTICIPANTSOTHEREU)) {
                    return false;
                }
            }
            {
                List<ResultsF13 .AWARDEDPRIZE.WINNER> lhsWINNERS;
                lhsWINNERS = (((this.winners!= null)&&(!this.winners.isEmpty()))?this.getWINNERS():null);
                List<ResultsF13 .AWARDEDPRIZE.WINNER> rhsWINNERS;
                rhsWINNERS = (((that.winners!= null)&&(!that.winners.isEmpty()))?that.getWINNERS():null);
                if (!strategy.equals(LocatorUtils.property(thisLocator, "winners", lhsWINNERS), LocatorUtils.property(thatLocator, "winners", rhsWINNERS), lhsWINNERS, rhsWINNERS)) {
                    return false;
                }
            }
            {
                Val lhsVALPRIZE;
                lhsVALPRIZE = this.getVALPRIZE();
                Val rhsVALPRIZE;
                rhsVALPRIZE = that.getVALPRIZE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "valprize", lhsVALPRIZE), LocatorUtils.property(thatLocator, "valprize", rhsVALPRIZE), lhsVALPRIZE, rhsVALPRIZE)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                XMLGregorianCalendar theDATEDECISIONJURY;
                theDATEDECISIONJURY = this.getDATEDECISIONJURY();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "datedecisionjury", theDATEDECISIONJURY), currentHashCode, theDATEDECISIONJURY);
            }
            {
                BigInteger theNBPARTICIPANTS;
                theNBPARTICIPANTS = this.getNBPARTICIPANTS();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nbparticipants", theNBPARTICIPANTS), currentHashCode, theNBPARTICIPANTS);
            }
            {
                BigInteger theNBPARTICIPANTSSME;
                theNBPARTICIPANTSSME = this.getNBPARTICIPANTSSME();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nbparticipantssme", theNBPARTICIPANTSSME), currentHashCode, theNBPARTICIPANTSSME);
            }
            {
                BigInteger theNBPARTICIPANTSOTHEREU;
                theNBPARTICIPANTSOTHEREU = this.getNBPARTICIPANTSOTHEREU();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nbparticipantsothereu", theNBPARTICIPANTSOTHEREU), currentHashCode, theNBPARTICIPANTSOTHEREU);
            }
            {
                List<ResultsF13 .AWARDEDPRIZE.WINNER> theWINNERS;
                theWINNERS = (((this.winners!= null)&&(!this.winners.isEmpty()))?this.getWINNERS():null);
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "winners", theWINNERS), currentHashCode, theWINNERS);
            }
            {
                Val theVALPRIZE;
                theVALPRIZE = this.getVALPRIZE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valprize", theVALPRIZE), currentHashCode, theVALPRIZE);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                XMLGregorianCalendar theDATEDECISIONJURY;
                theDATEDECISIONJURY = this.getDATEDECISIONJURY();
                strategy.appendField(locator, this, "datedecisionjury", buffer, theDATEDECISIONJURY);
            }
            {
                BigInteger theNBPARTICIPANTS;
                theNBPARTICIPANTS = this.getNBPARTICIPANTS();
                strategy.appendField(locator, this, "nbparticipants", buffer, theNBPARTICIPANTS);
            }
            {
                BigInteger theNBPARTICIPANTSSME;
                theNBPARTICIPANTSSME = this.getNBPARTICIPANTSSME();
                strategy.appendField(locator, this, "nbparticipantssme", buffer, theNBPARTICIPANTSSME);
            }
            {
                BigInteger theNBPARTICIPANTSOTHEREU;
                theNBPARTICIPANTSOTHEREU = this.getNBPARTICIPANTSOTHEREU();
                strategy.appendField(locator, this, "nbparticipantsothereu", buffer, theNBPARTICIPANTSOTHEREU);
            }
            {
                List<ResultsF13 .AWARDEDPRIZE.WINNER> theWINNERS;
                theWINNERS = (((this.winners!= null)&&(!this.winners.isEmpty()))?this.getWINNERS():null);
                strategy.appendField(locator, this, "winners", buffer, theWINNERS);
            }
            {
                Val theVALPRIZE;
                theVALPRIZE = this.getVALPRIZE();
                strategy.appendField(locator, this, "valprize", buffer, theVALPRIZE);
            }
            return buffer;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="ADDRESS_WINNER">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;extension base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contact_contractor">
         *               &lt;/extension>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;choice>
         *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}SME"/>
         *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NO_SME"/>
         *         &lt;/choice>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "addresswinner",
            "nosme",
            "sme"
        })
        public static class WINNER
            implements Equals, HashCode, ToString
        {

            @XmlElement(name = "ADDRESS_WINNER", required = true)
            protected ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER addresswinner;
            @XmlElement(name = "NO_SME")
            protected Empty nosme;
            @XmlElement(name = "SME")
            protected Empty sme;

            /**
             * Gets the value of the addresswinner property.
             * 
             * @return
             *     possible object is
             *     {@link ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER }
             *     
             */
            public ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER getADDRESSWINNER() {
                return addresswinner;
            }

            /**
             * Sets the value of the addresswinner property.
             * 
             * @param value
             *     allowed object is
             *     {@link ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER }
             *     
             */
            public void setADDRESSWINNER(ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER value) {
                this.addresswinner = value;
            }

            /**
             * Gets the value of the nosme property.
             * 
             * @return
             *     possible object is
             *     {@link Empty }
             *     
             */
            public Empty getNOSME() {
                return nosme;
            }

            /**
             * Sets the value of the nosme property.
             * 
             * @param value
             *     allowed object is
             *     {@link Empty }
             *     
             */
            public void setNOSME(Empty value) {
                this.nosme = value;
            }

            /**
             * Gets the value of the sme property.
             * 
             * @return
             *     possible object is
             *     {@link Empty }
             *     
             */
            public Empty getSME() {
                return sme;
            }

            /**
             * Sets the value of the sme property.
             * 
             * @param value
             *     allowed object is
             *     {@link Empty }
             *     
             */
            public void setSME(Empty value) {
                this.sme = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof ResultsF13 .AWARDEDPRIZE.WINNER)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final ResultsF13 .AWARDEDPRIZE.WINNER that = ((ResultsF13 .AWARDEDPRIZE.WINNER) object);
                {
                    ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER lhsADDRESSWINNER;
                    lhsADDRESSWINNER = this.getADDRESSWINNER();
                    ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER rhsADDRESSWINNER;
                    rhsADDRESSWINNER = that.getADDRESSWINNER();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "addresswinner", lhsADDRESSWINNER), LocatorUtils.property(thatLocator, "addresswinner", rhsADDRESSWINNER), lhsADDRESSWINNER, rhsADDRESSWINNER)) {
                        return false;
                    }
                }
                {
                    Empty lhsNOSME;
                    lhsNOSME = this.getNOSME();
                    Empty rhsNOSME;
                    rhsNOSME = that.getNOSME();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "nosme", lhsNOSME), LocatorUtils.property(thatLocator, "nosme", rhsNOSME), lhsNOSME, rhsNOSME)) {
                        return false;
                    }
                }
                {
                    Empty lhsSME;
                    lhsSME = this.getSME();
                    Empty rhsSME;
                    rhsSME = that.getSME();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "sme", lhsSME), LocatorUtils.property(thatLocator, "sme", rhsSME), lhsSME, rhsSME)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER theADDRESSWINNER;
                    theADDRESSWINNER = this.getADDRESSWINNER();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "addresswinner", theADDRESSWINNER), currentHashCode, theADDRESSWINNER);
                }
                {
                    Empty theNOSME;
                    theNOSME = this.getNOSME();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nosme", theNOSME), currentHashCode, theNOSME);
                }
                {
                    Empty theSME;
                    theSME = this.getSME();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sme", theSME), currentHashCode, theSME);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER theADDRESSWINNER;
                    theADDRESSWINNER = this.getADDRESSWINNER();
                    strategy.appendField(locator, this, "addresswinner", buffer, theADDRESSWINNER);
                }
                {
                    Empty theNOSME;
                    theNOSME = this.getNOSME();
                    strategy.appendField(locator, this, "nosme", buffer, theNOSME);
                }
                {
                    Empty theSME;
                    theSME = this.getSME();
                    strategy.appendField(locator, this, "sme", buffer, theSME);
                }
                return buffer;
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;extension base="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}contact_contractor">
             *     &lt;/extension>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class ADDRESSWINNER
                extends ContactContractor
                implements Equals, HashCode, ToString
            {


                public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                    if (!(object instanceof ResultsF13 .AWARDEDPRIZE.WINNER.ADDRESSWINNER)) {
                        return false;
                    }
                    if (this == object) {
                        return true;
                    }
                    if (!super.equals(thisLocator, thatLocator, object, strategy)) {
                        return false;
                    }
                    return true;
                }

                public boolean equals(Object object) {
                    final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                    return equals(null, null, object, strategy);
                }

                public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                    int currentHashCode = super.hashCode(locator, strategy);
                    return currentHashCode;
                }

                public int hashCode() {
                    final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                    return this.hashCode(null, strategy);
                }

                public String toString() {
                    final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                    final StringBuilder buffer = new StringBuilder();
                    append(null, buffer, strategy);
                    return buffer.toString();
                }

                public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                    strategy.appendStart(locator, this, buffer);
                    appendFields(locator, buffer, strategy);
                    strategy.appendEnd(locator, this, buffer);
                    return buffer;
                }

                public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                    super.appendFields(locator, buffer, strategy);
                    return buffer;
                }

            }

        }

    }

}
