//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Section IV: PROCEDURE
 * 
 * <p>Java class for procedure_f21 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="procedure_f21">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice minOccurs="0">
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PT_OPEN"/>
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PT_RESTRICTED"/>
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}PT_INVOLVING_NEGOTIATION"/>
 *           &lt;element name="PT_AWARD_CONTRACT_WITHOUT_CALL" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}annex_d1_f21"/>
 *         &lt;/choice>
 *         &lt;element name="FRAMEWORK" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}JUSTIFICATION" minOccurs="0"/>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}URL_NATIONAL_PROCEDURE" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}MAIN_FEATURES_AWARD" minOccurs="0"/>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}NOTICE_NUMBER_OJ" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;sequence>
 *             &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}receipt_tenders"/>
 *             &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}LANGUAGES"/>
 *             &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}DATE_AWARD_SCHEDULED" minOccurs="0"/>
 *           &lt;/sequence>
 *           &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}TERMINATION_PIN"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "procedure_f21", propOrder = {
    "ptawardcontractwithoutcall",
    "ptinvolvingnegotiation",
    "ptrestricted",
    "ptopen",
    "framework",
    "urlnationalprocedure",
    "mainfeaturesaward",
    "noticenumberoj",
    "terminationpin",
    "datereceipttenders",
    "timereceipttenders",
    "languages",
    "dateawardscheduled"
})
public class ProcedureF21
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "PT_AWARD_CONTRACT_WITHOUT_CALL")
    protected AnnexD1F21 ptawardcontractwithoutcall;
    @XmlElement(name = "PT_INVOLVING_NEGOTIATION")
    protected Empty ptinvolvingnegotiation;
    @XmlElement(name = "PT_RESTRICTED")
    protected Empty ptrestricted;
    @XmlElement(name = "PT_OPEN")
    protected Empty ptopen;
    @XmlElement(name = "FRAMEWORK")
    protected ProcedureF21 .FRAMEWORK framework;
    @XmlElement(name = "URL_NATIONAL_PROCEDURE")
    protected String urlnationalprocedure;
    @XmlElement(name = "MAIN_FEATURES_AWARD")
    protected TextFtMultiLines mainfeaturesaward;
    @XmlElement(name = "NOTICE_NUMBER_OJ")
    protected String noticenumberoj;
    @XmlElement(name = "TERMINATION_PIN")
    protected Empty terminationpin;
    @XmlElement(name = "DATE_RECEIPT_TENDERS")
    protected XMLGregorianCalendar datereceipttenders;
    @XmlElement(name = "TIME_RECEIPT_TENDERS")
    protected String timereceipttenders;
    @XmlElement(name = "LANGUAGES")
    protected LANGUAGES languages;
    @XmlElement(name = "DATE_AWARD_SCHEDULED")
    protected XMLGregorianCalendar dateawardscheduled;

    /**
     * Gets the value of the ptawardcontractwithoutcall property.
     * 
     * @return
     *     possible object is
     *     {@link AnnexD1F21 }
     *     
     */
    public AnnexD1F21 getPTAWARDCONTRACTWITHOUTCALL() {
        return ptawardcontractwithoutcall;
    }

    /**
     * Sets the value of the ptawardcontractwithoutcall property.
     * 
     * @param value
     *     allowed object is
     *     {@link AnnexD1F21 }
     *     
     */
    public void setPTAWARDCONTRACTWITHOUTCALL(AnnexD1F21 value) {
        this.ptawardcontractwithoutcall = value;
    }

    /**
     * Gets the value of the ptinvolvingnegotiation property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getPTINVOLVINGNEGOTIATION() {
        return ptinvolvingnegotiation;
    }

    /**
     * Sets the value of the ptinvolvingnegotiation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setPTINVOLVINGNEGOTIATION(Empty value) {
        this.ptinvolvingnegotiation = value;
    }

    /**
     * Gets the value of the ptrestricted property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getPTRESTRICTED() {
        return ptrestricted;
    }

    /**
     * Sets the value of the ptrestricted property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setPTRESTRICTED(Empty value) {
        this.ptrestricted = value;
    }

    /**
     * Gets the value of the ptopen property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getPTOPEN() {
        return ptopen;
    }

    /**
     * Sets the value of the ptopen property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setPTOPEN(Empty value) {
        this.ptopen = value;
    }

    /**
     * Gets the value of the framework property.
     * 
     * @return
     *     possible object is
     *     {@link ProcedureF21 .FRAMEWORK }
     *     
     */
    public ProcedureF21 .FRAMEWORK getFRAMEWORK() {
        return framework;
    }

    /**
     * Sets the value of the framework property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProcedureF21 .FRAMEWORK }
     *     
     */
    public void setFRAMEWORK(ProcedureF21 .FRAMEWORK value) {
        this.framework = value;
    }

    /**
     * Gets the value of the urlnationalprocedure property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getURLNATIONALPROCEDURE() {
        return urlnationalprocedure;
    }

    /**
     * Sets the value of the urlnationalprocedure property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setURLNATIONALPROCEDURE(String value) {
        this.urlnationalprocedure = value;
    }

    /**
     * Gets the value of the mainfeaturesaward property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getMAINFEATURESAWARD() {
        return mainfeaturesaward;
    }

    /**
     * Sets the value of the mainfeaturesaward property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setMAINFEATURESAWARD(TextFtMultiLines value) {
        this.mainfeaturesaward = value;
    }

    /**
     * Gets the value of the noticenumberoj property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNOTICENUMBEROJ() {
        return noticenumberoj;
    }

    /**
     * Sets the value of the noticenumberoj property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNOTICENUMBEROJ(String value) {
        this.noticenumberoj = value;
    }

    /**
     * Gets the value of the terminationpin property.
     * 
     * @return
     *     possible object is
     *     {@link Empty }
     *     
     */
    public Empty getTERMINATIONPIN() {
        return terminationpin;
    }

    /**
     * Sets the value of the terminationpin property.
     * 
     * @param value
     *     allowed object is
     *     {@link Empty }
     *     
     */
    public void setTERMINATIONPIN(Empty value) {
        this.terminationpin = value;
    }

    /**
     * Gets the value of the datereceipttenders property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDATERECEIPTTENDERS() {
        return datereceipttenders;
    }

    /**
     * Sets the value of the datereceipttenders property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDATERECEIPTTENDERS(XMLGregorianCalendar value) {
        this.datereceipttenders = value;
    }

    /**
     * Gets the value of the timereceipttenders property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTIMERECEIPTTENDERS() {
        return timereceipttenders;
    }

    /**
     * Sets the value of the timereceipttenders property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTIMERECEIPTTENDERS(String value) {
        this.timereceipttenders = value;
    }

    /**
     * Gets the value of the languages property.
     * 
     * @return
     *     possible object is
     *     {@link LANGUAGES }
     *     
     */
    public LANGUAGES getLANGUAGES() {
        return languages;
    }

    /**
     * Sets the value of the languages property.
     * 
     * @param value
     *     allowed object is
     *     {@link LANGUAGES }
     *     
     */
    public void setLANGUAGES(LANGUAGES value) {
        this.languages = value;
    }

    /**
     * Gets the value of the dateawardscheduled property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getDATEAWARDSCHEDULED() {
        return dateawardscheduled;
    }

    /**
     * Sets the value of the dateawardscheduled property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setDATEAWARDSCHEDULED(XMLGregorianCalendar value) {
        this.dateawardscheduled = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProcedureF21)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ProcedureF21 that = ((ProcedureF21) object);
        {
            AnnexD1F21 lhsPTAWARDCONTRACTWITHOUTCALL;
            lhsPTAWARDCONTRACTWITHOUTCALL = this.getPTAWARDCONTRACTWITHOUTCALL();
            AnnexD1F21 rhsPTAWARDCONTRACTWITHOUTCALL;
            rhsPTAWARDCONTRACTWITHOUTCALL = that.getPTAWARDCONTRACTWITHOUTCALL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ptawardcontractwithoutcall", lhsPTAWARDCONTRACTWITHOUTCALL), LocatorUtils.property(thatLocator, "ptawardcontractwithoutcall", rhsPTAWARDCONTRACTWITHOUTCALL), lhsPTAWARDCONTRACTWITHOUTCALL, rhsPTAWARDCONTRACTWITHOUTCALL)) {
                return false;
            }
        }
        {
            Empty lhsPTINVOLVINGNEGOTIATION;
            lhsPTINVOLVINGNEGOTIATION = this.getPTINVOLVINGNEGOTIATION();
            Empty rhsPTINVOLVINGNEGOTIATION;
            rhsPTINVOLVINGNEGOTIATION = that.getPTINVOLVINGNEGOTIATION();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ptinvolvingnegotiation", lhsPTINVOLVINGNEGOTIATION), LocatorUtils.property(thatLocator, "ptinvolvingnegotiation", rhsPTINVOLVINGNEGOTIATION), lhsPTINVOLVINGNEGOTIATION, rhsPTINVOLVINGNEGOTIATION)) {
                return false;
            }
        }
        {
            Empty lhsPTRESTRICTED;
            lhsPTRESTRICTED = this.getPTRESTRICTED();
            Empty rhsPTRESTRICTED;
            rhsPTRESTRICTED = that.getPTRESTRICTED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ptrestricted", lhsPTRESTRICTED), LocatorUtils.property(thatLocator, "ptrestricted", rhsPTRESTRICTED), lhsPTRESTRICTED, rhsPTRESTRICTED)) {
                return false;
            }
        }
        {
            Empty lhsPTOPEN;
            lhsPTOPEN = this.getPTOPEN();
            Empty rhsPTOPEN;
            rhsPTOPEN = that.getPTOPEN();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ptopen", lhsPTOPEN), LocatorUtils.property(thatLocator, "ptopen", rhsPTOPEN), lhsPTOPEN, rhsPTOPEN)) {
                return false;
            }
        }
        {
            ProcedureF21 .FRAMEWORK lhsFRAMEWORK;
            lhsFRAMEWORK = this.getFRAMEWORK();
            ProcedureF21 .FRAMEWORK rhsFRAMEWORK;
            rhsFRAMEWORK = that.getFRAMEWORK();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "framework", lhsFRAMEWORK), LocatorUtils.property(thatLocator, "framework", rhsFRAMEWORK), lhsFRAMEWORK, rhsFRAMEWORK)) {
                return false;
            }
        }
        {
            String lhsURLNATIONALPROCEDURE;
            lhsURLNATIONALPROCEDURE = this.getURLNATIONALPROCEDURE();
            String rhsURLNATIONALPROCEDURE;
            rhsURLNATIONALPROCEDURE = that.getURLNATIONALPROCEDURE();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "urlnationalprocedure", lhsURLNATIONALPROCEDURE), LocatorUtils.property(thatLocator, "urlnationalprocedure", rhsURLNATIONALPROCEDURE), lhsURLNATIONALPROCEDURE, rhsURLNATIONALPROCEDURE)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsMAINFEATURESAWARD;
            lhsMAINFEATURESAWARD = this.getMAINFEATURESAWARD();
            TextFtMultiLines rhsMAINFEATURESAWARD;
            rhsMAINFEATURESAWARD = that.getMAINFEATURESAWARD();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "mainfeaturesaward", lhsMAINFEATURESAWARD), LocatorUtils.property(thatLocator, "mainfeaturesaward", rhsMAINFEATURESAWARD), lhsMAINFEATURESAWARD, rhsMAINFEATURESAWARD)) {
                return false;
            }
        }
        {
            String lhsNOTICENUMBEROJ;
            lhsNOTICENUMBEROJ = this.getNOTICENUMBEROJ();
            String rhsNOTICENUMBEROJ;
            rhsNOTICENUMBEROJ = that.getNOTICENUMBEROJ();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "noticenumberoj", lhsNOTICENUMBEROJ), LocatorUtils.property(thatLocator, "noticenumberoj", rhsNOTICENUMBEROJ), lhsNOTICENUMBEROJ, rhsNOTICENUMBEROJ)) {
                return false;
            }
        }
        {
            Empty lhsTERMINATIONPIN;
            lhsTERMINATIONPIN = this.getTERMINATIONPIN();
            Empty rhsTERMINATIONPIN;
            rhsTERMINATIONPIN = that.getTERMINATIONPIN();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "terminationpin", lhsTERMINATIONPIN), LocatorUtils.property(thatLocator, "terminationpin", rhsTERMINATIONPIN), lhsTERMINATIONPIN, rhsTERMINATIONPIN)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDATERECEIPTTENDERS;
            lhsDATERECEIPTTENDERS = this.getDATERECEIPTTENDERS();
            XMLGregorianCalendar rhsDATERECEIPTTENDERS;
            rhsDATERECEIPTTENDERS = that.getDATERECEIPTTENDERS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "datereceipttenders", lhsDATERECEIPTTENDERS), LocatorUtils.property(thatLocator, "datereceipttenders", rhsDATERECEIPTTENDERS), lhsDATERECEIPTTENDERS, rhsDATERECEIPTTENDERS)) {
                return false;
            }
        }
        {
            String lhsTIMERECEIPTTENDERS;
            lhsTIMERECEIPTTENDERS = this.getTIMERECEIPTTENDERS();
            String rhsTIMERECEIPTTENDERS;
            rhsTIMERECEIPTTENDERS = that.getTIMERECEIPTTENDERS();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timereceipttenders", lhsTIMERECEIPTTENDERS), LocatorUtils.property(thatLocator, "timereceipttenders", rhsTIMERECEIPTTENDERS), lhsTIMERECEIPTTENDERS, rhsTIMERECEIPTTENDERS)) {
                return false;
            }
        }
        {
            LANGUAGES lhsLANGUAGES;
            lhsLANGUAGES = this.getLANGUAGES();
            LANGUAGES rhsLANGUAGES;
            rhsLANGUAGES = that.getLANGUAGES();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "languages", lhsLANGUAGES), LocatorUtils.property(thatLocator, "languages", rhsLANGUAGES), lhsLANGUAGES, rhsLANGUAGES)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsDATEAWARDSCHEDULED;
            lhsDATEAWARDSCHEDULED = this.getDATEAWARDSCHEDULED();
            XMLGregorianCalendar rhsDATEAWARDSCHEDULED;
            rhsDATEAWARDSCHEDULED = that.getDATEAWARDSCHEDULED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dateawardscheduled", lhsDATEAWARDSCHEDULED), LocatorUtils.property(thatLocator, "dateawardscheduled", rhsDATEAWARDSCHEDULED), lhsDATEAWARDSCHEDULED, rhsDATEAWARDSCHEDULED)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            AnnexD1F21 thePTAWARDCONTRACTWITHOUTCALL;
            thePTAWARDCONTRACTWITHOUTCALL = this.getPTAWARDCONTRACTWITHOUTCALL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ptawardcontractwithoutcall", thePTAWARDCONTRACTWITHOUTCALL), currentHashCode, thePTAWARDCONTRACTWITHOUTCALL);
        }
        {
            Empty thePTINVOLVINGNEGOTIATION;
            thePTINVOLVINGNEGOTIATION = this.getPTINVOLVINGNEGOTIATION();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ptinvolvingnegotiation", thePTINVOLVINGNEGOTIATION), currentHashCode, thePTINVOLVINGNEGOTIATION);
        }
        {
            Empty thePTRESTRICTED;
            thePTRESTRICTED = this.getPTRESTRICTED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ptrestricted", thePTRESTRICTED), currentHashCode, thePTRESTRICTED);
        }
        {
            Empty thePTOPEN;
            thePTOPEN = this.getPTOPEN();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ptopen", thePTOPEN), currentHashCode, thePTOPEN);
        }
        {
            ProcedureF21 .FRAMEWORK theFRAMEWORK;
            theFRAMEWORK = this.getFRAMEWORK();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "framework", theFRAMEWORK), currentHashCode, theFRAMEWORK);
        }
        {
            String theURLNATIONALPROCEDURE;
            theURLNATIONALPROCEDURE = this.getURLNATIONALPROCEDURE();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "urlnationalprocedure", theURLNATIONALPROCEDURE), currentHashCode, theURLNATIONALPROCEDURE);
        }
        {
            TextFtMultiLines theMAINFEATURESAWARD;
            theMAINFEATURESAWARD = this.getMAINFEATURESAWARD();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "mainfeaturesaward", theMAINFEATURESAWARD), currentHashCode, theMAINFEATURESAWARD);
        }
        {
            String theNOTICENUMBEROJ;
            theNOTICENUMBEROJ = this.getNOTICENUMBEROJ();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "noticenumberoj", theNOTICENUMBEROJ), currentHashCode, theNOTICENUMBEROJ);
        }
        {
            Empty theTERMINATIONPIN;
            theTERMINATIONPIN = this.getTERMINATIONPIN();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "terminationpin", theTERMINATIONPIN), currentHashCode, theTERMINATIONPIN);
        }
        {
            XMLGregorianCalendar theDATERECEIPTTENDERS;
            theDATERECEIPTTENDERS = this.getDATERECEIPTTENDERS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "datereceipttenders", theDATERECEIPTTENDERS), currentHashCode, theDATERECEIPTTENDERS);
        }
        {
            String theTIMERECEIPTTENDERS;
            theTIMERECEIPTTENDERS = this.getTIMERECEIPTTENDERS();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timereceipttenders", theTIMERECEIPTTENDERS), currentHashCode, theTIMERECEIPTTENDERS);
        }
        {
            LANGUAGES theLANGUAGES;
            theLANGUAGES = this.getLANGUAGES();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "languages", theLANGUAGES), currentHashCode, theLANGUAGES);
        }
        {
            XMLGregorianCalendar theDATEAWARDSCHEDULED;
            theDATEAWARDSCHEDULED = this.getDATEAWARDSCHEDULED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dateawardscheduled", theDATEAWARDSCHEDULED), currentHashCode, theDATEAWARDSCHEDULED);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            AnnexD1F21 thePTAWARDCONTRACTWITHOUTCALL;
            thePTAWARDCONTRACTWITHOUTCALL = this.getPTAWARDCONTRACTWITHOUTCALL();
            strategy.appendField(locator, this, "ptawardcontractwithoutcall", buffer, thePTAWARDCONTRACTWITHOUTCALL);
        }
        {
            Empty thePTINVOLVINGNEGOTIATION;
            thePTINVOLVINGNEGOTIATION = this.getPTINVOLVINGNEGOTIATION();
            strategy.appendField(locator, this, "ptinvolvingnegotiation", buffer, thePTINVOLVINGNEGOTIATION);
        }
        {
            Empty thePTRESTRICTED;
            thePTRESTRICTED = this.getPTRESTRICTED();
            strategy.appendField(locator, this, "ptrestricted", buffer, thePTRESTRICTED);
        }
        {
            Empty thePTOPEN;
            thePTOPEN = this.getPTOPEN();
            strategy.appendField(locator, this, "ptopen", buffer, thePTOPEN);
        }
        {
            ProcedureF21 .FRAMEWORK theFRAMEWORK;
            theFRAMEWORK = this.getFRAMEWORK();
            strategy.appendField(locator, this, "framework", buffer, theFRAMEWORK);
        }
        {
            String theURLNATIONALPROCEDURE;
            theURLNATIONALPROCEDURE = this.getURLNATIONALPROCEDURE();
            strategy.appendField(locator, this, "urlnationalprocedure", buffer, theURLNATIONALPROCEDURE);
        }
        {
            TextFtMultiLines theMAINFEATURESAWARD;
            theMAINFEATURESAWARD = this.getMAINFEATURESAWARD();
            strategy.appendField(locator, this, "mainfeaturesaward", buffer, theMAINFEATURESAWARD);
        }
        {
            String theNOTICENUMBEROJ;
            theNOTICENUMBEROJ = this.getNOTICENUMBEROJ();
            strategy.appendField(locator, this, "noticenumberoj", buffer, theNOTICENUMBEROJ);
        }
        {
            Empty theTERMINATIONPIN;
            theTERMINATIONPIN = this.getTERMINATIONPIN();
            strategy.appendField(locator, this, "terminationpin", buffer, theTERMINATIONPIN);
        }
        {
            XMLGregorianCalendar theDATERECEIPTTENDERS;
            theDATERECEIPTTENDERS = this.getDATERECEIPTTENDERS();
            strategy.appendField(locator, this, "datereceipttenders", buffer, theDATERECEIPTTENDERS);
        }
        {
            String theTIMERECEIPTTENDERS;
            theTIMERECEIPTTENDERS = this.getTIMERECEIPTTENDERS();
            strategy.appendField(locator, this, "timereceipttenders", buffer, theTIMERECEIPTTENDERS);
        }
        {
            LANGUAGES theLANGUAGES;
            theLANGUAGES = this.getLANGUAGES();
            strategy.appendField(locator, this, "languages", buffer, theLANGUAGES);
        }
        {
            XMLGregorianCalendar theDATEAWARDSCHEDULED;
            theDATEAWARDSCHEDULED = this.getDATEAWARDSCHEDULED();
            strategy.appendField(locator, this, "dateawardscheduled", buffer, theDATEAWARDSCHEDULED);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}JUSTIFICATION" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "justification"
    })
    public static class FRAMEWORK
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "JUSTIFICATION")
        protected String justification;

        /**
         * for any duration exceeding 4 years
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getJUSTIFICATION() {
            return justification;
        }

        /**
         * Sets the value of the justification property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setJUSTIFICATION(String value) {
            this.justification = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof ProcedureF21 .FRAMEWORK)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ProcedureF21 .FRAMEWORK that = ((ProcedureF21 .FRAMEWORK) object);
            {
                String lhsJUSTIFICATION;
                lhsJUSTIFICATION = this.getJUSTIFICATION();
                String rhsJUSTIFICATION;
                rhsJUSTIFICATION = that.getJUSTIFICATION();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "justification", lhsJUSTIFICATION), LocatorUtils.property(thatLocator, "justification", rhsJUSTIFICATION), lhsJUSTIFICATION, rhsJUSTIFICATION)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                String theJUSTIFICATION;
                theJUSTIFICATION = this.getJUSTIFICATION();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "justification", theJUSTIFICATION), currentHashCode, theJUSTIFICATION);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                String theJUSTIFICATION;
                theJUSTIFICATION = this.getJUSTIFICATION();
                strategy.appendField(locator, this, "justification", buffer, theJUSTIFICATION);
            }
            return buffer;
        }

    }

}
