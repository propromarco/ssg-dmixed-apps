//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.04 at 01:40:50 PM MEZ 
//


package eu.europa.publications.formex.ted.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Section VII: CHANGES
 * 
 * <p>Java class for changes_f14 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="changes_f14">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element name="MODIFICATION_ORIGINAL" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}non_published"/>
 *           &lt;element name="PUBLICATION_TED" type="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}non_published"/>
 *         &lt;/choice>
 *         &lt;element name="CHANGE" maxOccurs="120">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}WHERE"/>
 *                   &lt;element name="OLD_VALUE">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}data"/>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                   &lt;element name="NEW_VALUE">
 *                     &lt;complexType>
 *                       &lt;complexContent>
 *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                           &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}data"/>
 *                         &lt;/restriction>
 *                       &lt;/complexContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}INFO_ADD" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "changes_f14", propOrder = {
    "publicationted",
    "modificationoriginal",
    "changes",
    "infoadd"
})
public class ChangesF14
    implements Equals, HashCode, ToString
{

    @XmlElement(name = "PUBLICATION_TED")
    protected NonPublished publicationted;
    @XmlElement(name = "MODIFICATION_ORIGINAL")
    protected NonPublished modificationoriginal;
    @XmlElement(name = "CHANGE", required = true)
    protected List<ChangesF14 .CHANGE> changes;
    @XmlElement(name = "INFO_ADD")
    protected TextFtMultiLines infoadd;

    /**
     * Gets the value of the publicationted property.
     * 
     * @return
     *     possible object is
     *     {@link NonPublished }
     *     
     */
    public NonPublished getPUBLICATIONTED() {
        return publicationted;
    }

    /**
     * Sets the value of the publicationted property.
     * 
     * @param value
     *     allowed object is
     *     {@link NonPublished }
     *     
     */
    public void setPUBLICATIONTED(NonPublished value) {
        this.publicationted = value;
    }

    /**
     * Gets the value of the modificationoriginal property.
     * 
     * @return
     *     possible object is
     *     {@link NonPublished }
     *     
     */
    public NonPublished getMODIFICATIONORIGINAL() {
        return modificationoriginal;
    }

    /**
     * Sets the value of the modificationoriginal property.
     * 
     * @param value
     *     allowed object is
     *     {@link NonPublished }
     *     
     */
    public void setMODIFICATIONORIGINAL(NonPublished value) {
        this.modificationoriginal = value;
    }

    /**
     * Gets the value of the changes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the changes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCHANGES().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ChangesF14 .CHANGE }
     * 
     * 
     */
    public List<ChangesF14 .CHANGE> getCHANGES() {
        if (changes == null) {
            changes = new ArrayList<ChangesF14 .CHANGE>();
        }
        return this.changes;
    }

    /**
     * Gets the value of the infoadd property.
     * 
     * @return
     *     possible object is
     *     {@link TextFtMultiLines }
     *     
     */
    public TextFtMultiLines getINFOADD() {
        return infoadd;
    }

    /**
     * Sets the value of the infoadd property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextFtMultiLines }
     *     
     */
    public void setINFOADD(TextFtMultiLines value) {
        this.infoadd = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ChangesF14)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ChangesF14 that = ((ChangesF14) object);
        {
            NonPublished lhsPUBLICATIONTED;
            lhsPUBLICATIONTED = this.getPUBLICATIONTED();
            NonPublished rhsPUBLICATIONTED;
            rhsPUBLICATIONTED = that.getPUBLICATIONTED();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publicationted", lhsPUBLICATIONTED), LocatorUtils.property(thatLocator, "publicationted", rhsPUBLICATIONTED), lhsPUBLICATIONTED, rhsPUBLICATIONTED)) {
                return false;
            }
        }
        {
            NonPublished lhsMODIFICATIONORIGINAL;
            lhsMODIFICATIONORIGINAL = this.getMODIFICATIONORIGINAL();
            NonPublished rhsMODIFICATIONORIGINAL;
            rhsMODIFICATIONORIGINAL = that.getMODIFICATIONORIGINAL();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modificationoriginal", lhsMODIFICATIONORIGINAL), LocatorUtils.property(thatLocator, "modificationoriginal", rhsMODIFICATIONORIGINAL), lhsMODIFICATIONORIGINAL, rhsMODIFICATIONORIGINAL)) {
                return false;
            }
        }
        {
            List<ChangesF14 .CHANGE> lhsCHANGES;
            lhsCHANGES = (((this.changes!= null)&&(!this.changes.isEmpty()))?this.getCHANGES():null);
            List<ChangesF14 .CHANGE> rhsCHANGES;
            rhsCHANGES = (((that.changes!= null)&&(!that.changes.isEmpty()))?that.getCHANGES():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "changes", lhsCHANGES), LocatorUtils.property(thatLocator, "changes", rhsCHANGES), lhsCHANGES, rhsCHANGES)) {
                return false;
            }
        }
        {
            TextFtMultiLines lhsINFOADD;
            lhsINFOADD = this.getINFOADD();
            TextFtMultiLines rhsINFOADD;
            rhsINFOADD = that.getINFOADD();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "infoadd", lhsINFOADD), LocatorUtils.property(thatLocator, "infoadd", rhsINFOADD), lhsINFOADD, rhsINFOADD)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            NonPublished thePUBLICATIONTED;
            thePUBLICATIONTED = this.getPUBLICATIONTED();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publicationted", thePUBLICATIONTED), currentHashCode, thePUBLICATIONTED);
        }
        {
            NonPublished theMODIFICATIONORIGINAL;
            theMODIFICATIONORIGINAL = this.getMODIFICATIONORIGINAL();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modificationoriginal", theMODIFICATIONORIGINAL), currentHashCode, theMODIFICATIONORIGINAL);
        }
        {
            List<ChangesF14 .CHANGE> theCHANGES;
            theCHANGES = (((this.changes!= null)&&(!this.changes.isEmpty()))?this.getCHANGES():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "changes", theCHANGES), currentHashCode, theCHANGES);
        }
        {
            TextFtMultiLines theINFOADD;
            theINFOADD = this.getINFOADD();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "infoadd", theINFOADD), currentHashCode, theINFOADD);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            NonPublished thePUBLICATIONTED;
            thePUBLICATIONTED = this.getPUBLICATIONTED();
            strategy.appendField(locator, this, "publicationted", buffer, thePUBLICATIONTED);
        }
        {
            NonPublished theMODIFICATIONORIGINAL;
            theMODIFICATIONORIGINAL = this.getMODIFICATIONORIGINAL();
            strategy.appendField(locator, this, "modificationoriginal", buffer, theMODIFICATIONORIGINAL);
        }
        {
            List<ChangesF14 .CHANGE> theCHANGES;
            theCHANGES = (((this.changes!= null)&&(!this.changes.isEmpty()))?this.getCHANGES():null);
            strategy.appendField(locator, this, "changes", buffer, theCHANGES);
        }
        {
            TextFtMultiLines theINFOADD;
            theINFOADD = this.getINFOADD();
            strategy.appendField(locator, this, "infoadd", buffer, theINFOADD);
        }
        return buffer;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}WHERE"/>
     *         &lt;element name="OLD_VALUE">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}data"/>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *         &lt;element name="NEW_VALUE">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}data"/>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "where",
        "oldvalue",
        "newvalue"
    })
    public static class CHANGE
        implements Equals, HashCode, ToString
    {

        @XmlElement(name = "WHERE", required = true)
        protected WHERE where;
        @XmlElement(name = "OLD_VALUE", required = true)
        protected ChangesF14 .CHANGE.OLDVALUE oldvalue;
        @XmlElement(name = "NEW_VALUE", required = true)
        protected ChangesF14 .CHANGE.NEWVALUE newvalue;

        /**
         * Gets the value of the where property.
         * 
         * @return
         *     possible object is
         *     {@link WHERE }
         *     
         */
        public WHERE getWHERE() {
            return where;
        }

        /**
         * Sets the value of the where property.
         * 
         * @param value
         *     allowed object is
         *     {@link WHERE }
         *     
         */
        public void setWHERE(WHERE value) {
            this.where = value;
        }

        /**
         * Gets the value of the oldvalue property.
         * 
         * @return
         *     possible object is
         *     {@link ChangesF14 .CHANGE.OLDVALUE }
         *     
         */
        public ChangesF14 .CHANGE.OLDVALUE getOLDVALUE() {
            return oldvalue;
        }

        /**
         * Sets the value of the oldvalue property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChangesF14 .CHANGE.OLDVALUE }
         *     
         */
        public void setOLDVALUE(ChangesF14 .CHANGE.OLDVALUE value) {
            this.oldvalue = value;
        }

        /**
         * Gets the value of the newvalue property.
         * 
         * @return
         *     possible object is
         *     {@link ChangesF14 .CHANGE.NEWVALUE }
         *     
         */
        public ChangesF14 .CHANGE.NEWVALUE getNEWVALUE() {
            return newvalue;
        }

        /**
         * Sets the value of the newvalue property.
         * 
         * @param value
         *     allowed object is
         *     {@link ChangesF14 .CHANGE.NEWVALUE }
         *     
         */
        public void setNEWVALUE(ChangesF14 .CHANGE.NEWVALUE value) {
            this.newvalue = value;
        }

        public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
            if (!(object instanceof ChangesF14 .CHANGE)) {
                return false;
            }
            if (this == object) {
                return true;
            }
            final ChangesF14 .CHANGE that = ((ChangesF14 .CHANGE) object);
            {
                WHERE lhsWHERE;
                lhsWHERE = this.getWHERE();
                WHERE rhsWHERE;
                rhsWHERE = that.getWHERE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "where", lhsWHERE), LocatorUtils.property(thatLocator, "where", rhsWHERE), lhsWHERE, rhsWHERE)) {
                    return false;
                }
            }
            {
                ChangesF14 .CHANGE.OLDVALUE lhsOLDVALUE;
                lhsOLDVALUE = this.getOLDVALUE();
                ChangesF14 .CHANGE.OLDVALUE rhsOLDVALUE;
                rhsOLDVALUE = that.getOLDVALUE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "oldvalue", lhsOLDVALUE), LocatorUtils.property(thatLocator, "oldvalue", rhsOLDVALUE), lhsOLDVALUE, rhsOLDVALUE)) {
                    return false;
                }
            }
            {
                ChangesF14 .CHANGE.NEWVALUE lhsNEWVALUE;
                lhsNEWVALUE = this.getNEWVALUE();
                ChangesF14 .CHANGE.NEWVALUE rhsNEWVALUE;
                rhsNEWVALUE = that.getNEWVALUE();
                if (!strategy.equals(LocatorUtils.property(thisLocator, "newvalue", lhsNEWVALUE), LocatorUtils.property(thatLocator, "newvalue", rhsNEWVALUE), lhsNEWVALUE, rhsNEWVALUE)) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object object) {
            final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
            return equals(null, null, object, strategy);
        }

        public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
            int currentHashCode = 1;
            {
                WHERE theWHERE;
                theWHERE = this.getWHERE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "where", theWHERE), currentHashCode, theWHERE);
            }
            {
                ChangesF14 .CHANGE.OLDVALUE theOLDVALUE;
                theOLDVALUE = this.getOLDVALUE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "oldvalue", theOLDVALUE), currentHashCode, theOLDVALUE);
            }
            {
                ChangesF14 .CHANGE.NEWVALUE theNEWVALUE;
                theNEWVALUE = this.getNEWVALUE();
                currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "newvalue", theNEWVALUE), currentHashCode, theNEWVALUE);
            }
            return currentHashCode;
        }

        public int hashCode() {
            final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
            return this.hashCode(null, strategy);
        }

        public String toString() {
            final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
            {
                WHERE theWHERE;
                theWHERE = this.getWHERE();
                strategy.appendField(locator, this, "where", buffer, theWHERE);
            }
            {
                ChangesF14 .CHANGE.OLDVALUE theOLDVALUE;
                theOLDVALUE = this.getOLDVALUE();
                strategy.appendField(locator, this, "oldvalue", buffer, theOLDVALUE);
            }
            {
                ChangesF14 .CHANGE.NEWVALUE theNEWVALUE;
                theNEWVALUE = this.getNEWVALUE();
                strategy.appendField(locator, this, "newvalue", buffer, theNEWVALUE);
            }
            return buffer;
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}data"/>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "date",
            "time",
            "text",
            "cpvadditionals",
            "cpvmain",
            "nothing"
        })
        public static class NEWVALUE
            implements Equals, HashCode, ToString
        {

            @XmlElement(name = "DATE")
            protected XMLGregorianCalendar date;
            @XmlElement(name = "TIME")
            protected String time;
            @XmlElement(name = "TEXT")
            protected TextFtMultiLines text;
            @XmlElement(name = "CPV_ADDITIONAL")
            protected List<CpvSet> cpvadditionals;
            @XmlElement(name = "CPV_MAIN")
            protected CpvSet cpvmain;
            @XmlElement(name = "NOTHING")
            protected Empty nothing;

            /**
             * Gets the value of the date property.
             * 
             * @return
             *     possible object is
             *     {@link XMLGregorianCalendar }
             *     
             */
            public XMLGregorianCalendar getDATE() {
                return date;
            }

            /**
             * Sets the value of the date property.
             * 
             * @param value
             *     allowed object is
             *     {@link XMLGregorianCalendar }
             *     
             */
            public void setDATE(XMLGregorianCalendar value) {
                this.date = value;
            }

            /**
             * Gets the value of the time property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getTIME() {
                return time;
            }

            /**
             * Sets the value of the time property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setTIME(String value) {
                this.time = value;
            }

            /**
             * Gets the value of the text property.
             * 
             * @return
             *     possible object is
             *     {@link TextFtMultiLines }
             *     
             */
            public TextFtMultiLines getTEXT() {
                return text;
            }

            /**
             * Sets the value of the text property.
             * 
             * @param value
             *     allowed object is
             *     {@link TextFtMultiLines }
             *     
             */
            public void setTEXT(TextFtMultiLines value) {
                this.text = value;
            }

            /**
             * Gets the value of the cpvadditionals property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the cpvadditionals property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getCPVADDITIONALS().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link CpvSet }
             * 
             * 
             */
            public List<CpvSet> getCPVADDITIONALS() {
                if (cpvadditionals == null) {
                    cpvadditionals = new ArrayList<CpvSet>();
                }
                return this.cpvadditionals;
            }

            /**
             * Gets the value of the cpvmain property.
             * 
             * @return
             *     possible object is
             *     {@link CpvSet }
             *     
             */
            public CpvSet getCPVMAIN() {
                return cpvmain;
            }

            /**
             * Sets the value of the cpvmain property.
             * 
             * @param value
             *     allowed object is
             *     {@link CpvSet }
             *     
             */
            public void setCPVMAIN(CpvSet value) {
                this.cpvmain = value;
            }

            /**
             * Gets the value of the nothing property.
             * 
             * @return
             *     possible object is
             *     {@link Empty }
             *     
             */
            public Empty getNOTHING() {
                return nothing;
            }

            /**
             * Sets the value of the nothing property.
             * 
             * @param value
             *     allowed object is
             *     {@link Empty }
             *     
             */
            public void setNOTHING(Empty value) {
                this.nothing = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof ChangesF14 .CHANGE.NEWVALUE)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final ChangesF14 .CHANGE.NEWVALUE that = ((ChangesF14 .CHANGE.NEWVALUE) object);
                {
                    XMLGregorianCalendar lhsDATE;
                    lhsDATE = this.getDATE();
                    XMLGregorianCalendar rhsDATE;
                    rhsDATE = that.getDATE();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "date", lhsDATE), LocatorUtils.property(thatLocator, "date", rhsDATE), lhsDATE, rhsDATE)) {
                        return false;
                    }
                }
                {
                    String lhsTIME;
                    lhsTIME = this.getTIME();
                    String rhsTIME;
                    rhsTIME = that.getTIME();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "time", lhsTIME), LocatorUtils.property(thatLocator, "time", rhsTIME), lhsTIME, rhsTIME)) {
                        return false;
                    }
                }
                {
                    TextFtMultiLines lhsTEXT;
                    lhsTEXT = this.getTEXT();
                    TextFtMultiLines rhsTEXT;
                    rhsTEXT = that.getTEXT();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsTEXT), LocatorUtils.property(thatLocator, "text", rhsTEXT), lhsTEXT, rhsTEXT)) {
                        return false;
                    }
                }
                {
                    List<CpvSet> lhsCPVADDITIONALS;
                    lhsCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                    List<CpvSet> rhsCPVADDITIONALS;
                    rhsCPVADDITIONALS = (((that.cpvadditionals!= null)&&(!that.cpvadditionals.isEmpty()))?that.getCPVADDITIONALS():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvadditionals", lhsCPVADDITIONALS), LocatorUtils.property(thatLocator, "cpvadditionals", rhsCPVADDITIONALS), lhsCPVADDITIONALS, rhsCPVADDITIONALS)) {
                        return false;
                    }
                }
                {
                    CpvSet lhsCPVMAIN;
                    lhsCPVMAIN = this.getCPVMAIN();
                    CpvSet rhsCPVMAIN;
                    rhsCPVMAIN = that.getCPVMAIN();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvmain", lhsCPVMAIN), LocatorUtils.property(thatLocator, "cpvmain", rhsCPVMAIN), lhsCPVMAIN, rhsCPVMAIN)) {
                        return false;
                    }
                }
                {
                    Empty lhsNOTHING;
                    lhsNOTHING = this.getNOTHING();
                    Empty rhsNOTHING;
                    rhsNOTHING = that.getNOTHING();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "nothing", lhsNOTHING), LocatorUtils.property(thatLocator, "nothing", rhsNOTHING), lhsNOTHING, rhsNOTHING)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    XMLGregorianCalendar theDATE;
                    theDATE = this.getDATE();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "date", theDATE), currentHashCode, theDATE);
                }
                {
                    String theTIME;
                    theTIME = this.getTIME();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "time", theTIME), currentHashCode, theTIME);
                }
                {
                    TextFtMultiLines theTEXT;
                    theTEXT = this.getTEXT();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theTEXT), currentHashCode, theTEXT);
                }
                {
                    List<CpvSet> theCPVADDITIONALS;
                    theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvadditionals", theCPVADDITIONALS), currentHashCode, theCPVADDITIONALS);
                }
                {
                    CpvSet theCPVMAIN;
                    theCPVMAIN = this.getCPVMAIN();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvmain", theCPVMAIN), currentHashCode, theCPVMAIN);
                }
                {
                    Empty theNOTHING;
                    theNOTHING = this.getNOTHING();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nothing", theNOTHING), currentHashCode, theNOTHING);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    XMLGregorianCalendar theDATE;
                    theDATE = this.getDATE();
                    strategy.appendField(locator, this, "date", buffer, theDATE);
                }
                {
                    String theTIME;
                    theTIME = this.getTIME();
                    strategy.appendField(locator, this, "time", buffer, theTIME);
                }
                {
                    TextFtMultiLines theTEXT;
                    theTEXT = this.getTEXT();
                    strategy.appendField(locator, this, "text", buffer, theTEXT);
                }
                {
                    List<CpvSet> theCPVADDITIONALS;
                    theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                    strategy.appendField(locator, this, "cpvadditionals", buffer, theCPVADDITIONALS);
                }
                {
                    CpvSet theCPVMAIN;
                    theCPVMAIN = this.getCPVMAIN();
                    strategy.appendField(locator, this, "cpvmain", buffer, theCPVMAIN);
                }
                {
                    Empty theNOTHING;
                    theNOTHING = this.getNOTHING();
                    strategy.appendField(locator, this, "nothing", buffer, theNOTHING);
                }
                return buffer;
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;group ref="{http://formex.publications.europa.eu/ted/schema/reception/R2.0.9.S01}data"/>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "date",
            "time",
            "text",
            "cpvadditionals",
            "cpvmain",
            "nothing"
        })
        public static class OLDVALUE
            implements Equals, HashCode, ToString
        {

            @XmlElement(name = "DATE")
            protected XMLGregorianCalendar date;
            @XmlElement(name = "TIME")
            protected String time;
            @XmlElement(name = "TEXT")
            protected TextFtMultiLines text;
            @XmlElement(name = "CPV_ADDITIONAL")
            protected List<CpvSet> cpvadditionals;
            @XmlElement(name = "CPV_MAIN")
            protected CpvSet cpvmain;
            @XmlElement(name = "NOTHING")
            protected Empty nothing;

            /**
             * Gets the value of the date property.
             * 
             * @return
             *     possible object is
             *     {@link XMLGregorianCalendar }
             *     
             */
            public XMLGregorianCalendar getDATE() {
                return date;
            }

            /**
             * Sets the value of the date property.
             * 
             * @param value
             *     allowed object is
             *     {@link XMLGregorianCalendar }
             *     
             */
            public void setDATE(XMLGregorianCalendar value) {
                this.date = value;
            }

            /**
             * Gets the value of the time property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getTIME() {
                return time;
            }

            /**
             * Sets the value of the time property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setTIME(String value) {
                this.time = value;
            }

            /**
             * Gets the value of the text property.
             * 
             * @return
             *     possible object is
             *     {@link TextFtMultiLines }
             *     
             */
            public TextFtMultiLines getTEXT() {
                return text;
            }

            /**
             * Sets the value of the text property.
             * 
             * @param value
             *     allowed object is
             *     {@link TextFtMultiLines }
             *     
             */
            public void setTEXT(TextFtMultiLines value) {
                this.text = value;
            }

            /**
             * Gets the value of the cpvadditionals property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the cpvadditionals property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getCPVADDITIONALS().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link CpvSet }
             * 
             * 
             */
            public List<CpvSet> getCPVADDITIONALS() {
                if (cpvadditionals == null) {
                    cpvadditionals = new ArrayList<CpvSet>();
                }
                return this.cpvadditionals;
            }

            /**
             * Gets the value of the cpvmain property.
             * 
             * @return
             *     possible object is
             *     {@link CpvSet }
             *     
             */
            public CpvSet getCPVMAIN() {
                return cpvmain;
            }

            /**
             * Sets the value of the cpvmain property.
             * 
             * @param value
             *     allowed object is
             *     {@link CpvSet }
             *     
             */
            public void setCPVMAIN(CpvSet value) {
                this.cpvmain = value;
            }

            /**
             * Gets the value of the nothing property.
             * 
             * @return
             *     possible object is
             *     {@link Empty }
             *     
             */
            public Empty getNOTHING() {
                return nothing;
            }

            /**
             * Sets the value of the nothing property.
             * 
             * @param value
             *     allowed object is
             *     {@link Empty }
             *     
             */
            public void setNOTHING(Empty value) {
                this.nothing = value;
            }

            public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
                if (!(object instanceof ChangesF14 .CHANGE.OLDVALUE)) {
                    return false;
                }
                if (this == object) {
                    return true;
                }
                final ChangesF14 .CHANGE.OLDVALUE that = ((ChangesF14 .CHANGE.OLDVALUE) object);
                {
                    XMLGregorianCalendar lhsDATE;
                    lhsDATE = this.getDATE();
                    XMLGregorianCalendar rhsDATE;
                    rhsDATE = that.getDATE();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "date", lhsDATE), LocatorUtils.property(thatLocator, "date", rhsDATE), lhsDATE, rhsDATE)) {
                        return false;
                    }
                }
                {
                    String lhsTIME;
                    lhsTIME = this.getTIME();
                    String rhsTIME;
                    rhsTIME = that.getTIME();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "time", lhsTIME), LocatorUtils.property(thatLocator, "time", rhsTIME), lhsTIME, rhsTIME)) {
                        return false;
                    }
                }
                {
                    TextFtMultiLines lhsTEXT;
                    lhsTEXT = this.getTEXT();
                    TextFtMultiLines rhsTEXT;
                    rhsTEXT = that.getTEXT();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsTEXT), LocatorUtils.property(thatLocator, "text", rhsTEXT), lhsTEXT, rhsTEXT)) {
                        return false;
                    }
                }
                {
                    List<CpvSet> lhsCPVADDITIONALS;
                    lhsCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                    List<CpvSet> rhsCPVADDITIONALS;
                    rhsCPVADDITIONALS = (((that.cpvadditionals!= null)&&(!that.cpvadditionals.isEmpty()))?that.getCPVADDITIONALS():null);
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvadditionals", lhsCPVADDITIONALS), LocatorUtils.property(thatLocator, "cpvadditionals", rhsCPVADDITIONALS), lhsCPVADDITIONALS, rhsCPVADDITIONALS)) {
                        return false;
                    }
                }
                {
                    CpvSet lhsCPVMAIN;
                    lhsCPVMAIN = this.getCPVMAIN();
                    CpvSet rhsCPVMAIN;
                    rhsCPVMAIN = that.getCPVMAIN();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "cpvmain", lhsCPVMAIN), LocatorUtils.property(thatLocator, "cpvmain", rhsCPVMAIN), lhsCPVMAIN, rhsCPVMAIN)) {
                        return false;
                    }
                }
                {
                    Empty lhsNOTHING;
                    lhsNOTHING = this.getNOTHING();
                    Empty rhsNOTHING;
                    rhsNOTHING = that.getNOTHING();
                    if (!strategy.equals(LocatorUtils.property(thisLocator, "nothing", lhsNOTHING), LocatorUtils.property(thatLocator, "nothing", rhsNOTHING), lhsNOTHING, rhsNOTHING)) {
                        return false;
                    }
                }
                return true;
            }

            public boolean equals(Object object) {
                final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            }

            public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
                int currentHashCode = 1;
                {
                    XMLGregorianCalendar theDATE;
                    theDATE = this.getDATE();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "date", theDATE), currentHashCode, theDATE);
                }
                {
                    String theTIME;
                    theTIME = this.getTIME();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "time", theTIME), currentHashCode, theTIME);
                }
                {
                    TextFtMultiLines theTEXT;
                    theTEXT = this.getTEXT();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theTEXT), currentHashCode, theTEXT);
                }
                {
                    List<CpvSet> theCPVADDITIONALS;
                    theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvadditionals", theCPVADDITIONALS), currentHashCode, theCPVADDITIONALS);
                }
                {
                    CpvSet theCPVMAIN;
                    theCPVMAIN = this.getCPVMAIN();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cpvmain", theCPVMAIN), currentHashCode, theCPVMAIN);
                }
                {
                    Empty theNOTHING;
                    theNOTHING = this.getNOTHING();
                    currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "nothing", theNOTHING), currentHashCode, theNOTHING);
                }
                return currentHashCode;
            }

            public int hashCode() {
                final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            }

            public String toString() {
                final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
                final StringBuilder buffer = new StringBuilder();
                append(null, buffer, strategy);
                return buffer.toString();
            }

            public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                strategy.appendStart(locator, this, buffer);
                appendFields(locator, buffer, strategy);
                strategy.appendEnd(locator, this, buffer);
                return buffer;
            }

            public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
                {
                    XMLGregorianCalendar theDATE;
                    theDATE = this.getDATE();
                    strategy.appendField(locator, this, "date", buffer, theDATE);
                }
                {
                    String theTIME;
                    theTIME = this.getTIME();
                    strategy.appendField(locator, this, "time", buffer, theTIME);
                }
                {
                    TextFtMultiLines theTEXT;
                    theTEXT = this.getTEXT();
                    strategy.appendField(locator, this, "text", buffer, theTEXT);
                }
                {
                    List<CpvSet> theCPVADDITIONALS;
                    theCPVADDITIONALS = (((this.cpvadditionals!= null)&&(!this.cpvadditionals.isEmpty()))?this.getCPVADDITIONALS():null);
                    strategy.appendField(locator, this, "cpvadditionals", buffer, theCPVADDITIONALS);
                }
                {
                    CpvSet theCPVMAIN;
                    theCPVMAIN = this.getCPVMAIN();
                    strategy.appendField(locator, this, "cpvmain", buffer, theCPVMAIN);
                }
                {
                    Empty theNOTHING;
                    theNOTHING = this.getNOTHING();
                    strategy.appendField(locator, this, "nothing", buffer, theNOTHING);
                }
                return buffer;
            }

        }

    }

}
